#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x1F0 (0x600 - 0x410)
// WidgetBlueprintGeneratedClass W_WeaponWheel.W_WeaponWheel_C
class UW_WeaponWheel_C : public UWeaponWheelWidget
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0x410(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UBackgroundBlur*                       BackgroundBlur;                                    // 0x418(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                        Controls_Container;                                // 0x420(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_DebugInfoContainer_C*               DebugInfoContainer_Items;                          // 0x428(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_DebugInfoContainer_C*               DebugInfoContainer_Logic;                          // 0x430(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_DebugInfoContainer_C*               DebugInfoContainer_Settings;                       // 0x438(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                Image_250;                                         // 0x440(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                              TestSmoothCursor;                                  // 0x448(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                            WeaponStat_Category_Text;                          // 0x450(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                            WeaponStat_ItemName_Text;                          // 0x458(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                WeaponWheel_Background;                            // 0x460(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                WeaponWheel_InnerBorder;                           // 0x468(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                          WeaponWheel_ItemInfo_Container;                    // 0x470(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                          WeaponWheel_ItemStats_Container;                   // 0x478(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponWheel_MultiItem_Selection_C*  WeaponWheel_MultiItem_Selection;                   // 0x480(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                WeaponWheel_OuterBorder;                           // 0x488(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                          WeaponWheelArea;                                   // 0x490(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<class FName, class UW_WeaponWheel_RadialSelection_C*> WheelCategoryToRadialSelectionWidget;              // 0x498(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UW_WeaponWheel_ItemStat_C*>     ItemStats;                                         // 0x4E8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UW_WeaponWheel_RadialSelection_C*> WeaponWheelCategories;                             // 0x4F8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class ABaseItem*>                     ItemCategories;                                    // 0x508(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	enum class EEasingFunc                       StatGrowthEffect;                                  // 0x518(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                        Pad_4547[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StatGrowthSpeed;                                   // 0x51C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                        CategoryTextFontSize;                              // 0x520(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                        ItemTextFontSize;                                  // 0x524(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class ABaseItem*>                     Primary_Weapons;                                   // 0x528(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, ExposeOnSpawn)
	TArray<class ABaseItem*>                     Secondary_Weapons;                                 // 0x538(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, ExposeOnSpawn)
	TArray<class ABaseItem*>                     Grenades;                                          // 0x548(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, ExposeOnSpawn)
	TArray<class ABaseItem*>                     Assistants;                                        // 0x558(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, ExposeOnSpawn)
	TArray<class ABaseItem*>                     Tactical_Devices;                                  // 0x568(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, ExposeOnSpawn)
	TArray<class ABaseItem*>                     TabletDevices;                                     // 0x578(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, ExposeOnSpawn)
	class UW_WeaponWheel_RadialSelection_C*      CurrentSelectedRadialWidget;                       // 0x588(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_WeaponWheel_RadialSelection_C*      PreviousSelectedRadialWidget;                      // 0x590(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            CategoryDeselected;                                // 0x598(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            CategorySelected;                                  // 0x5A8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            ItemSelected;                                      // 0x5B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            ItemDeselected;                                    // 0x5C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                        MaxItemStats;                                      // 0x5D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_4548[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UClass*>                        ItemExecutables;                                   // 0x5E0(0x10)(Edit, BlueprintVisible, ExposeOnSpawn)
	TArray<class UWeaponWheelScript*>            ItemExecutableScripts;                             // 0x5F0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)

	static class UClass* StaticClass();
	static class UW_WeaponWheel_C* GetDefaultObj();

	bool RemoveNullItemsFromAllCategories(bool CallFunc_RemoveNullItemsFromAllCategories_ReturnValue);
	bool RemoveNullItemsFromCategory(class FName& WeaponWheelCategoryName, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void IsItemAtBack(class ABaseItem* Item, bool* Return_Value, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_IsItemAtIndex_Return_Value);
	void IsItemAtFront(class ABaseItem* Item, bool* Return_Value, bool CallFunc_IsItemAtIndex_Return_Value);
	void IsItemAtIndex(class ABaseItem* Item, int32 Index, bool* Return_Value, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsValid_ReturnValue, int32 Temp_int_Array_Index_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UObject* CallFunc_Array_Get_Item, class ABaseItem* K2Node_DynamicCast_AsBase_Item, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	void ClearStats();
	void UpdateDebugInformation(class FText CallFunc_Conv_FloatToText_ReturnValue, class UW_DebugInfo_C* CallFunc_Get_Debug_Item__Index__DebugInfoWidget, class FText CallFunc_Conv_FloatToText_ReturnValue_1, class UW_DebugInfo_C* CallFunc_Get_Debug_Item__Index__DebugInfoWidget_1, class FText CallFunc_Conv_FloatToText_ReturnValue_2, class UW_DebugInfo_C* CallFunc_Get_Debug_Item__Index__DebugInfoWidget_2, class FText CallFunc_Conv_FloatToText_ReturnValue_3, class UW_DebugInfo_C* CallFunc_Get_Debug_Item__Index__DebugInfoWidget_3, class FText CallFunc_Conv_FloatToText_ReturnValue_4, class UW_DebugInfo_C* CallFunc_Get_Debug_Item__Index__DebugInfoWidget_4, class FText CallFunc_Conv_FloatToText_ReturnValue_5, class UW_DebugInfo_C* CallFunc_Get_Debug_Item__Index__DebugInfoWidget_5, bool CallFunc_IsValid_ReturnValue, class FText CallFunc_Conv_NameToText_ReturnValue, class UW_DebugInfo_C* CallFunc_Get_Debug_Item__Index__DebugInfoWidget_6, float CallFunc_GetCorrectAngle_ReturnValue, class FText CallFunc_Conv_FloatToText_ReturnValue_6, class UW_DebugInfo_C* CallFunc_Get_Debug_Item__Index__DebugInfoWidget_7, float CallFunc_GetRenderTransformAngle_ReturnValue, class FText CallFunc_Conv_FloatToText_ReturnValue_7, class UW_DebugInfo_C* CallFunc_Get_Debug_Item__Index__DebugInfoWidget_8, class UW_DebugInfo_C* CallFunc_Get_Debug_Item__Index__DebugInfoWidget_9, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_2, class FText CallFunc_Conv_IntToText_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue_1, class UW_DebugInfo_C* CallFunc_Get_Debug_Item__Index__DebugInfoWidget_10, int32 CallFunc_Array_Length_ReturnValue_3, class FText CallFunc_Conv_IntToText_ReturnValue_2, class UW_DebugInfo_C* CallFunc_Get_Debug_Item__Index__DebugInfoWidget_11, class FText CallFunc_Conv_IntToText_ReturnValue_3, class UW_DebugInfo_C* CallFunc_Get_Debug_Item__Index__DebugInfoWidget_12, class FText CallFunc_Conv_IntToText_ReturnValue_4, class UW_DebugInfo_C* CallFunc_Get_Debug_Item__Index__DebugInfoWidget_13);
	void RemoveExecutableItemFromCategory(class UClass* NewWeaponWheelScript, int32 AtIndex, class UWeaponWheelScript* CallFunc_Array_Get_Item, const class FString& CallFunc_Conv_TextToString_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void AddExecutableItemToCategory(class UClass* NewWeaponWheelScript, int32 AtIndex, bool Temp_bool_True_if_break_was_hit_Variable, const class FString& CallFunc_Conv_TextToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, class UWeaponWheelScript* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class UClass* CallFunc_GetObjectClass_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_ClassClass_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class UWeaponWheelScript* CallFunc_SpawnObject_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue_1, class FName CallFunc_Conv_StringToName_ReturnValue_1, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void ShuffleItemsInCategory(class FName CategoryName, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void GetCurrentICategorytemCount(int32* Return_Value, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Array_Length_ReturnValue);
	void GetCurrentItemSelectionIndex(int32* Return_Value, bool CallFunc_IsValid_ReturnValue);
	void MoveItemToAnotherCategory__Index_(int32 ItemIndex, class FName FromCategory, class FName ToCategory, int32 NewIndexInCategory, class ABaseItem* SavedItem, const class FString& CallFunc_Conv_NameToString_ReturnValue, const class FString& CallFunc_Conv_NameToString_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Conv_NameToString_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, int32 CallFunc_Array_Find_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, class UW_WeaponWheel_RadialSelection_C* CallFunc_Array_Get_Item, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class ABaseItem* CallFunc_Array_Get_Item_1, bool CallFunc_Array_Contains_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, const class FString& CallFunc_Concat_StrStr_ReturnValue_6, const class FString& CallFunc_Concat_StrStr_ReturnValue_7);
	void MoveItemToAnotherCategory(class ABaseItem* Item, class FName ToCategory, int32 NewIndexInCategory, const class FString& CallFunc_Conv_NameToString_ReturnValue, const class FString& CallFunc_Conv_NameToString_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Conv_TextToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, const class FString& CallFunc_Conv_NameToString_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, const class FString& CallFunc_Concat_StrStr_ReturnValue_6, const class FString& CallFunc_Concat_StrStr_ReturnValue_7, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, bool CallFunc_Array_Contains_ReturnValue);
	void MoveItemToNewSpot__Index_(int32 ItemIndex, class FName CategoryName, int32 NewIndex, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class ABaseItem* CallFunc_Array_Get_Item);
	void MoveItemToNewSpot(class ABaseItem* Item, int32 NewIndex, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void MoveItemToBack(class ABaseItem* Item, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void MoveItemToFront(class ABaseItem* Item, bool CallFunc_IsValid_ReturnValue, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void MoveItemToBack__Index_(int32 ItemIndex, class FName CategoryName, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class ABaseItem* CallFunc_Array_Get_Item);
	void MoveItemToFront__Index_(int32 ItemIndex, class FName CategoryName, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class ABaseItem* CallFunc_Array_Get_Item);
	void RemoveAssistant(class ABaseItem* AssistantItem);
	void RemoveTabletDevice(class ABaseItem* TabletDeviceItem);
	void RemoveTactical_Devices(class ABaseItem* DoorDeviceItem);
	void RemoveGrenade(class ABaseItem* GrenadeItem);
	void RemoveSecondaryWeapon(class ABaseItem* SecondaryWeaponItem);
	void RemovePrimaryWeapon(class ABaseItem* PrimaryWeaponItem);
	void RemoveItemFromCategory(class ABaseItem*& Item, class FName Wheel_Category, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void AddItemToCategory(class ABaseItem*& Item, class FName Wheel_Category, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void AddTabletDevice(class ABaseItem*& TabletDevice_Item);
	void AddTactical_Device(class ABaseItem*& Tactical_Device_Item);
	void AddAssistants(class ABaseItem*& Assistants);
	void AddGrenade(class ABaseItem*& GrenadeItem);
	void AddSecondaryWeapon(class ABaseItem*& SecondayWeaponItem);
	void AddPrimaryWeapon(class ABaseItem* PrimaryWeaponItem);
	void RefreshMultiItemWidget(int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_2, int32 CallFunc_Array_Length_ReturnValue_3, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue);
	bool IsWheelCursorVisible(bool CallFunc_IsVisible_ReturnValue);
	bool OnRadialMenuInitialized(float CallFunc_MapRangeClamped_ReturnValue, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, bool CallFunc_OnRadialMenuInitialized_ReturnValue);
	bool OnRadialSectorCreated(int32 Index, float InAngle, bool CallFunc_OnRadialSectorCreated_ReturnValue, class UCanvasPanelSlot* CallFunc_CreateWheelCategory_Canvas_Panel_Slot, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, const struct FVector2D& CallFunc_GetPosition_ReturnValue, const struct FVector2D& CallFunc_CalculatePositionOnCircleFromWidget_ReturnValue);
	bool ExecuteRadial(bool CallFunc_ExecuteRadial_ReturnValue);
	bool ShowWheel();
	bool HideWheel();
	void NotifyAllStatsOnWheelCreated(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UW_WeaponWheel_ItemStat_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void NotifyAllCategoriesOnWheelCreated(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UW_WeaponWheel_RadialSelection_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void FindDataTableRowNameFromItemName(class FName ItemName, class FName* RowName, class FText CallFunc_Conv_NameToText_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UDataTable* CallFunc_GetItemLookupDataTable_ReturnValue, TArray<class FName>& CallFunc_GetDataTableRowNames_OutRowNames, int32 CallFunc_Array_Length_ReturnValue, class FName CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, const struct FItemLookupTable& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, bool CallFunc_EqualEqual_TextText_ReturnValue);
	void StatEnumToName(uint8 Item_Stat, class FName* Stat_Name, bool K2Node_SwitchEnum_CmpSuccess);
	void RefreshStats(TArray<class UClass*>& ItemStats, const struct FItemLookupTable& ItemDataTable, bool Temp_bool_True_if_break_was_hit_Variable, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 Temp_int_Variable, class UClass* CallFunc_Array_Get_Item, class UClass* K2Node_ClassDynamicCast_AsW_Weapon_Wheel_Item_Stat, bool K2Node_ClassDynamicCast_bSuccess, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, bool Temp_bool_Variable, bool CallFunc_Not_PreBool_ReturnValue_1, class UW_WeaponWheel_ItemStat_C* CallFunc_CreateWheelStat_ItemStatWidget, class UW_WeaponWheel_ItemStat_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Clamp_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	void RefreshCategory(TArray<class ABaseItem*>& New_Category_Items, TArray<class UWeaponWheelScript*>& NewWeaponWheelScripts, class FName Category_Name, int32 StartingItemIndex, int32 CallFunc_Array_Find_ReturnValue, class UW_WeaponWheel_RadialSelection_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Find_ReturnValue_1, class UW_WeaponWheel_RadialSelection_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue, class UW_WeaponWheel_RadialSelection_C* CallFunc_Array_Get_Item_2, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue);
	void UpdateTabletDevices(TArray<class ABaseItem*>& NewTabletDevices, int32 StartingItemIndex, class FName Temp_name_Variable, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void UpdateTacticalDevices(TArray<class ABaseItem*>& NewDoorDevices, int32 StartingItemIndex, class FName Temp_name_Variable, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void UpdateAssistants(TArray<class ABaseItem*>& NewAssistants, int32 StartingItemIndex, class FName Temp_name_Variable, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void UpdateGrenades(TArray<class ABaseItem*>& NewGrenades, int32 StartingItemIndex, class FName Temp_name_Variable, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void UpdateSecondaryWeapons(TArray<class ABaseItem*>& NewSecondaryWeapons, int32 StartingItemIndex, class FName Temp_name_Variable, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void UpdatePrimaryWeapons(TArray<class ABaseItem*>& New_Primary_Weapons, int32 StartingItemIndex, class FName Temp_name_Variable, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void PreviousItem(bool CallFunc_IsValid_ReturnValue, bool CallFunc_PreviousItem_bSuccess, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Previous_bSuccess);
	void NextItem(bool CallFunc_IsValid_ReturnValue, bool CallFunc_NextItem_bSuccess, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Next_bSuccess);
	void PopulateAllCategories(int32 Temp_int_Array_Index_Variable, class UClass* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void PopulateCategory(TArray<class ABaseItem*>& Items, class FName Category_Name_, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class ABaseItem* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class UW_WeaponWheel_RadialSelection_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void PlaceWidgetInWheel(class UCanvasPanelSlot*& Canvas_Slot, const struct FVector2D& Positionn);
	void SelectItem(class UW_WeaponWheel_RadialSelection_C* ItemToSelect, bool Play_Animation, bool Play_Sound, bool Refresh_Stats, bool* bSuccess, class UDataTable* CallFunc_GetItemLookupDataTable_ReturnValue, class FName CallFunc_GetItemName_Item_Name, class FName CallFunc_GetItemName_Item_Name_1, class FName CallFunc_FindDataTableRowNameFromItemName_RowName, class FText CallFunc_Conv_NameToText_ReturnValue, const struct FItemLookupTable& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, class FText CallFunc_GetCategory_Category, bool CallFunc_IsValid_ReturnValue, const struct FLinearColor& CallFunc_GetCorrectSelectionColor_ReturnValue, bool CallFunc_IsInExecutablesArray_Return_Value);
	void CreateWheelStat(class UClass* ItemStatClass, float FillSpeed, enum class EEasingFunc EasingFunction, const struct FItemLookupTable& LookupTable, class UW_WeaponWheel_ItemStat_C** ItemStatWidget, float CallFunc_MapRangeClamped_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue_1, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class UW_WeaponWheel_ItemStat_C* CallFunc_Create_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, class UVerticalBoxSlot* CallFunc_AddChildToVerticalBox_ReturnValue);
	void CreateWheelCategory(int32 Index, class FName Category_Name, class UCanvasPanelSlot** Canvas_Panel_Slot, class FText CallFunc_Conv_NameToText_ReturnValue, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class ABaseItem* CallFunc_Array_Get_Item, class UW_WeaponWheel_RadialSelection_C* CallFunc_Create_ReturnValue, class UCanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, const struct FAnchors& CallFunc_GetAnchors_ReturnValue);
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnItemSelcted(bool Play_Animation);
	void OnItemDeselected();
	void OnSectorSelected(int32 SelectedIndex);
	void OnSectorDeselected(int32 DeselectedIndex);
	void OnRadialMenuCreated();
	void PreConstruct(bool IsDesignTime);
	void ExecuteUbergraph_W_WeaponWheel(int32 EntryPoint, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, bool K2Node_CustomEvent_Play_Animation, bool CallFunc_SelectItem_bSuccess, bool CallFunc_SelectItem_bSuccess_1, class FName CallFunc_GetItemName_Item_Name, class FName CallFunc_GetItemName_Item_Name_1, class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, class UMaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, class ABaseItem* CallFunc_Array_Get_Item, class ABaseItem* CallFunc_Array_Get_Item_1, class ABaseItem* CallFunc_Array_Get_Item_2, class ABaseItem* CallFunc_Array_Get_Item_3, class ABaseItem* CallFunc_Array_Get_Item_4, class ABaseItem* CallFunc_Array_Get_Item_5, TArray<class ABaseItem*>& K2Node_MakeArray_Array, float CallFunc_Conv_IntToFloat_ReturnValue, int32 K2Node_Event_SelectedIndex, float CallFunc_Conv_IntToFloat_ReturnValue_1, class UW_WeaponWheel_RadialSelection_C* CallFunc_Array_Get_Item_6, int32 K2Node_Event_DeselectedIndex, class UW_WeaponWheel_RadialSelection_C* CallFunc_Array_Get_Item_7, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue_1, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue_1, int32 CallFunc_FTrunc_ReturnValue_1, const struct FVector2D& CallFunc_GetCenterScreenPosition_ReturnValue, bool K2Node_Event_IsDesignTime, enum class ERONBuildConfiguration CallFunc_GetBuildConfiguration_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, const struct FSlateFontInfo& K2Node_MakeStruct_SlateFontInfo, const struct FSlateFontInfo& K2Node_MakeStruct_SlateFontInfo_1);
	void ItemDeselected__DelegateSignature(int32 Category_Index, class FName Category_Name, int32 Item_Index, class FName Item_Name);
	void ItemSelected__DelegateSignature(int32 Category_Index, class FName Category_Name, int32 Item_Index, class FName Item_Name);
	void CategorySelected__DelegateSignature(int32 Category_Index, class FName Category_Name);
	void CategoryDeselected__DelegateSignature(int32 Category_Index, class FName Category_Name);
};

}


