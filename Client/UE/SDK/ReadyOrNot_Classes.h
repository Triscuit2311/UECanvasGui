#pragma once

/**
 * Name: ron
 * Version: 25346
 */

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace SDK
{
	// --------------------------------------------------
	// # Classes
	// --------------------------------------------------
	/**
	 * Class ReadyOrNot.AIActionGate
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UAIActionGate : public UObject
	{
	public:
		bool CanOpen(const struct FAIActionDecisionContext& Context);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AccuracyVolume
	 * Size -> 0x0008 (FullSize[0x0260] - InheritedSize[0x0258])
	 */
	class AAccuracyVolume : public AVolume
	{
	public:
		float                                                        AccuracyNerfPercentage;                                  // 0x0258(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAffectsSWAT : 1;                                        // 0x025C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAffectsSuspects : 1;                                    // 0x025C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x025D(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AIActionPresetData
	 * Size -> 0x02C8 (FullSize[0x02F8] - InheritedSize[0x0030])
	 */
	class UAIActionPresetData : public UDataAsset
	{
	public:
		struct FAIActionData                                         Action;                                                  // 0x0030(0x02C8) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ActivityState
	 * Size -> 0x0070 (FullSize[0x0098] - InheritedSize[0x0028])
	 */
	class UActivityState : public UObject
	{
	public:
		class FScriptDelegate                                        OnEnter;                                                 // 0x0028(0x0010) ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic
		class FScriptDelegate                                        OnExit;                                                  // 0x0038(0x0010) ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic
		class FScriptDelegate                                        OnTick;                                                  // 0x0048(0x0010) ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic
		class FString                                                Name;                                                    // 0x0058(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      ID;                                                      // 0x0068(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        Uptime;                                                  // 0x006C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UActivityFiniteStateMachine*                           StateMachineOwner;                                       // 0x0070(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x20];                                  // 0x0078(0x0020) MISSED OFFSET (PADDING)

	public:
		class UActivityState* CreateTransition(const struct FActivityStateTransition& InStateTransition);
		class UActivityState* BindEventTick(const class FScriptDelegate& Delegate);
		class UActivityState* BindEventExit(const class FScriptDelegate& Delegate);
		class UActivityState* BindEventEnter(const class FScriptDelegate& Delegate);
		void ActivityStateUpdate__DelegateSignature(float DeltaTime, float Uptime);
		void ActivityStateEvent__DelegateSignature();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ActorSpawnPoint
	 * Size -> 0x0018 (FullSize[0x0238] - InheritedSize[0x0220])
	 */
	class AActorSpawnPoint : public AActor
	{
	public:
		class USceneComponent*                                       SceneComponent;                                          // 0x0220(0x0008) Edit, ExportObject, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBillboardComponent*                                   BillboardComponent;                                      // 0x0228(0x0008) Edit, ExportObject, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHasVisited : 1;                                         // 0x0230(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0231(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AIArchetypeData
	 * Size -> 0x00B8 (FullSize[0x00E8] - InheritedSize[0x0030])
	 */
	class UAIArchetypeData : public UDataAsset
	{
	public:
		class FString                                                Name;                                                    // 0x0030(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bEnableAlertActions : 1;                                 // 0x0040(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAIActionData>                                 AlertActions;                                            // 0x0048(0x0010) Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                         bEnableUnalertActions : 1;                               // 0x0058(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAIActionData>                                 UnalertActions;                                          // 0x0060(0x0010) Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                         bEnableSuspiciousActions : 1;                            // 0x0070(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x7];                                   // 0x0071(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAIActionData>                                 SuspiciousActions;                                       // 0x0078(0x0010) Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                         bEnableContinuousActions : 1;                            // 0x0088(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAIActionData_NameOnly>                        ContinuousActions;                                       // 0x0090(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FAIActionData>                                 ContinuousActionsCache;                                  // 0x00A0(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                         bEnableCombatMoveActions : 1;                            // 0x00B0(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x7];                                   // 0x00B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAIActionData>                                 CombatMoveActions;                                       // 0x00B8(0x0010) Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                         bOverrideAimSpeed : 1;                                   // 0x00C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x3];                                   // 0x00C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        FocalPointInterpSpeed;                                   // 0x00CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ActorRotationInterpStandingSpeed;                        // 0x00D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ActorRotationInterpMovingSpeed;                          // 0x00D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        AimOffsetInterpSpeed;                                    // 0x00D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIgnoreDamageHitReactions : 1;                           // 0x00DC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bOnlyAllowCombatMovesWhilstAlert : 1;                    // 0x00DC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAccuracyOverride : 1;                                   // 0x00DC(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x3];                                   // 0x00DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        Accuracy;                                                // 0x00E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0x4];                                   // 0x00E4(0x0004) MISSED OFFSET (PADDING)

	public:
		void AssignActionPreset();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ActivityFiniteStateMachine
	 * Size -> 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
	 */
	class UActivityFiniteStateMachine : public UObject
	{
	public:
		TArray<class UActivityState*>                                States;                                                  // 0x0028(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		class UActivityState*                                        ActiveState;                                             // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0040(0x0008) MISSED OFFSET (PADDING)

	public:
		bool IsMachineInitialized();
		class UActivityState* GetStateByName(const class FString& InStateName);
		class UActivityState* GetStateByID(int32_t InStateID);
		class UActivityState* GetActiveState();
		class UActivityState* AddState(const class FString& NewStateName, TArray<struct FActivityStateTransition> Transitions);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AITest
	 * Size -> 0x0018 (FullSize[0x0238] - InheritedSize[0x0220])
	 */
	class AAITest : public AActor
	{
	public:
		class UBillboardComponent*                                   BillboardComponent;                                      // 0x0220(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APlayerCharacter*                                      TestCharacter;                                           // 0x0228(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                      GiveToNearestXAI;                                        // 0x0230(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x0234(0x0004) MISSED OFFSET (PADDING)

	public:
		void Investigate();
		void DestroyTestCharacter();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ActivityManager
	 * Size -> 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
	 */
	class UActivityManager : public UObject
	{
	public:
		float                                                        GlobalStartDelay;                                        // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)

	public:
		void SetStartDelay(float NewDelayTime);
		bool GiveActivityTo(class UBaseActivity* InActivity, class ACyberneticCharacter* InCharacter, bool bOverrideCurrentActivity, bool bClearActivityList);
		bool GiveActivitiesTo(TArray<class UBaseActivity*> InActivities, class ACyberneticCharacter* InCharacter, bool bOverrideCurrentActivity, bool bClearActivityList);
		float GetStartDelay();
		class UActivityManager* Get();
		class UBaseActivity* CreateActivity(class UObject* ContextObject, class UBaseActivity* InActivityClass, const class FString& InActivityName, float InActivityStartDelay);
		bool CanGiveActivityTo(class UBaseActivity* InActivity, class ACyberneticCharacter* InCharacter);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AISpawn
	 * Size -> 0x0470 (FullSize[0x0690] - InheritedSize[0x0220])
	 */
	class AAISpawn : public AActor
	{
	public:
		float                                                        SpawnChance;                                             // 0x0220(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x0224(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSpawnData                                            SpawnData;                                               // 0x0228(0x00B8) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<struct FSpawnData>                                    RosterSpawnData;                                         // 0x02E0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                         bIsExplosiveVestSpawn;                                   // 0x02F0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsRoamerSpawn;                                          // 0x02F1(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x6];                                   // 0x02F2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                       DefaultScene;                                            // 0x02F8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UArrowComponent*                                       SpawnDirection;                                          // 0x0300(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FAIDataLookupTable                                    SavedAIData;                                             // 0x0308(0x0380) BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		class ACyberneticCharacter*                                  SpawnedCharacterDeffered;                                // 0x0688(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void TransferSpawnDataToRosterSpawnData();
		bool GetSuspectSpawnData(TArray<struct FSpawnData>* OutSpawnData);
		ETeamType GetSpawningTeamType(const struct FSpawnData& Sd);
		class ACyberneticCharacter* GetSpawnedCharacterDeffered();
		ETeamType GetDefaultSpawningTeamType();
		bool GetCivilianSpawnData(TArray<struct FSpawnData>* OutSpawnData);
		bool DoSpawn();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AIData
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAIData : public UDataAsset
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AdminGameControls
	 * Size -> 0x0000 (FullSize[0x0260] - InheritedSize[0x0260])
	 */
	class UAdminGameControls : public UUserWidget
	{
	public:
		void KickPlayer(class APlayerState* KickingPlayerState, const class FText& reason);
		bool IsAdmin();
		void GetKickablePlayers(TArray<class APlayerState*>* KickablePlayers);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ActivityRouteActor
	 * Size -> 0x0018 (FullSize[0x0238] - InheritedSize[0x0220])
	 */
	class AActivityRouteActor : public AActor
	{
	public:
		TArray<struct FActivityRoute>                                ActivityRoute;                                           // 0x0220(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		struct PCoreUObject_FColor                                   PathColor;                                               // 0x0230(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      ActivityIdx;                                             // 0x0234(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AIFactionManager
	 * Size -> 0x0058 (FullSize[0x0278] - InheritedSize[0x0220])
	 */
	class AAIFactionManager : public AActor
	{
	public:
		bool                                                         bGroupIntoTeams : 1;                                     // 0x0220(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.i, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x0221(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      TeamsOf;                                                 // 0x0224(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bAssignRandomTeamTactics : 1;                            // 0x0228(0x0001) BIT_FIELD Edit, BlueprintVisible, d.e.o.i, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x0229(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FFactionTeamTactics>                           TacticsPool;                                             // 0x0230(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, Protected, NativeAccessSpecifierProtected
		TArray<struct FFactionSuspectTeam>                           SuspectTeams;                                            // 0x0240(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, Protected, NativeAccessSpecifierProtected
		TArray<class ACyberneticCharacter*>                          Characters;                                              // 0x0250(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, Protected, NativeAccessSpecifierProtected
		TArray<class ACyberneticCharacter*>                          Leaders;                                                 // 0x0260(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, Protected, NativeAccessSpecifierProtected
		float                                                        TeamBehaviourStrengthReductionSpeed;                     // 0x0270(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        TeamBehaviourOverrideStrength;                           // 0x0274(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void OnAllAISpawned_Blueprint();
		void OnAISpottedNeutral_Blueprint(class ACyberneticCharacter* Spotter, class AReadyOrNotCharacter* Neutral);
		void OnAISpottedNeutral(class ACyberneticCharacter* Spotter, class AReadyOrNotCharacter* Neutral);
		void OnAISpottedFriendly_Blueprint(class ACyberneticCharacter* Spotter, class AReadyOrNotCharacter* Friendly);
		void OnAISpottedFriendly(class ACyberneticCharacter* Spotter, class AReadyOrNotCharacter* Friendly);
		void OnAISpottedEnemy_Blueprint(class ACyberneticCharacter* Spotter, class AReadyOrNotCharacter* Enemy);
		void OnAISpottedEnemy(class ACyberneticCharacter* Spotter, class AReadyOrNotCharacter* Enemy);
		void OnAIAdded_Blueprint(class ACyberneticCharacter* Character);
		bool IsTeamFull(const struct FFactionSuspectTeam& InTeam);
		bool IsSuspectInTeam(class ASuspectCharacter* InSuspect, struct FFactionSuspectTeam* OutTeam);
		bool GetTeamTacticFor(class ASuspectCharacter* InSuspect, EAITeamTactic* OutTactic);
		int32_t GetTeamIndex(class ASuspectCharacter* InSuspect);
		bool GetSuspectsInTeam(class ASuspectCharacter* InSuspect, TArray<class ASuspectCharacter*>* OutSuspects, bool bIncludeSelf);
		TArray<class ASuspectCharacter*> GetAllSuspects();
		TArray<class ACyberneticCharacter*> GetAllLeaders();
		TArray<class ACivilianCharacter*> GetAllCivilians();
		TArray<class ACyberneticCharacter*> GetAllCharacters();
		class ASuspectCharacter* FindClosestSuspect(TArray<class ASuspectCharacter*> OtherSuspects, class ASuspectCharacter* Suspect, float MaxDistance);
		bool AreTeamSpotsAvailable(int32_t* OutIndex);
		void AlertOtherSuspectsInTeam_Blueprint(class ASuspectCharacter* Suspect, class AReadyOrNotCharacter* Enemy);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimInputCapsuleLocomotionBlueprintLibrary
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UAnimInputCapsuleLocomotionBlueprintLibrary : public UBlueprintFunctionLibrary
	{
	public:
		void UpdateCapsuleLocomotionAnimInput(class APawn* Pawn, struct FAnimInput_CapsuleLocomotion* CapsuleLocomotionAnimInput);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_AIDoorBreachKick
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_AIDoorBreachKick : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ResourceComponent
	 * Size -> 0x0058 (FullSize[0x0108] - InheritedSize[0x00B0])
	 */
	class UResourceComponent : public UActorComponent
	{
	public:
		class UMulticastInlineDelegate                               OnFullResource;                                          // 0x00B0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xF];                                   // 0x00B1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnLowResource;                                           // 0x00C0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xF];                                   // 0x00C1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnDepletedResource;                                      // 0x00D0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0xF];                                   // 0x00D1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class FName                                                  ResourceName;                                            // 0x00E0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        Resource;                                                // 0x00E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MaxResource;                                             // 0x00EC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MaxResourceLimit;                                        // 0x00F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        LowResourceThreshold;                                    // 0x00F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        OriginalMaxResource;                                     // 0x00F8(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        LowResource;                                             // 0x00FC(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        PreviousResource;                                        // 0x0100(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bUnlimited : 1;                                          // 0x0104(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0003[0x3];                                   // 0x0105(0x0003) MISSED OFFSET (PADDING)

	public:
		void UpdatePreviousResource();
		void ToggleUnlimitedResource();
		void SetUnlimitedResource(bool bEnabled);
		void SetResource(float NewResourceAmount);
		void SetMaxResource(float NewMaxResource);
		void SetCurrentResourceToMax();
		void Server_UpdatePreviousResource();
		void Server_ToggleUnlimitedResource();
		void Server_SetUnlimitedResource(bool bEnabled);
		void Server_SetResource(float NewResourceAmount);
		void Server_SetMaxResource(float NewMaxResource);
		void Server_SetCurrentResourceToMax();
		void Server_ResetResource();
		void Server_InitResource();
		void Server_IncreaseResource(float Amount);
		void Server_EnableUnlimitedResource();
		void Server_DisableUnlimitedResource();
		void Server_DepleteResource();
		void Server_DecreaseResource(float Amount);
		void ResetResource();
		void OnLowResourceSignature__DelegateSignature(float Resource);
		void OnFullResourceSignature__DelegateSignature();
		void OnDepletedResourceSignature__DelegateSignature();
		bool IsUnlimitedResourceEnabled();
		bool IsResourceBelow(float ResourceValue);
		bool IsResourceAtOrBelow(float ResourceValue);
		bool IsResourceAtOrAbove(float ResourceValue);
		bool IsResourceAt(float ResourceValue);
		bool IsResourceAbove(float ResourceValue);
		bool IsLowResource();
		bool IsHalfResource();
		bool IsFullResource();
		bool IsDepleted();
		void IncreaseResourceByRate(float Rate);
		float IncreaseResource_Expression(float Amount);
		void IncreaseResource(float Amount);
		bool HasResource();
		class FName GetResourceName();
		float GetPreviousResource();
		float GetOriginalMaxResource();
		float GetNormalizedResource();
		float GetMaxResource();
		float GetLowResourceThreshold();
		float GetLowResource();
		float GetHalfResource();
		float GetCurrentResource();
		void EnableUnlimitedResource();
		void DisableUnlimitedResource();
		void DepleteResource();
		void DecreaseResourceByRate(float Rate);
		float DecreaseResource_Expression(float Amount);
		void DecreaseResource(float Amount);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AIAction
	 * Size -> 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
	 */
	class UAIAction : public UObject
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ACyberneticController*                                 OwningController;                                        // 0x0030(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x0038(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      LastMoveRequestPathID;                                   // 0x003C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                      LastMoveRequestMoveID;                                   // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)

	public:
		bool WantsAbort();
		void Tick_Blueprint(float DeltaTime);
		bool ShouldPerformAction();
		void RequestMove(const struct FVector& Location);
		void OnSucceededToConsider_Blueprint();
		void OnPathFound_Blueprint(int32_t PathId, ERonNavigationQueryResult Result);
		void OnPathFound(int32_t PathId, ERonNavigationQueryResult Result);
		void OnMoveComplete_Blueprint(class AAIController* Controller, int32_t RequestID);
		void OnMoveComplete(class AAIController* Controller, int32_t RequestID);
		void OnFailedToConsider_Blueprint();
		void OnCreate_Blueprint(class ACyberneticController* Controller);
		void InitAction_Blueprint(class ACyberneticController* Controller);
		class ACyberneticCharacter* GetCharacter();
		int32_t GetActionRunCount();
		struct FAIActionData GetActionData();
		void EndAction_Blueprint();
		void BeginAction_Blueprint();
		void AbortAction();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_AIDoorBreachShotgun
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_AIDoorBreachShotgun : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AISafeZone
	 * Size -> 0x0000 (FullSize[0x0228] - InheritedSize[0x0228])
	 */
	class AAISafeZone : public ATriggerBox
	{
	public:
		void OnOverlapEnd(class AActor* OverlappedActor, class AActor* OtherActor);
		void OnOverlapBegin(class AActor* OverlappedActor, class AActor* OtherActor);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_Breach_C2Placed
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_Breach_C2Placed : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_AIThrowGrenadeComplete
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_AIThrowGrenadeComplete : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_ChangeBodySocket
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UAnimNotify_ChangeBodySocket : public UAnimNotify
	{
	public:
		EItemCategory                                                ItemCategory;                                            // 0x0038(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                  Socket;                                                  // 0x003C(0x0008) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_AIThrowPendingItem
	 * Size -> 0x0048 (FullSize[0x0080] - InheritedSize[0x0038])
	 */
	class UAnimNotify_AIThrowPendingItem : public UAnimNotify
	{
	public:
		class FName                                                  BoneToSpawnOn;                                           // 0x0038(0x0008) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct PCoreUObject_FTransform                               RelativeTransform;                                       // 0x0040(0x0030) Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		bool                                                         bCustomThrowDirection : 1;                               // 0x0070(0x0001) BIT_FIELD Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRotator                                 ThrowDirection;                                          // 0x0074(0x000C) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AIActionConsideration
	 * Size -> 0x00B0 (FullSize[0x00D8] - InheritedSize[0x0028])
	 */
	class UAIActionConsideration : public UObject
	{
	public:
		bool                                                         bManualCurveEdit : 1;                                    // 0x0028(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bCustomCurveFunction : 1;                                // 0x0028(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EEasingFunc                                                  CurveType;                                               // 0x0029(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bInverseX : 1;                                           // 0x002A(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bInverseY : 1;                                           // 0x002A(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bClamp : 1;                                              // 0x002A(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x5];                                   // 0x002B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                    Curve;                                                   // 0x0030(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		bool                                                         bCustomRange : 1;                                        // 0x00B8(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x00B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MinRange;                                                // 0x00BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MaxRange;                                                // 0x00C0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        OffsetX;                                                 // 0x00C4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        OffsetY;                                                 // 0x00C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        Exponent;                                                // 0x00CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                      SubStep;                                                 // 0x00D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ERichCurveInterpMode                                         InterpMode;                                              // 0x00D4(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ERichCurveTangentMode                                        TangentMode;                                             // 0x00D5(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x2];                                   // 0x00D6(0x0002) MISSED OFFSET (PADDING)

	public:
		float Score(const struct FAIActionDecisionContext& Context, bool* bSuccess);
		float EvaluateResponseCurve(float Score);
		float CalculateCurve(float X);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_EquipItemOfClass
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UAnimNotify_EquipItemOfClass : public UAnimNotify
	{
	public:
		class ABaseItem*                                             ItemClass;                                               // 0x0038(0x0008) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bInstant : 1;                                            // 0x0040(0x0001) BIT_FIELD Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bAIOnly : 1;                                             // 0x0040(0x0001) BIT_FIELD Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_ApplyArteryDamage
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UAnimNotify_ApplyArteryDamage : public UAnimNotify
	{
	public:
		class FName                                                  ArteryBoneName;                                          // 0x0038(0x0008) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_ChangeCombatMove
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UAnimNotify_ChangeCombatMove : public UAnimNotify
	{
	public:
		TArray<class UBaseCombatMoveActivity*>                       PossibleCombatMoves;                                     // 0x0038(0x0010) Edit, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_EquipLastItem
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UAnimNotify_EquipLastItem : public UAnimNotify
	{
	public:
		bool                                                         bInstant : 1;                                            // 0x0038(0x0001) BIT_FIELD Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_MirrorDoor
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UAnimNotify_MirrorDoor : public UAnimNotify
	{
	public:
		bool                                                         bMirrorFinish : 1;                                       // 0x0038(0x0001) BIT_FIELD Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_ApplyMeleeDamage
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_ApplyMeleeDamage : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_ForceFireWeapon
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UAnimNotify_ForceFireWeapon : public UAnimNotify
	{
	public:
		float                                                        Chance;                                                  // 0x0038(0x0004) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bNoEnemyRequired;                                        // 0x003C(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AmmoComponent
	 * Size -> 0x0008 (FullSize[0x0110] - InheritedSize[0x0108])
	 */
	class UAmmoComponent : public UResourceComponent
	{
	public:
		float                                                        AmmoUsagePerSecond;                                      // 0x0108(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x010C(0x0004) MISSED OFFSET (PADDING)

	public:
		float GetAmmoUsagePerSecond();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_NextMag
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_NextMag : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_GetupComplete
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_GetupComplete : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_ForceRagdoll
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_ForceRagdoll : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_CollectEvidence
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UAnimNotify_CollectEvidence : public UAnimNotify
	{
	public:
		bool                                                         bCollectFinished : 1;                                    // 0x0038(0x0001) BIT_FIELD Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_OnCheckedDoor
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_OnCheckedDoor : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_CompleteHeal
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_CompleteHeal : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_Breach_C2Detonate
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_Breach_C2Detonate : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AmmoRefillBox
	 * Size -> 0x0038 (FullSize[0x0258] - InheritedSize[0x0220])
	 */
	class AAmmoRefillBox : public AActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInteractableComponent*                                InteractableComponent;                                   // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReadyOrNotCharacter*                                  RefillCharacter;                                         // 0x0238(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x18];                                  // 0x0240(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotGameMode
	 * Size -> 0x0490 (FullSize[0x0750] - InheritedSize[0x02C0])
	 */
	class AReadyOrNotGameMode : public AGameModeBase
	{
	public:
		unsigned char                                                UnknownData_0000[0x58];                                  // 0x02C0(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                   GameModeSettings;                                        // 0x0318(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x60];                                  // 0x0328(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class AReadyOrNotCharacter*, int32_t>                   AbuseCountMap;                                           // 0x0388(0x0050) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                         bIsCampaignTransitioning;                                // 0x03D8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x7];                                   // 0x03D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                          Reinforcement_Handle;                                    // 0x03E0(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRunWarmup;                                              // 0x03E8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bArrestSpectator;                                        // 0x03E9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAllowLoadouts;                                          // 0x03EA(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x1];                                   // 0x03EB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      MaxPlayersAllowed;                                       // 0x03EC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bEnabledForPlay;                                         // 0x03F0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x7];                                   // 0x03F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                urlShortName;                                            // 0x03F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                                Password;                                                // 0x0408(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                                PlayerStartClass;                                        // 0x0418(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ASpectatePawn*                                         DeadSpectatorClass;                                      // 0x0420(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  LobbyStartTag;                                           // 0x0428(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  RedCustomizationStartTag;                                // 0x0430(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  BlueCustomizationStartTag;                               // 0x0438(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  SWATBlueStartTag;                                        // 0x0440(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  SWATRedStartTag;                                         // 0x0448(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  SuspectStartTag;                                         // 0x0450(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSpectateKillerOnDeath;                                  // 0x0458(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bInitialPlayerRespawn;                                   // 0x0459(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDrawPlayerCameraSphere : 1;                             // 0x045A(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x5];                                   // 0x045B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnMatchStarted;                                          // 0x0460(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0xF];                                   // 0x0461(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		ERespawnMode                                                 RespawnMode;                                             // 0x0470(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bTimelimitUsedInMode;                                    // 0x0471(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMatchState                                                  CurrentMatchState;                                       // 0x0472(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0x5];                                   // 0x0473(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnMatchStateChanged;                                     // 0x0478(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0008[0xF];                                   // 0x0479(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0009[0x8];                                   // 0x0488(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSavedLoadout                                         DefaultLoadoutIfNothingLoaded;                           // 0x0490(0x0178) Edit, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0010[0x8];                                   // 0x0608(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                  ModeName;                                                // 0x0610(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                  ModeDescription;                                         // 0x0628(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                         bCanRespawn;                                             // 0x0640(0x0001) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0011[0x3];                                   // 0x0641(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      MinimumPlayersToStart;                                   // 0x0644(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      MinimumPlayersForTimer;                                  // 0x0648(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0012[0x4];                                   // 0x064C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TSoftClassPtr<class APlayerCharacter>                        BlueCharacterClass;                                      // 0x0650(0x0024) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0013[0x4];                                   // 0x0674(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TSoftClassPtr<class APlayerCharacter>                        RedCharacterClass;                                       // 0x0678(0x0024) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0014[0x4];                                   // 0x069C(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0015[0x40];                                  // 0x06A0(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class APlayerController*>                             DeadPlayers;                                             // 0x06E0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class APlayerController*>                             RespawnableDeadPlayers;                                  // 0x06F0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                                PlayerSpawnTag;                                          // 0x0700(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               OnPlayerRespawned;                                       // 0x0710(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0016[0xF];                                   // 0x0711(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UUserWidget*                                           CharacterHUD;                                            // 0x0720(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0017[0x8];                                   // 0x0728(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bThrottleAI;                                             // 0x0730(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0018[0x3];                                   // 0x0731(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MinThrottleRange;                                        // 0x0734(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MaxThrottleRange;                                        // 0x0738(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ThrottleMultiplier;                                      // 0x073C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ASpectatorPawn*                                        NormalSpectatorPawn;                                     // 0x0740(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ATOCManager*                                           TOCManager;                                              // 0x0748(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void ThrottleAI();
		void SwapPlayerTeams();
		void StartMatch();
		class ASpectatorPawn* SpawnSpectator(class APlayerController* Controller, class ASpectatorPawn* Class, const struct PCoreUObject_FTransform& SpawnTransform);
		class APlayerCharacter* SpawnPlayerCharacter(class APlayerController* Controller, class APlayerCharacter* Class, const struct PCoreUObject_FTransform& SpawnTransform);
		bool ShouldCountDownTimelimitNow();
		void SetPassword(const class FString& newPassword);
		void SetMatchState(EMatchState NewMatchState);
		void RestartGame();
		void RespawnPlayer(class APlayerController* Player, bool bForceSpectator);
		void RespawnDeadPlayersOnTeam(ETeamType Team);
		void RespawnDeadPlayers();
		void RespawnAllPlayersOnTeam(ETeamType Team);
		void RespawnAllPlayers();
		bool RemoveDeadPlayerAt(int32_t Index);
		bool RemoveDeadPlayer(class APlayerController* InPlayerController);
		void RefreshSession();
		void ProcessServerTravel(const class FString& URL, bool bAbsolute);
		void PlayerTakenDamage(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
		void PlayerKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
		void PlayerFreed(class ACharacter* Freed, class ACharacter* Freer);
		void PlayerDowned(class AReadyOrNotCharacter* DownedCharacter, class AReadyOrNotCharacter* InstigatorCharacter);
		void PlayerArrested(class AReadyOrNotCharacter* ArrestedCharacter, class AReadyOrNotCharacter* InstigatorCharacter);
		void OnPlayerRespawned__DelegateSignature(class APawn* Pawn, class APlayerController* Controller);
		void OnOutOfBoundsTimeLimitEnded();
		void OnMatchStateChanged__DelegateSignature(EMatchState NewMatchState);
		void OnMatchStarted__DelegateSignature();
		void OnBanStatusChecked(const class FString& SteamId, bool bIsBanned, const class FString& BanReason, bool bIsMySteamId);
		void NextGame();
		bool KickPlayer(class APlayerController* KickedPlayer, const class FText& KickReason);
		bool IsTeamDead(ETeamType Team, bool bIncludeArrestedAsDead);
		class AActor* GetThisPlayersStartPointByTag(class APlayerController* Player, const class FString& IncomingName);
		class AReadyOrNotGameState* GetReadyOrNotGameState();
		class AReadyOrNotGameSession* GetReadyOrNotGameSession();
		EMatchState GetMatchState();
		TArray<class APlayerCharacter*> GetAllPlayerCharactersInWorld();
		bool DoesLevelRequireGeneration();
		void CheckToAnnounceTeamkill(class ACharacter* InstigatorCharacter, class ACharacter* KilledCharacter);
		bool AreAllPlayersDead();
		void AddAbuse(class AReadyOrNotCharacter* Abuser, class ACyberneticCharacter* Abused);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotGameMode_PVP
	 * Size -> 0x0060 (FullSize[0x07B0] - InheritedSize[0x0750])
	 */
	class AReadyOrNotGameMode_PVP : public AReadyOrNotGameMode
	{
	public:
		class UMulticastInlineDelegate                               OnMatchStart;                                            // 0x0750(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xF];                                   // 0x0751(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnRoundWon;                                              // 0x0760(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xF];                                   // 0x0761(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnRoundStart;                                            // 0x0770(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0xF];                                   // 0x0771(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnRoundEnd;                                              // 0x0780(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0xF];                                   // 0x0781(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		float                                                        RoundEndResetDelay;                                      // 0x0790(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MatchEndResetDelay;                                      // 0x0794(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class URoundEndWidget_PVP*                                   RoundEndWidgetClass;                                     // 0x0798(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bIncrementedRoundCounterThisRound : 1;                   // 0x07A0(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0004[0xF];                                   // 0x07A1(0x000F) MISSED OFFSET (PADDING)

	public:
		void TimeLimitVictoryConditions();
		void TimelimitReached();
		void RoundWonTeam(ETeamType WinningTeam);
		void RoundWon(TArray<class AReadyOrNotPlayerState*> WinningPlayers);
		void RoundEnd();
		void OnRoundWon__DelegateSignature(ETeamType WinningTeam);
		void OnRoundStarted();
		void OnRoundStart__DelegateSignature();
		void OnRoundEnded();
		void OnRoundEnd__DelegateSignature();
		void OnMatchStart__DelegateSignature();
		void NextRound();
		void Multicast_SetWinningTeam(ETeamType WinningTeam);
		void MatchEnd();
		void CheckRoundEnd(float DeltaSeconds);
		bool AnyDeathsOnWinningTeam();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_DisableWeaponFOV
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UAnimNotify_DisableWeaponFOV : public UAnimNotifyState
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BaseActivity
	 * Size -> 0x01D0 (FullSize[0x01F8] - InheritedSize[0x0028])
	 */
	class UBaseActivity : public UObject
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnStartActivity;                                         // 0x0030(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xF];                                   // 0x0031(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnPerformActivity;                                       // 0x0040(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0xF];                                   // 0x0041(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnFinishActivity;                                        // 0x0050(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0xF];                                   // 0x0051(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnFinishActivity_NoOwner;                                // 0x0060(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0xF];                                   // 0x0061(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnSoftFinishActivity;                                    // 0x0070(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0xF];                                   // 0x0071(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0006[0x18];                                  // 0x0080(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                ActivityName;                                            // 0x0098(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      Priority;                                                // 0x00A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TickInterval;                                            // 0x00AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MaxActivityTime;                                         // 0x00B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ActivityCooldown;                                        // 0x00B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ActivityStartDelay;                                      // 0x00B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MaxRandomStartDelay;                                     // 0x00BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0xC];                                   // 0x00C0(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bIsProgressActivity : 1;                                 // 0x00CC(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bFinishActivityWhenOverriden : 1;                        // 0x00CC(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bAbortMoveWhenActivityFinished : 1;                      // 0x00CC(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bAbortMoveWhenActivityOverriden : 1;                     // 0x00CC(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bAbortActivityIfCannotReachLocation : 1;                 // 0x00CC(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bAbortIfTrackingEnemy : 1;                               // 0x00CC(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bNoMoveActivity : 1;                                     // 0x00CC(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bResetStateMachineWhenActivityResumed : 1;               // 0x00CC(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bAbortIfNotMovingForAWhile : 1;                          // 0x00CD(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bAllowRePathOnInvalidation : 1;                          // 0x00CD(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bAllowPartialMove : 1;                                   // 0x00CD(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0008[0x2];                                   // 0x00CE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        ElapsedActivityTime;                                     // 0x00D0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0009[0x4];                                   // 0x00D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        TimeSinceGivenNewMoveLocation;                           // 0x00D8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                  Location;                                                // 0x00DC(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FString                                                ProgressState;                                           // 0x00E8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0010[0xF0];                                  // 0x00F8(0x00F0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ACyberneticController*                                 OwningController;                                        // 0x01E8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UActivityFiniteStateMachine*                           ActivityStateMachine;                                    // 0x01F0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void StartActivity_Blueprint(class AAIController* Owner);
		bool ShouldForceStrafe();
		bool ShouldForceNoStrafe();
		void SetLocation(const struct FVector& NewLocation, bool bRequestMove, const struct FVector& CustomExtent);
		void SetActivityName(const class FString& NewActivityName);
		void SetActivityMove(bool bCanMove);
		void ResetData();
		void PerformActivity_Blueprint(float DeltaTime);
		bool OverrideFocalPoint_Blueprint(struct FVector* FocalPoint);
		void OnStartActivity__DelegateSignature(class UBaseActivity* Activity, class ACyberneticController* Controller);
		void OnSoftFinishActivity__DelegateSignature(class UBaseActivity* Activity, class ACyberneticController* Controller);
		void OnPerformActivity__DelegateSignature(class UBaseActivity* Activity, class ACyberneticController* Controller, float DeltaTime);
		void OnKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
		void OnIncapacitated(class AReadyOrNotCharacter* IncapacitatedCharacter);
		void OnFinishActivity__DelegateSignature(class UBaseActivity* Activity, class ACyberneticController* Controller);
		bool IsProgressActivity();
		bool IsNoMoveActivity();
		bool IsActivitySoftComplete();
		bool IsActivityPaused();
		bool IsActivityInitialized();
		bool IsActivityComplete();
		bool HasStartedActivity();
		bool HasReachedLocation_AsPercentage(const struct FVector& StartLocation, float Percentage);
		bool HasReachedLocation(float Tolerance);
		class ACyberneticController* GetOwningController();
		struct FVector GetLocation();
		float GetDistanceToLocation();
		class ACyberneticCharacter* GetCharacter();
		float GetActiveStateUptime();
		class FString GetActiveStateName();
		int32_t GetActiveStateID();
		void FinishedActivity_Blueprint(bool bSuccess);
		void EquipWeapon();
		void EquipItemOfClass(class ABaseItem* InItemClass);
		void EquipItem(EItemCategory InItemCategory);
		bool CanOverrideActivity();
		bool CanBePushed();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_DisarmTrap
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UAnimNotify_DisarmTrap : public UAnimNotify
	{
	public:
		bool                                                         bDisarmFinished : 1;                                     // 0x0038(0x0001) BIT_FIELD Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_OnLandmarkProxyUse
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_OnLandmarkProxyUse : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_DoorKickBreak
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_DoorKickBreak : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_ItemSwitchSocket
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UAnimNotify_ItemSwitchSocket : public UAnimNotify
	{
	public:
		EItemSocket                                                  DesiredItemSocket;                                       // 0x0038(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimatedDecal
	 * Size -> 0x0098 (FullSize[0x02B8] - InheritedSize[0x0220])
	 */
	class AAnimatedDecal : public AActor
	{
	public:
		class UDecalComponent*                                       Decal;                                                   // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        AnimationTimescale;                                      // 0x0228(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x022C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                    AnimationCurve;                                          // 0x0230(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic

	public:
		void SetAnimatedDecalMaterial(class UMaterialInterface* Material);
		float GetRuntimeFloatCurveValue(const struct FRuntimeFloatCurve& Curve, float Time);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TeamBaseActivity
	 * Size -> 0x0030 (FullSize[0x0228] - InheritedSize[0x01F8])
	 */
	class UTeamBaseActivity : public UBaseActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x30];                                  // 0x01F8(0x0030) MISSED OFFSET (PADDING)

	public:
		bool HasTeamReachedPosition(float Tolerance);
		bool HasSquadmateReachedLocation(ESquadPosition SquadPosition, float Tolerance);
		bool HasAnySquadmateGotLocation(const struct FVector& TestLocation, float Tolerance);
		bool GetSquadPositionHasReachedDestination(ESquadPosition SquadPosition);
		ESquadPosition GetSquadPosition(bool bOnlyOverride);
		class AReadyOrNotCharacter* GetSquadLeader();
		struct FVector GetLocationOfCharacterAtSquadPosition(ESquadPosition A);
		float GetDistanceToDestinationForSquadPosition(ESquadPosition SquadPosition);
		float GetDistanceToCommandLocationForSquadPosition(ESquadPosition A);
		float GetDistanceToCommandLocation();
		float GetDistanceBetweenSquadmates(ESquadPosition A, ESquadPosition B);
		struct FVector GetDestinationLocationAtSquadPosition(ESquadPosition A);
		ETeamType GetCommandTeam();
		struct FVector GetCommandNormal();
		struct FVector GetCommandLocation();
		class ACyberneticCharacter* GetCharacterClosestToLocation(const struct FVector& TestLocation);
		class ACyberneticCharacter* GetCharacterClosestToCharacter(class ACyberneticCharacter* InCharacter);
		class ACyberneticCharacter* GetCharacterAtSquadPosition(ESquadPosition SquadPosition);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_PushQueuedDoor
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_PushQueuedDoor : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_DoorKickFailure
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_DoorKickFailure : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ArrestAndRescueGM
	 * Size -> 0x0040 (FullSize[0x07F0] - InheritedSize[0x07B0])
	 */
	class AArrestAndRescueGM : public AReadyOrNotGameMode_PVP
	{
	public:
		bool                                                         bSuddenDeath;                                            // 0x07B0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x07B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class APlayerCharacter*>                              ArrestedBlueCharacters;                                  // 0x07B8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class APlayerCharacter*>                              ArrestedRedCharacters;                                   // 0x07C8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class UFMODEvent*                                            VIPArrestedSound;                                        // 0x07D8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            VIPKilledSound;                                          // 0x07E0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x07E8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ArrestSuspectActivity
	 * Size -> 0x0000 (FullSize[0x0228] - InheritedSize[0x0228])
	 */
	class UArrestSuspectActivity : public UTeamBaseActivity
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_PickupItemComplete
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_PickupItemComplete : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_KillMyself
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_KillMyself : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimatedIconWidget
	 * Size -> 0x0080 (FullSize[0x02E0] - InheritedSize[0x0260])
	 */
	class UAnimatedIconWidget : public UUserWidget
	{
	public:
		TArray<class UImage*>                                        IconImages;                                              // 0x0260(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		int32_t                                                      CurrentIndex;                                            // 0x0270(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ElapsedTime;                                             // 0x0274(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bPaused : 1;                                             // 0x0278(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0279(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UOverlay*                                              InteractCircle_Overlay;                                  // 0x0280(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USizeBox*                                              InteractIcon_SizeBox;                                    // 0x0288(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetSwitcher*                                       IconSwitcher;                                            // 0x0290(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                ProgressCircle_Image;                                    // 0x0298(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetAnimation*                                      Anim_Interact;                                           // 0x02A0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetAnimation*                                      Anim_Focus;                                              // 0x02A8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          InteractionInvalidTintColor;                             // 0x02B0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMaterialInterface*                                    ProgressCircleMaterial;                                  // 0x02C0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                  ProgressParamName;                                       // 0x02C8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractableComponent*                                ParentComponent;                                         // 0x02D0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMaterialInstanceDynamic*                              MID_ProgressCircle;                                      // 0x02D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void UnPauseIconAnim();
		void StopInteractAnim();
		void StopFocusAnim();
		void SetInteractState(bool bValid);
		void SetInteractIconSize(float InInteractCircleSize, float InInteractIconSize);
		void SetCurrentProgress(float Percent);
		void SetActiveIcon(int32_t Index);
		void PlayInteractAnim();
		void PlayFocusAnim(bool bReverse);
		void PauseIconAnim();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BaseItem
	 * Size -> 0x06A8 (FullSize[0x08C8] - InheritedSize[0x0220])
	 */
	class ABaseItem : public AActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x40];                                  // 0x0220(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODAudioComponent*                                   FMODAudioComp;                                           // 0x0260(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInteractableComponent*                                InteractableComponent;                                   // 0x0268(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UScoringComponent*                                     ScoringComponent;                                        // 0x0270(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDisableTickWhenNotEquipped;                             // 0x0278(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x0279(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            PhysicsImpact;                                           // 0x0280(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x10];                                  // 0x0288(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AThrownItem*                                           ThrownItemClass;                                         // 0x0298(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x40];                                  // 0x02A0(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        ItemWeight;                                              // 0x02E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x2];                                   // 0x02E4(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bDisallowKicking;                                        // 0x02E6(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x1];                                   // 0x02E7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                  LookupTableIdx;                                          // 0x02E8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x8];                                   // 0x02F0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkeletalMesh*                                         Rep_CustomItemMeshFromAttachment;                        // 0x02F8(0x0008) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0x1];                                   // 0x0300(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bInInventory;                                            // 0x0301(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShouldTickAnimBPWhenNotEquipped;                        // 0x0302(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0008[0x1];                                   // 0x0303(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                  Server_ReplicatedPhysicsLocation;                        // 0x0304(0x000C) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                                OwnerName;                                               // 0x0310(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                                ItemName;                                                // 0x0320(0x0010) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<EDLC>                                                 LockedToDLC;                                             // 0x0330(0x0010) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, NativeAccessSpecifierPublic
		EItemClass                                                   ItemClass;                                               // 0x0340(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0009[0x7];                                   // 0x0341(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                  ItemDescription;                                         // 0x0348(0x0018) Edit, BlueprintVisible, EditConst, NativeAccessSpecifierPublic
		class FString                                                ItemSelectorName;                                        // 0x0360(0x0010) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            ItemSelectionSound;                                      // 0x0370(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FItemVisualData                                       Visuals;                                                 // 0x0378(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UTexture2D*                                            Tooltip;                                                 // 0x03A8(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                            HUDOutline;                                              // 0x03B0(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bInterpToTargetScale;                                    // 0x03B8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bFollowMasterPoseTP;                                     // 0x03B9(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0010[0x2];                                   // 0x03BA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                  TargetWorldScale;                                        // 0x03BC(0x000C) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TargetWorldScaleInterpSpeed;                             // 0x03C8(0x0004) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bStartAsEvidence;                                        // 0x03CC(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsEvidence;                                             // 0x03CD(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsClearable;                                            // 0x03CE(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHasBeenCleared;                                         // 0x03CF(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UDamageType*>                                   BlockAnyDamageFrom;                                      // 0x03D0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<class UDamageType*>                                   BlockDirectHitsFrom;                                     // 0x03E0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		bool                                                         bTaserDamageBlocked;                                     // 0x03F0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0011[0x7];                                   // 0x03F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class UDamageType*, float>                              MultiplyStunDamageFrom;                                  // 0x03F8(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TMap<class UDamageType*, struct FWeightStunMultiplier>       MultiplyStunDamageByWeight;                              // 0x0448(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class USceneComponent*                                       SceneComp;                                               // 0x0498(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USkeletalMeshComponent*                                ItemMesh;                                                // 0x04A0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBoxComponent*                                         InteractionBox;                                          // 0x04A8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UMaterialInstanceDynamic*>                      Dynamic1PMaterialInstances;                              // 0x04B0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0012[0x8];                                   // 0x04C0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UMaterialInstanceDynamic*>                      DynamicWeaponFovMats;                                    // 0x04C8(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0013[0x8];                                   // 0x04D8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UMaterialInstanceDynamic*>                      FP_SkinMaterials;                                        // 0x04E0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UMaterialInstanceDynamic*>                      TP_SkinMaterials;                                        // 0x04F0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class USkeletalMeshComponent*                                MasterPoseRep;                                           // 0x0500(0x0008) ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowStaticMeshOnBody;                                   // 0x0508(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0014[0x3];                                   // 0x0509(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                  WeaponWheelCategoryName;                                 // 0x050C(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bForceInvisible;                                         // 0x0514(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bForcedInvisible;                                        // 0x0515(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0015[0xA];                                   // 0x0516(0x000A) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bCanReloadSameMagazine;                                  // 0x0520(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0016[0x7];                                   // 0x0521(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                          LastReloadAnim_3P;                                       // 0x0528(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MovementSpeedMultiplier;                                 // 0x0530(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        QuickLeanMultiplier;                                     // 0x0534(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FreeLeanMultiplier;                                      // 0x0538(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0017[0x4];                                   // 0x053C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnEvidenceCollected;                                     // 0x0540(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0018[0xF];                                   // 0x0541(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		EWeaponType                                                  WeaponType;                                              // 0x0550(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDisableMeshspaceMovement;                               // 0x0551(0x0001) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0019[0xE];                                   // 0x0552(0x000E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct PCoreUObject_FTransform                               MeshspaceTransform_Default;                              // 0x0560(0x0030) Edit, BlueprintVisible, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct PCoreUObject_FTransform                               MeshspaceTransform_Aiming;                               // 0x0590(0x0030) Edit, BlueprintVisible, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct PCoreUObject_FTransform                               MeshspaceTransform_Back;                                 // 0x05C0(0x0030) Edit, BlueprintVisible, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                        InertiaDragAimRotation;                                  // 0x05F0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        InertiaDragAimLocation;                                  // 0x05F4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        InertiaDragStrafeRotation;                               // 0x05F8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        InertiaDragStrafeLocation;                               // 0x05FC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  MovementSpeedScale;                                      // 0x0600(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                 MovementSpeedRotationScalePitchYawRoll;                  // 0x060C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                        MeshSpaceAimInterp;                                      // 0x0618(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0020[0x4];                                   // 0x061C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct PCoreUObject_FTransform                               MeshspaceTransform_OnDraw;                               // 0x0620(0x0030) Edit, BlueprintVisible, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                        OnDrawMeshspaceInterp;                                   // 0x0650(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0021[0xC];                                   // 0x0654(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct PCoreUObject_FTransform                               MeshspaceTransform_OnHolster;                            // 0x0660(0x0030) Edit, BlueprintVisible, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                        OnHolsterMeshspaceInterp;                                // 0x0690(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  BodySocket;                                              // 0x0694(0x0008) Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  HandsSocket;                                             // 0x069C(0x0008) Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      AnimationIndex1P;                                        // 0x06A4(0x0004) Edit, BlueprintVisible, Net, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0022[0x4];                                   // 0x06A8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      AnimationIndex3P;                                        // 0x06AC(0x0004) Edit, BlueprintVisible, Net, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0023[0x4];                                   // 0x06B0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bDeployable;                                             // 0x06B4(0x0001) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShouldEquipToHands;                                     // 0x06B5(0x0001) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0024[0x2];                                   // 0x06B6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EItemCategory>                                        ItemCategories;                                          // 0x06B8(0x0010) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0025[0xC];                                   // 0x06C8(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        Holster_PlayRate;                                        // 0x06D4(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        Draw_PlayRate;                                           // 0x06D8(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0026[0x4];                                   // 0x06DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMatineeCameraShake*                                   Reload_CameraShake;                                      // 0x06E0(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMatineeCameraShake*                                   ReloadEmpty_CameraShake;                                 // 0x06E8(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMatineeCameraShake*                                   DrawCameraShake;                                         // 0x06F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMatineeCameraShake*                                   HolsterCameraShake;                                      // 0x06F8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0027[0x38];                                  // 0x0700(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                               LastFPAnimInstanceClass;                                 // 0x0738(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0028[0x38];                                  // 0x0740(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                               LastTPAnimInstanceClass;                                 // 0x0778(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AThrownEvidenceActor*                                  ThrownEvidenceActor;                                     // 0x0780(0x0008) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0029[0xC];                                   // 0x0788(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bIsBeingCollected;                                       // 0x0794(0x0001) Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0030[0x3];                                   // 0x0795(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        CurrentCollectionTime;                                   // 0x0798(0x0004) Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MaxCollectionTime;                                       // 0x079C(0x0004) Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AReadyOrNotCharacter*                                  CollectingCharacter;                                     // 0x07A0(0x0008) Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDropping;                                               // 0x07A8(0x0001) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0031[0xF];                                   // 0x07A9(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bDisableAnimInstanceWhenNotEquipped;                     // 0x07B8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0032[0xF];                                   // 0x07B9(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UReadyOrNotWeaponAnimData*                             AnimationData;                                           // 0x07C8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReadyOrNotWeaponAnimData*                             DefaultAnimationData;                                    // 0x07D0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReadyOrNotWeaponAnimData*                             GripAnimationData;                                       // 0x07D8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReadyOrNotWeaponAnimData*                             ShieldRaisedAnimationData;                               // 0x07E0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReadyOrNotWeaponAnimData*                             ShieldLoweredAnimationData;                              // 0x07E8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FreeAimLimit;                                            // 0x07F0(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FreeAimLimitADS;                                         // 0x07F4(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LazySpringStrength;                                      // 0x07F8(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LazySpringStrengthADS;                                   // 0x07FC(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FreeAimInterpSpeed;                                      // 0x0800(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FreeAimInterpADSModifier;                                // 0x0804(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FreeAimInterpHipModifier;                                // 0x0808(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FreeAimSlowMoveModifier;                                 // 0x080C(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FreeAimSlowMoveTolerance;                                // 0x0810(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0033[0x4];                                   // 0x0814(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMatineeCameraShake*                                   MeleeUserCameraShake;                                    // 0x0818(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bADSCountsAsAbuse;                                       // 0x0820(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0034[0x3];                                   // 0x0821(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        HesitationBoostMultiplier;                               // 0x0824(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsAimingDownSights;                                     // 0x0828(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bUseLowReady;                                            // 0x0829(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0035[0x2];                                   // 0x082A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        PushbackRange;                                           // 0x082C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LowReadyRange;                                           // 0x0830(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                        LowReadyRangeSightsModifier;                             // 0x0834(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LowReadyPitchThreshold;                                  // 0x0838(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0036[0x4];                                   // 0x083C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWeaponSound*                                          SoundData;                                               // 0x0840(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bOverrideBreathingEvent;                                 // 0x0848(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0037[0x7];                                   // 0x0849(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            BreathingAudioOverride;                                  // 0x0850(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bEasyPickup;                                             // 0x0858(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bNoPickup;                                               // 0x0859(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bScriptedFPHidden;                                       // 0x085A(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMotionBlockType                                             ActiveMotionBlock;                                       // 0x085B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsOneHandedItem;                                        // 0x085C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0038[0x3];                                   // 0x085D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        FP_ADS_Motion_Weight;                                    // 0x0860(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0039[0x4];                                   // 0x0864(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bApplyLookupData : 1;                                    // 0x0868(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0040[0x3];                                   // 0x0869(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        CameraBobScaleH;                                         // 0x086C(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CameraBobScaleV;                                         // 0x0870(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CameraBobSpeedScaleH;                                    // 0x0874(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CameraBobSpeedScaleV;                                    // 0x0878(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CameraBobAmplitudeBaseSpeed;                             // 0x087C(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CameraBobIntensitySprintScale;                           // 0x0880(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CameraBobAmplitudeWalkScale;                             // 0x0884(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CameraBobAmplitudeSprintScale;                           // 0x0888(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WeaponBobScaleH;                                         // 0x088C(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WeaponBobScaleV;                                         // 0x0890(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WeaponBobScaleInjured;                                   // 0x0894(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WeaponBobSpeedScaleH;                                    // 0x0898(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WeaponBobSpeedScaleV;                                    // 0x089C(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WeaponBobSpeedScaleInjured;                              // 0x08A0(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WeaponBobCrouchModifier;                                 // 0x08A4(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WeaponBobADSModifier;                                    // 0x08A8(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WeaponBobRotPitchScale;                                  // 0x08AC(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WeaponBobRotRollScale;                                   // 0x08B0(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WeaponBobRotPitchSpeed;                                  // 0x08B4(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WeaponBobRotRollSpeed;                                   // 0x08B8(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WeaponBobRotCrouchModifier;                              // 0x08BC(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WeaponBobRotADSModifier;                                 // 0x08C0(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0042[0x4];                                   // 0x08C4(0x0004) Fix size for supers

	public:
		void StunTick(EStunType StunType);
		void StunnedWhileEquipped();
		void StopTPMontage(class UAnimMontage* AnimMontage);
		void StopFPMontage(class UAnimMontage* AnimMontage);
		bool ShouldHideInPictureInPictureScopes();
		void SetupBaseEvents();
		void Server_SetMasterPoseComponent(class USkeletalMeshComponent* Mesh);
		void Server_PlayTPMontage(class UAnimMontage* NewMontage, float PlayRate);
		void Server_ApplyPointDamage(class AActor* DamagedActor, float BaseDamage, const struct FVector& HitFromDirection, const struct FHitResult& HitInfo, class AController* EventInstigator, class AActor* DamageCauser, class UDamageType* DamageTypeClass);
		void PlayWeaponCleaning();
		void PlayTPMontage(class UAnimMontage* NewMontage, float PlayRate);
		void PlayFPMontage(class UAnimMontage* NewMontage, float PlayRate);
		void PlayFMODAudio(class UFMODEvent* Event);
		bool PlayDraw(bool bDrawFirst);
		void PlayDoorPushAnimation();
		void PlayButtonPushAnimation();
		void OnRep_MasterPoseComponent();
		void OnRep_IsDropping();
		void OnRep_AttachmentRep();
		void OnPhysicsImpact(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		void OnOwnerPossessed();
		void OnMeshComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		void OnItemUsed();
		void OnItemUseComplete();
		void OnItemPrimaryUseEnd();
		void OnItemPrimaryUse();
		void OnItemEndUse();
		void OnItemAttachmentsChanged__DelegateSignature(EItemAttachment AttachmentChanged);
		void OnEvidenceCollected__DelegateSignature();
		void NextFireMode();
		void Multicast_PlayTPMontage(class UAnimMontage* NewMontage, float PlayRate);
		void Multicast_MarkAsEvidence(bool bMarkAsEvidence);
		void MarkAsEvidence(bool bMarkAsEvidence);
		void LastStunTick(EStunType StunType);
		bool IsPlayingStunnedEndAnimation();
		bool IsPlayingStunnedAnimation();
		bool IsMontagePlaying(class UAnimMontage* Montage, bool bIncludeFP, bool bIncludeTP);
		bool IsLocallyControlled();
		bool IsEquipped();
		bool IsDoorPushAnimationPlaying();
		bool IsDepleted();
		bool IsCurrentlyReloading();
		bool IsCollidesWhileNotEquipped();
		bool IsButtonPushAnimationPlaying();
		bool IsBlockingAnimationPlaying(TArray<EBlockingAnimationExclusion> Exclusions);
		void InterpToTargetScale(const struct FVector& NewScale, float InterpSpeed);
		bool HasDoorPushAnimation();
		bool HasButtonPushAnimation();
		float GetWeight();
		float GetLowReadyRange();
		class USkeletalMeshComponent* GetItemMesh();
		class FName GetEquipSocket();
		class UAnimMontage* GetCurrentTPMontage();
		class UAnimMontage* GetCurrentFPMontage();
		void EndStunWhileEquipped();
		void EnableOutline(EActorOutlineType OutlineType);
		void DisableOutline();
		void DisableOrEnableAnimation();
		void DetachStatic();
		bool ContainsItemCategory(EItemCategory TestCategory);
		void ClientPlayDraw(bool bDrawFirst);
		void Client_StopItemAnimation(const struct FWeaponAnim& InWeaponAnim, bool bOnlyTP);
		void Client_SetFPModelVisibility(bool bVisibility);
		void Client_PlayItemAnimation(const struct FWeaponAnim& InWeaponAnim, bool bRestartIfAlreadyPlaying, bool bOnlyLocal, bool bOnlyTP);
		void Client_PlayFPMontage(class UAnimMontage* NewMontage, float PlayRate);
		void Client_OnItemPickedUp(class AActor* NewOwner, bool bEquipped);
		bool CanShowActionSlot1(class AReadyOrNotCharacter* PC);
		bool CanEquip(class AReadyOrNotCharacter* ToCharacter);
		void CancelCurrentReloadAction(bool bCancel);
		void BP_AttachmentRep();
		void AttachStatic();
		void ApplyLookupData(bool bUpdateDefaultObject);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BaseMagPouch
	 * Size -> 0x0028 (FullSize[0x08F0] - InheritedSize[0x08C8])
	 */
	class ABaseMagPouch : public ABaseItem
	{
	public:
		class USkeletalMeshComponent*                                MagazineMesh;                                            // 0x08C8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAnimationAsset*                                       OpenPouchAnim;                                           // 0x08D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAnimationAsset*                                       ClosedPouchAnim;                                         // 0x08D8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                  MagSocket;                                               // 0x08E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x08E8(0x0008) MISSED OFFSET (PADDING)

	public:
		void ShowMagazine();
		void OpenPouch();
		void HideMagazine();
		void ClosePouch();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.StunDamage
	 * Size -> 0x05E0 (FullSize[0x0620] - InheritedSize[0x0040])
	 */
	class UStunDamage : public UDamageType
	{
	public:
		bool                                                         bProjectileStun;                                         // 0x0040(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMatineeCameraShake*                                   StunShake;                                               // 0x0048(0x0008) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPostProcessSettings                                  PostProcessSettings;                                     // 0x0050(0x0560) Edit, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UAnimMontage*                                          HitMontage_3P;                                           // 0x05B0(0x0008) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                 CameraRotationOffset;                                    // 0x05B8(0x000C) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                        AppliedSpeed;                                            // 0x05C4(0x0004) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MaxMovementSpeedWhenStunned;                             // 0x05C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DoorDamageMultiplier;                                    // 0x05CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDamageAllDoorPiecesAtOnce;                              // 0x05D0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCanPushDoorWithForce;                                   // 0x05D1(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x2];                                   // 0x05D2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        DoorPushScale;                                           // 0x05D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundCue*                                             ImpactSound;                                             // 0x05D8(0x0008) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EStunType                                                    StunType;                                                // 0x05E0(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bPlayAudioWhenHit;                                       // 0x05E1(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x6];                                   // 0x05E2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            StunSoundEffect;                                         // 0x05E8(0x0008) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCauseHealthDamage;                                      // 0x05F0(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCausesSuppression;                                      // 0x05F1(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bBreaksDestructibles;                                    // 0x05F2(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x1];                                   // 0x05F3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        SuppressionAmount;                                       // 0x05F4(0x0004) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMatineeCameraShake*                                   SuppressionCameraShake;                                  // 0x05F8(0x0008) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bMustBeLookingAtDamageCauser;                            // 0x0600(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bStunLocksAim;                                           // 0x0601(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x2];                                   // 0x0602(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        StunSpeedMultiplier;                                     // 0x0604(0x0004) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WeaponDownLengthOnStun;                                  // 0x0608(0x0004) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bNonLethal;                                              // 0x060C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x3];                                   // 0x060D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        LessThanLethalAmount;                                    // 0x0610(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        AdditionalUpcloseDamageIncrease;                         // 0x0614(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        AdditionalHeadDamageIncrease;                            // 0x0618(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSwatAIIsAbuse;                                          // 0x061C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bChildAIIsAbuse;                                         // 0x061D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCompliantIsAbuse;                                       // 0x061E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bArrestedIsAbuse;                                        // 0x061F(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void ScriptedStunEvent(class AReadyOrNotCharacter* Victim, float* Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BeanbagDamageType
	 * Size -> 0x0000 (FullSize[0x0620] - InheritedSize[0x0620])
	 */
	class UBeanbagDamageType : public UStunDamage
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_PlayMontage
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UAnimNotify_PlayMontage : public UAnimNotify
	{
	public:
		class UAnimMontage*                                          Montage;                                                 // 0x0038(0x0008) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_RemovePlacedC2
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_RemovePlacedC2 : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BecomesWet
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IBecomesWet : public IInterface
	{
	public:
		void StartBecomingWet(float WetnessRate);
		void StartBecomingDry(float DrynessRate);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_PlayPostProcessEffect
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UAnimNotify_PlayPostProcessEffect : public UAnimNotify
	{
	public:
		class FName                                                  PostProcessEffectName;                                   // 0x0038(0x0008) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Objective
	 * Size -> 0x0050 (FullSize[0x0270] - InheritedSize[0x0220])
	 */
	class AObjective : public AInfo
	{
	public:
		class UScoringComponent*                                     ScoringComponent;                                        // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            ObjectiveCompleteAudio;                                  // 0x0228(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            ObjectiveFailedAudio;                                    // 0x0230(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                  ObjectiveName;                                           // 0x0238(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                  ObjectiveDescription;                                    // 0x0250(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		ECOOPMode                                                    LockedToMode;                                            // 0x0268(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bFailureEndsMission;                                     // 0x0269(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHiddenObjective;                                        // 0x026A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EObjectiveStatus                                             ObjectiveStatus;                                         // 0x026B(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x026C(0x0004) MISSED OFFSET (PADDING)

	public:
		void TickObjective_BP();
		void OnObjectiveFailed();
		void OnObjectiveCreated();
		void OnObjectiveCompleted();
		void ObjectiveFailed();
		void ObjectiveCompleted();
		bool IsObjectiveInProgress();
		bool IsObjectiveFailed();
		bool IsObjectiveCompleted();
		EObjectiveStatus GetObjectiveStatus();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ArrestXSuspects
	 * Size -> 0x0008 (FullSize[0x0278] - InheritedSize[0x0270])
	 */
	class AArrestXSuspects : public AObjective
	{
	public:
		int32_t                                                      RequiredArrests;                                         // 0x0270(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x0274(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotGameState
	 * Size -> 0x0768 (FullSize[0x09D8] - InheritedSize[0x0270])
	 */
	class AReadyOrNotGameState : public AGameStateBase
	{
	public:
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x0270(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      RandomStreamSeed;                                        // 0x0274(0x0004) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x0278(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UReadyOrNotVoiceConfig*                                VoiceConfig;                                             // 0x0280(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APlayerState*                                          NextHost;                                                // 0x0288(0x0008) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                                MigrationGUID;                                           // 0x0290(0x0010) Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x02A0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bHasHostFinishedLoading;                                 // 0x02A4(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x3];                                   // 0x02A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ABaseItem*>                                     AllItems;                                                // 0x02A8(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UDataTable*>                                    LoadedDataTables;                                        // 0x02B8(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class AScoringManager*                                       ScoringManager;                                          // 0x02C8(0x0008) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FString, class AAIFactionManager*>                AIFactionManagers;                                       // 0x02D0(0x0050) NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x8];                                   // 0x0320(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReadyOrNotSignificanceManager*                        SignificanceManager;                                     // 0x0328(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                   Rep_GameModeSettings;                                    // 0x0330(0x0010) Net, NoDestructor, NativeAccessSpecifierPublic
		float                                                        TimeTillGameStartCountdown;                              // 0x0340(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0xC];                                   // 0x0344(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ABadAIAction*>                                  BadAIActionActors;                                       // 0x0350(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                         bHasLeftLoadOut;                                         // 0x0360(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x7];                                   // 0x0361(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULevelStreaming*                                       PreMissionStreamedLevel;                                 // 0x0368(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TSoftObjectPtr<class UWorld>                                 SubPreMissionPlanningLevel;                              // 0x0370(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0x4];                                   // 0x0394(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0008[0x8];                                   // 0x0398(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                  ModeName;                                                // 0x03A0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                  ModeRules;                                               // 0x03B8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<class AObjective*>                                    MissionObjectives;                                       // 0x03D0(0x0010) BlueprintVisible, Net, ZeroConstructor, NativeAccessSpecifierPublic
		class UObituaryData*                                         ObituaryData;                                            // 0x03E0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAnnounceReinforcements;                                 // 0x03E8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRadioGlareEnabled;                                      // 0x03E9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0009[0x6];                                   // 0x03EA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            ReplenishAllAmmoSound;                                   // 0x03F0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AReadyOrNotCharacter*>                          RedTeamPlayers;                                          // 0x03F8(0x0010) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class AReadyOrNotCharacter*>                          BlueTeamPlayers;                                         // 0x0408(0x0010) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NativeAccessSpecifierPublic
		class UFMODAudioComponent*                                   AnnouncerAudioComponent;                                 // 0x0418(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      TotalMissionAbuseCount;                                  // 0x0420(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0010[0x4];                                   // 0x0424(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<TScriptInterface<class IListenForArrest>>             ArrestListeners;                                         // 0x0428(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<TScriptInterface<class IListenForDeath>>              DeathListeners;                                          // 0x0438(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<TScriptInterface<class IListenForIncapacitation>>     IncapacitationListeners;                                 // 0x0448(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<TScriptInterface<class IListenForInjury>>             InjuryListeners;                                         // 0x0458(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<TScriptInterface<class IListenForSpawn>>              SpawnListeners;                                          // 0x0468(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<TScriptInterface<class IListenForPickup>>             EvidenceListeners;                                       // 0x0478(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<TScriptInterface<class IListenForWeaponClearing>>     WeaponClearingListeners;                                 // 0x0488(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<TScriptInterface<class IListenForReport>>             ReportListeners;                                         // 0x0498(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<TScriptInterface<class IListenForGameStart>>          GameStartListeners;                                      // 0x04A8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<TScriptInterface<class IListenForGameEnd>>            GameEndListeners;                                        // 0x04B8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<TScriptInterface<class IListenForGamePreStart>>       GamePreStartListeners;                                   // 0x04C8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<TScriptInterface<class IListenForRoundEnded>>         RoundEndListeners;                                       // 0x04D8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<TScriptInterface<class IListenForYell>>               YellListeners;                                           // 0x04E8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<TScriptInterface<class IListenForUncuffed>>           UncuffedListeners;                                       // 0x04F8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		bool                                                         bDisableEquipment;                                       // 0x0508(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bEnableCommandChat;                                      // 0x0509(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bUseReinforcements;                                      // 0x050A(0x0001) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0011[0x1];                                   // 0x050B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        Reinforcements_TimeRemaining;                            // 0x050C(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRunWarmup;                                              // 0x0510(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0012[0x7];                                   // 0x0511(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                                SceneCapturePlayerCameraClass;                           // 0x0518(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowEnemiesAsSuspects;                                  // 0x0520(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0013[0x7];                                   // 0x0521(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FKillFeedData>                                 KillFeedData;                                            // 0x0528(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               OnUpdateKillFeed;                                        // 0x0538(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0014[0xF];                                   // 0x0539(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		float                                                        ServerTimeUntilNextMap;                                  // 0x0548(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0015[0x4];                                   // 0x054C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                GameRulesIntroAnnouncerRowName;                          // 0x0550(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bWaitingForPlayers;                                      // 0x0560(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0016[0x3];                                   // 0x0561(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        PlanningTimeLeft;                                        // 0x0564(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      RedTeamWins;                                             // 0x0568(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      BlueTeamWins;                                            // 0x056C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0017[0x8];                                   // 0x0570(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnWinsUpdated;                                           // 0x0578(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0018[0xF];                                   // 0x0579(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		float                                                        EndPlayTimer;                                            // 0x0588(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RoundTimeRemaining;                                      // 0x058C(0x0004) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bUseTimelimit;                                           // 0x0590(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0019[0x3];                                   // 0x0591(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      Scorelimit;                                              // 0x0594(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TimeSinceMatchStarted;                                   // 0x0598(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0020[0x4];                                   // 0x059C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReferendum*                                           CurrentReferendum;                                       // 0x05A0(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AMusicManager*                                         MusicManager;                                            // 0x05A8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AReferendum*>                                   AllowedReferendumTypes;                                  // 0x05B0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		bool                                                         bCanShowScoreboard;                                      // 0x05C0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bUsePlanningUICamera;                                    // 0x05C1(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0021[0x2];                                   // 0x05C2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        RoundTimeElapsed;                                        // 0x05C4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      RoundsPlayed;                                            // 0x05C8(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      RoundsToPlay;                                            // 0x05CC(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETeamType                                                    RoundWinningTeam;                                        // 0x05D0(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETeamType                                                    MatchWinningTeam;                                        // 0x05D1(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0022[0x6];                                   // 0x05D2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AReadyOrNotPlayerState*>                        RoundWinners;                                            // 0x05D8(0x0010) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               OnChatMessageReceived;                                   // 0x05E8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0023[0xF];                                   // 0x05E9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class FString                                                MissionName;                                             // 0x05F8(0x0010) Edit, BlueprintVisible, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                  MissionDescription;                                      // 0x0608(0x0018) Edit, BlueprintVisible, Net, NativeAccessSpecifierPublic
		EMatchState                                                  MatchState;                                              // 0x0620(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0024[0x7];                                   // 0x0621(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                NextURLReplicated;                                       // 0x0628(0x0010) Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               OnSequenceStarted;                                       // 0x0638(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0025[0xF];                                   // 0x0639(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TArray<class FName>                                          WhitelistedLabels;                                       // 0x0648(0x0010) Net, ZeroConstructor, NativeAccessSpecifierPublic
		class UDebugDisplayWidget*                                   DebugDisplayWidget;                                      // 0x0658(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                                ModeURL_Replicated;                                      // 0x0660(0x0010) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FFloorMapPointData>                            DrawingPointData;                                        // 0x0670(0x0010) Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic
		bool                                                         bPvPMode;                                                // 0x0680(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCanReportToTOC;                                         // 0x0681(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0026[0x2];                                   // 0x0682(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        GametypeDamageModifier;                                  // 0x0684(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        HeadDamageModifier;                                      // 0x0688(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FootDamageModifier;                                      // 0x068C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LegDamageModifier;                                       // 0x0690(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ArmDamageModifier;                                       // 0x0694(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        OtherLimbDamageModifier;                                 // 0x0698(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bFreeForAll;                                             // 0x069C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDisablePickups;                                         // 0x069D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRevivesAllowed : 1;                                     // 0x069E(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.i, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0027[0x1];                                   // 0x069F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FRChatMessage>                                 SavedChatMessages;                                       // 0x06A0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                         bBallisticsDebug;                                        // 0x06B0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDamageDebug;                                            // 0x06B1(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSpeechRecognitionDebug;                                 // 0x06B2(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bGOAPDebug;                                              // 0x06B3(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAnnounceTeamReinforcements;                             // 0x06B4(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0028[0x3];                                   // 0x06B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                  Msg_BothTeamsReinforced;                                 // 0x06B8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                  Msg_RedTeamReinforced;                                   // 0x06D0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                  Msg_BlueTeamReinforced;                                  // 0x06E8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<class UChallenge*>                                    GameModeChallenges;                                      // 0x0700(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		class UChallengeManager*                                     ChallengeManager;                                        // 0x0710(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UChallengeManager*                                     ChallengeManagerClass;                                   // 0x0718(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bInPlanningMenu : 1;                                     // 0x0720(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0029[0x3];                                   // 0x0721(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        CustomTimeDilationApplied;                               // 0x0724(0x0004) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class APlayerController*>                             AdminPlayerControllers;                                  // 0x0728(0x0010) Net, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0030[0x8];                                   // 0x0738(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ATOCManager*                                           TOCManager;                                              // 0x0740(0x0008) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPlanningMarkerArray                                  MarkerArray;                                             // 0x0748(0x0148) Net, NativeAccessSpecifierPublic
		struct FPlanningLineArray                                    LineArray;                                               // 0x0890(0x0148) Net, NativeAccessSpecifierPublic

	public:
		void SkipMVPScreen();
		void SetTimeDilationSynced(float TimeDilation);
		void ResetReplicatedTimers();
		void RemoveYellListener(const TScriptInterface<class IListenForYell>& YellListener);
		void RemoveWeaponClearingListener(const TScriptInterface<class IListenForWeaponClearing>& WeaponClearingListener);
		void RemoveUncuffedListener(const TScriptInterface<class IListenForUncuffed>& UncuffedListener);
		void RemoveSpawnListener(const TScriptInterface<class IListenForSpawn>& SpawnListener);
		void RemoveRoundEndListener(const TScriptInterface<class IListenForRoundEnded>& RoundEndListener);
		void RemoveReportListener(const TScriptInterface<class IListenForReport>& ReportListener);
		void RemoveInjuryListener(const TScriptInterface<class IListenForInjury>& InjuryListener);
		void RemoveIncapacitationListener(const TScriptInterface<class IListenForIncapacitation>& IncapacitationListener);
		void RemoveGameStartListener(const TScriptInterface<class IListenForGameStart>& GameStartListener);
		void RemoveGamePreStartListener(const TScriptInterface<class IListenForGamePreStart>& GameStartListener);
		void RemoveGameEndListener(const TScriptInterface<class IListenForGameEnd>& GameEndListener);
		void RemoveEvidenceListener(const TScriptInterface<class IListenForPickup>& EvidenceListener);
		void RemoveDeathListener(const TScriptInterface<class IListenForDeath>& DeathListener);
		void RemoveArrestListener(const TScriptInterface<class IListenForArrest>& ArrestListener);
		void PlayerKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
		void PlayerArrested(class AReadyOrNotCharacter* ArrestedCharacter, class AReadyOrNotCharacter* InstigatorCharacter);
		void OverWriteModeNameText(const class FText& newModeName);
		void OnWinsUpdated__DelegateSignature();
		void OnUpdateKillFeed__DelegateSignature(class AActor* Causer, class ACharacter* InstigatorCharacter, class ACharacter* KilledCharacter);
		void OnSequenceStartedFunc(class ULevelSequence* LevelSequence);
		void OnSequenceStarted__DelegateSignature(class ULevelSequence* LevelSequence);
		void OnRep_WinsUpdated();
		void OnRep_StreamSeed();
		void OnRep_NextHost();
		void OnRep_MatchState();
		void OnRep_DrawPointDataChanged();
		void OnRep_CustomTimeDilation();
		void OnLoadoutFinished();
		void OnChatMessage__DelegateSignature(const struct FRChatMessage& Message);
		void OnAuthenticationResponse(bool bSuccess, bool bSerialFound, bool bSerialValid, const class FString& failedReason);
		void OnAlphaAccessChecked(bool bBanned, const class FString& BanReason);
		void Multicast_StopSequence(class ULevelSequence* Sequence);
		void Multicast_PlaySequence(class ULevelSequence* Sequence);
		void Multicast_PlayAnnouncerForTeam(const class FString& SpeechRowName, ETeamType TeamType);
		void Multicast_OnYell(class AReadyOrNotCharacter* Yeller);
		void Multicast_OnWeaponCleared(class ABaseItem* WeaponActor);
		void Multicast_OnTargetUncuffed(class AReadyOrNotCharacter* ArrestedCharacter, class AReadyOrNotCharacter* Uncuffer);
		void Multicast_OnTargetReported(class AReadyOrNotCharacter* Reporter, class UObject* ReportedTarget);
		void Multicast_OnTargetBecameReportable(class UObject* Target);
		void Multicast_OnRoundReset();
		void Multicast_OnRoundEnded();
		void Multicast_OnGameStarted();
		void Multicast_OnGamePreStarted();
		void Multicast_OnGameEnded();
		void Multicast_OnEvidencePickedUp(class ABaseItem* EvidenceActor);
		void Multicast_OnEvidenceDropped(class ABaseItem* EvidenceActor);
		void Multicast_OnCharacterSpawned(class AReadyOrNotCharacter* SpawnedCharacter);
		void Multicast_OnCharacterInjured(class AReadyOrNotCharacter* Victim, float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
		void Multicast_OnCharacterIncapacitated(class AReadyOrNotCharacter* Victim, class AReadyOrNotCharacter* Killer, class AActor* Inflictor);
		void Multicast_OnCharacterDied(class AReadyOrNotCharacter* Victim, class AReadyOrNotCharacter* Killer, class AActor* Inflictor);
		void Multicast_OnArrestOccurred(class AReadyOrNotCharacter* ArrestedCharacter, class AReadyOrNotCharacter* Arrester);
		void Multicast_BroadcastChatMessage(const struct FRChatMessage& ChatMessage);
		void Multicast_AnnounceTeamReinforcements(ETeamType TeamSpawned);
		void Multicast_AnnounceSuddenDeath();
		void LoadStartupWidgetsAfterLoadingScreen();
		bool IsEveryoneReady();
		bool IsAdminPlayerController(class APlayerController* PlayerController);
		float GetWinningScore(bool* bUsesScoring);
		int32_t GetTotalMissionAbuseCount();
		float GetTeamScore(ETeamType Team);
		int32_t GetRemainingRounds();
		void GetPlayerStatesOnTeamOrderedByScore(ETeamType Team, TArray<class AReadyOrNotPlayerState*>* PlayerStates);
		TArray<class AReadyOrNotPlayerState*> GetPlayerStatesOfTeam(ETeamType Team);
		TArray<class AReadyOrNotPlayerState*> GetPlayersAvailableForVote();
		void GetNextMapMode(class FString* Map, class FString* Mode);
		class ABadAIAction* GetMostRecentBadAIActionReport();
		int32_t GetMaxSwatScore();
		int32_t GetMaxSuspectScore();
		class FString GetMapURL();
		struct FGameModeSettings GetGameModeSettings();
		TArray<struct FDeploymentStatus> GetDeploymentStatusOfPlayers();
		int32_t GetCurrentSwatScore();
		int32_t GetCurrentSuspectScore();
		class UReadyOrNotProfile* GetCurrentProfile();
		TArray<class AReadyOrNotPlayerController*> GetControllersAvailableForVote();
		void Client_BindCharacterEvents(class APlayerCharacter* Character);
		void AddYellListener(const TScriptInterface<class IListenForYell>& YellListener);
		void AddWeaponClearingListener(const TScriptInterface<class IListenForWeaponClearing>& WeaponClearingListener);
		void AddUncuffedListener(const TScriptInterface<class IListenForUncuffed>& UncuffedListener);
		void AddSpawnListener(const TScriptInterface<class IListenForSpawn>& SpawnListener);
		void AddRoundEndListener(const TScriptInterface<class IListenForRoundEnded>& RoundEndListener);
		void AddReportListener(const TScriptInterface<class IListenForReport>& ReportListener);
		void AddInjuryListener(const TScriptInterface<class IListenForInjury>& InjuryListener);
		void AddIncapacitationListener(const TScriptInterface<class IListenForIncapacitation>& IncapacitationListener);
		void AddGameStartListener(const TScriptInterface<class IListenForGameStart>& GameStartListener);
		void AddGamePreStartListener(const TScriptInterface<class IListenForGamePreStart>& GameStartListener);
		void AddGameEndListener(const TScriptInterface<class IListenForGameEnd>& GameEndListener);
		void AddEvidenceListener(const TScriptInterface<class IListenForPickup>& EvidenceListener);
		void AddDeathListener(const TScriptInterface<class IListenForDeath>& DeathListener);
		void AddArrestListener(const TScriptInterface<class IListenForArrest>& ArrestListener);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_LockPickDoor
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UAnimNotify_LockPickDoor : public UAnimNotify
	{
	public:
		bool                                                         bLockPickFinished : 1;                                   // 0x0038(0x0001) BIT_FIELD Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimatedIconWidget_Imprint
	 * Size -> 0x0008 (FullSize[0x0268] - InheritedSize[0x0260])
	 */
	class UAnimatedIconWidget_Imprint : public UUserWidget
	{
	public:
		class UImage*                                                Icon_Image;                                              // 0x0260(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void SetIconImage(class UTexture2D* NewIconImage);
		void Init(const struct FVector& InWorldLocation, class UTexture2D* InIconImage);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BleedComponent
	 * Size -> 0x0020 (FullSize[0x00D0] - InheritedSize[0x00B0])
	 */
	class UBleedComponent : public UActorComponent
	{
	public:
		class UFMODEvent*                                            BleedEvent;                                              // 0x00B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsBleeding;                                             // 0x00B8(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x00B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bTempStopBleeding;                                       // 0x00C0(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x00C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      HealCount;                                               // 0x00C4(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0002[0x8];                                   // 0x00C8(0x0008) MISSED OFFSET (PADDING)

	public:
		void StopBleeding();
		void StartBleeding();
		bool IsBleeding();
		float GetHealCount();
		float GetBleedTime();
		void DoHeal();
		bool CanHeal();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BpGameplayHelperLib
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UBpGameplayHelperLib : public UBlueprintFunctionLibrary
	{
	public:
		void UnloadCustomizationLevels(class UWorld* WorldContext);
		void ToggleGrenadeDrawDebug();
		void ToggleFriendlyNameplates();
		void ShowLoadoutOnMeshes(const struct FSavedLoadout& Loadout, class USkeletalMeshComponent* BodyMesh, class USkeletalMeshComponent* HeadMesh, class USkeletalMeshComponent* ArmorMesh, class USkeletalMeshComponent* ItemMesh, class UStaticMeshComponent* ItemMagMesh);
		bool SetUseMeshpainting(bool bUseMeshPainting);
		bool SetShowFPS(bool bShowFPS);
		bool SetShowControls(bool bShowControls);
		bool SetShellLifetime(float ShellLifeTime);
		bool SetSendMapStatistics(bool bSendMapStatistics);
		bool SetPublicLobbyCooldown(int32_t Seconds);
		bool SetMouseSensitivity(float MouseSensitivity);
		bool SetMouseInverted(bool bInvertVertical, bool bInvertHorizontal);
		bool SetMicInputGain(float MicInputGain);
		bool SetLastConnectedServerIP(const class FString& IP);
		bool SetFreelookSensitivity(float Sensitivity);
		bool SetFoV(float FOV);
		bool SetFlashlightShadows(bool bFlashLightShadows);
		bool SetBounceLightEnabled(bool bBounceLightEnabled);
		bool SaveZoomADSSetting(bool bZoomADS);
		bool SaveVOIPVolume(float Volume);
		bool SaveUIVolume(float Volume);
		bool SaveToggleADS(bool ToggleADS);
		bool SaveTeamViewSetting(bool bEnabled, int32_t TeamViewFPS);
		bool SaveShowTeamStatus(bool bShowTeamStatus);
		bool SaveShowPlayerIconSetting(bool bShowPlayerIcon);
		bool SaveShowHUDSetting(bool bShowHUD);
		bool SaveShowHesitationBarSetting(bool bShowHesitationBar);
		bool SaveShowHealthIconSetting(bool bShowHealthIcons);
		bool SaveShowCommandMarkersSetting(bool bShowCommandMarkers);
		bool SaveShowCommandContextHintSetting(bool bShowCommandContextHint);
		bool SaveShotgunSettings(EShotgunReloadType ShotgunReloadType);
		bool SaveSFXVolume(float Volume);
		bool SaveSettings();
		bool SaveServersideChecksum(bool bServerSideChecksumEnabled);
		bool SaveSelectedAudioDevice(const class FString& InAudioDevice);
		bool SaveScoreReadoutSetting(EScoreReadoutMode InScoreReadoutMode);
		bool SaveSafeZoneSettings(float SafeZoneX, float SafeZoneY);
		bool SavePlayerDetails(const struct FPlayerDetails& PlayerDetails);
		bool SavePiPResolutionScale(float ResolutionScale);
		bool SavePiPFPS(bool bEnabled, float FPS);
		bool SaveOptiwandViewMode(EOptiwandViewMode OptiwandViewMode);
		bool SaveNVGStyle(ENVGStyle NewNVGStyle);
		bool SaveMusicVolume(float Volume);
		bool SaveMirrorResolutionScale(float ResolutionScale);
		bool SaveMirrorReflectionEnabled(bool bEnabled);
		bool SaveMirrorEnabledOnlyInLobby(bool bEnabled);
		bool SaveMirrorDynamicShadowsEnabled(bool bShowDynamicShadows);
		bool SaveMirrorDecalsEnabled(bool bShowDecals);
		bool SaveMirrorAntiAliasEnabled(bool bShowAntiAlias);
		bool SaveMaxShellsInWorld(int32_t NewMaxShells);
		bool SaveMasterVolume(float Volume);
		bool SaveLoadout(const struct FSavedLoadout& Loadout, const class FString& LoadoutName);
		void SaveLicenseSave(class ULicenseSave* LevelStats);
		bool SaveItemSelectionStyleSettings(EItemSelectionInterfaceType ItemSelectionInterface);
		bool SaveHUDSettings(bool bShowHUD, bool bCurvedHUD, bool bShowCompass, bool ShowWeaponHUD, bool bShowMagazineHUD, bool bShowChat, bool bSwayHUD, bool b2DReload, float IconScale, float QuickThrowScale, int32_t FireModeDisplayOption, bool bShowMultiplayerNames, bool bShowButtonPrompts);
		bool SaveHotkeyHintSetting(bool bShowHotkeyHint);
		bool SaveHitmarkerSfxEnabled(bool bHitmarkerSfxEnabled);
		bool SaveGrenadeSettings(EGrenadeThrowSettingType GrenadeThrowType);
		bool SaveEmptyMagReloadSettings(EEmptyMagReloadType EmptyMagReloadType);
		bool SaveDefaultCommandAsOption(int32_t DefaultCommandOption, int32_t DefaultDoorUnknownCommandOption, int32_t DefaultDoorOpenCommandOption, int32_t DefaultDoorLockedCommandOption, int32_t DefaultDoorUnlockedCommandOption);
		bool SaveDefaultCommand(ESwatCommand DefaultCommand, ESwatCommand DefaultDoorUnknownCommand, ESwatCommand DefaultDoorOpenCommand, ESwatCommand DefaultDoorLockedCommand, ESwatCommand DefaultDoorUnlockedCommand);
		void RemoveWidgetFromViewport(const class FString& WidgetName);
		bool ReloadSettings();
		void PlayInterfaceSound(class UWorld* WorldContext, EInterfaceSoundType SoundClass);
		bool LoadZoomADSSetting(bool* bZoomADS);
		bool LoadToggleADS(bool* ToggleADS);
		bool LoadTeamViewFPSSetting(bool* bEnabled, int32_t* TeamViewFPS);
		bool LoadShowTeamStatus(bool* bShowTeamStatus);
		bool LoadShowPlayerNamesSetting(bool* bShowPlayerNames);
		bool LoadShowPlayerIconSetting(bool* bShowPlayerIcon);
		bool LoadShowHUDSetting(bool* bShowHUD);
		bool LoadShowHesitationBarSetting(bool* bShowHesitationBar);
		bool LoadShowHealthIconSetting(bool* bShowHealthIcons);
		bool LoadShowCommandMarkersSetting(bool* bShowCommandMarkers);
		bool LoadShowCommandContextHintSetting(bool* bShowCommandContextHint);
		bool LoadShotgunSettings(EShotgunReloadType* ShotgunReloadType);
		bool LoadServersideChecksum(bool* bServerSideChecksumEnabled);
		bool LoadSelectedAudioDevice(class FString* OutAudioDevice);
		bool LoadScoreReadoutSetting(EScoreReadoutMode* OutScoreReadoutMode);
		bool LoadSafeZoneSettings(float* SafeZoneX, float* SafeZoneY);
		bool LoadPlayerDetails(struct FPlayerDetails* PlayerDetails);
		bool LoadPiPResolutionScale(float* ResolutionScale);
		bool LoadPiPFPS(bool* bEnabled, float* FPS);
		bool LoadOptiwandViewMode(EOptiwandViewMode* OptiwandViewMode);
		bool LoadNVGStyle(ENVGStyle* NVGStyle);
		bool LoadMirrorResolutionScale(float* ResolutionScale);
		bool LoadMirrorReflectionEnabled(bool* bEnabled);
		bool LoadMirrorEnabledOnlyInLobby(bool* bEnabled);
		bool LoadMirrorDynamicShadowsEnabled(bool* bShowDynamicShadows);
		bool LoadMirrorDecalsEnabled(bool* bShowDecals);
		bool LoadMirrorAntiAliasEnabled(bool* bShowAntiAlias);
		bool LoadMaxShellsInWorld(int32_t* MaxShells);
		bool LoadLoadoutAndEquipPlayer(struct FSavedLoadout* Loadout, class AReadyOrNotCharacter* EquipPlayer, const class FString& LoadoutName);
		bool LoadLoadout(struct FSavedLoadout* Loadout, const class FString& LoadoutName);
		class ULicenseSave* LoadLicenseSave();
		bool LoadItemSelectionStyleSettings(EItemSelectionInterfaceType* ItemSelectionInterface);
		bool LoadHUDSettings(bool* bShowHUD, bool* bCurvedHUD, bool* bShowCompass, bool* bShowWeaponHUD, bool* bShowMagazineHUD, bool* bShowChat, bool* bSwayHUD, bool* b2DReload, float* IconScale, float* QuickThrowScale, int32_t* FireModeDisplayOption, bool* bShowPlayerNames, bool* bShowButtonPrompts);
		bool LoadHotkeyHintSetting(bool* bShowHotkeyHint);
		bool LoadGrenadeSettings(EGrenadeThrowSettingType* GrenadeThrowType);
		bool LoadEmptyMagReloadSettings(EEmptyMagReloadType* EmptyMagReloadType);
		bool LoadDefaultCommandsAsOption(int32_t* DefaultCommandOption, int32_t* DefaultDoorUnknownCommandOption, int32_t* DefaultDoorOpenCommandOption, int32_t* DefaultDoorLockedCommandOption, int32_t* DefaultDoorUnlockedCommandOption);
		bool LoadDefaultCommands(ESwatCommand* DefaultCommand, ESwatCommand* DefaultDoorUnknownCommand, ESwatCommand* DefaultDoorOpenCommand, ESwatCommand* DefaultDoorLockedCommand, ESwatCommand* DefaultDoorUnlockedCommand);
		void LoadCustomizationLevels(class UWorld* WorldContext);
		bool IsSupporterOnlyBuild();
		bool IsShowHUDEnabled();
		bool IsShippingBuild();
		bool IsRTXDMOBuild();
		bool IsPvPSupported(const struct FLevelDataLookupTable& LookupTable);
		bool IsPreMissionBriefingBeforeLoadout();
		bool IsObjectiveTarget(class AReadyOrNotCharacter* Target, class AReadyOrNotCharacter* LocalPlayer);
		bool IsInPublicLobbyCooldown(float* SecondsRemaining);
		bool IsFriendly(class AReadyOrNotGameState* GameState, ETeamType TeamOne, ETeamType TeamTwo);
		bool IsEnemy(ETeamType TeamOne, ETeamType TeamTwo);
		bool IsEditorBuild();
		bool IsDMOPVPOnly();
		bool IsDMOMatchMake();
		bool IsDMOBuild();
		bool IsDLCLocked(class ABaseItem* Item);
		bool IsCOOPSupported(const struct FLevelDataLookupTable& LookupTable);
		bool HasWidgetInViewport(const class FString& WidgetName);
		bool HasLineOfSightLoc(class UWorld* WorldContext, const struct FVector& A, const struct FVector& B, TArray<class AActor*> ignoredActors, ECollisionChannel CollisionChannel);
		bool HasLineOfSightExt(class AActor* Observer, class AActor* B, struct FHitResult* HitResult);
		bool HasLineOfSight(class AActor* Observer, class AActor* B);
		class UWorld* GetWorldStatic();
		class UWorld* GetWorldBP(class APlayerController* PC);
		TArray<class UUserWidget*> GetWidgetsFromViewport(const class FString& WidgetName);
		struct FWidgetLookupData GetWidgetDataFromLookupData(const class FString& WidgetName);
		class UWidgetsData* GetWidgetData();
		bool GetVolumes(float* MasterVolume, float* UIVolume, float* SFXVolume, float* MusicVolume, float* VOIPVolume);
		bool GetUseMeshpainting(bool* bUseMeshPainting);
		class UDataTable* GetTrapLookupDataTable();
		class UDataTable* GetSuspectArmourDataTable();
		class UDataTable* GetSpeechLookupDataTable(const class FString& Speaker);
		class UReadyOrNotSingleplayerProfile* GetSingleplayerProfile(const class FString& LoadSlotName);
		bool GetShowFPS(bool* bShowFPS);
		bool GetShowControls(bool* bShowControls);
		bool GetShellLifetime(float* ShellLifeTime);
		bool GetSendMapStatistics(bool* bSendMapStatistics);
		class UReadyOrNotGameInstance* GetRONGameInstance();
		class UDataSingleton* GetRoNData();
		bool GetRandomLoadingScreenTip(class FText* Tip);
		void GetRadialDamageData(const struct FRadialDamageEvent& DamageEvent, struct FVector* Origin, float* BaseDamage, float* MinimumDamage, float* InnerRadius, float* OuterRadius, float* DamageFalloff);
		int32_t GetProjectVersionAsInt();
		class FString GetProjectVersion();
		void GetPointDamageData(const struct FPointDamageEvent& DamageEvent, float* Damage, struct FVector_NetQuantizeNormal* ShotDirection, struct FHitResult* HitInfo);
		class UPenetrationData* GetPenetrationData();
		class UDataTable* GetPairedInteractionDataTable();
		class UMusicData* GetMusicData(class UWorld* WorldContext);
		class UReadyOrNotMultiplayerProfile* GetMultiplayerProfile(const class FString& LoadSlotName);
		class UDataTable* GetMoveStyleDataTable();
		bool GetMouseSensitivity(float* MouseSensitvity);
		bool GetMouseInverted(bool* bInvertVertical, bool* bInvertHorizontal);
		bool GetMicInputGain(float* MicInputGain);
		class UReadyOrNotMetaProfile* GetMetaProfile();
		class AMapStatisticsSystem* GetMapStatistics(class UWorld* WorldContext);
		struct FLevelDataLookupTable GetMapDetailsFromName(const class FString& MapName);
		class ULookupData* GetLookupData();
		class AReadyOrNotPlayerState* GetLocalPlayerState(class UWorld* World);
		bool GetLocalization(class FString* Target);
		class FString GetLoadURLFromData(const struct FLevelDataLookupTable& LookUp);
		bool GetLoadoutNames(TArray<class FString>* LoadoutNames);
		class UTexture2D* GetLoadingScreenLevelImage(const class FString& Level);
		class UReadyOrNotSaveGame* GetLoadGameInstance(const class FString& LoadSlotName);
		TArray<struct FLevelDataLookupTable> GetLevels();
		class UDataTable* GetLevelLookupDataTable();
		struct FLevelDataLookupTable GetLevelData(class UWorld* WorldContext);
		bool GetLastConnectedServerIP(class FString* IP);
		class UDataTable* GetItemLookupDataTable();
		class UItemData* GetItemData(class UWorld* WorldContext);
		class UHumanCharacterHUD_V2* GetHUDWidget();
		bool GetHitmarkerSfxEnabled(bool* bHitmarkerSfxEnabled);
		class UDataTable* GetGameModeSettingsLookupDataTable();
		class UReadyOrNotGameInstance* GetGameInstance(class UWorld* WorldContext);
		class FString GetFriendlyModeFromECoopMode(ECOOPMode InCoopMode);
		void GetFriendlyMapAndModeFromName(const class FString& InUrl, class FString* OutInternalMapName, class FString* OutFriendlyMap, class FString* OutFriendlyMode);
		bool GetFreelookSensitivity(float* Sensitivity);
		bool GetFoV(float* FOV);
		bool GetFlashlightShadows(bool* bFlashLightShadows);
		class UUserWidget* GetFirstWidgetFromViewport(const class FString& WidgetName);
		class APlayerCharacter* GetFirstAlivePlayerControlledCharacter(class UWorld* WorldContext);
		bool GetExperimentalFeatures(bool* bExperimentalFeatures);
		class UDataTable* GetDoorLookupDataTable();
		ETeamType GetDMOTeamType();
		class FString GetDMOGameMode();
		class FString GetDMOAddress();
		float GetDistanceBetweenActors2D(class AActor* Actor1, class AActor* Actor2);
		float GetDistanceBetweenActors(class AActor* Actor1, class AActor* Actor2);
		class UReadyOrNotProfile* GetCurrentProfile(class UWorld* WorldContext);
		class UDataTable* GetConversationLookupDataTable();
		class ASuspectCharacter* GetClosestActiveSuspect(const struct FVector& Location, float Distance, bool bMustHaveTarget);
		class ACivilianCharacter* GetClosestActiveCivilian(const struct FVector& Location, float Distance, bool bMustHaveTarget);
		class UDataTable* GetCharacterLookOverrideDataTable();
		class FString GetBuildTime();
		class FString GetBuildDate();
		bool GetBounceLightEnabled(bool* bBounceLightEnabled);
		int32_t GetAttachmentPointsRemaining(const struct FSavedLoadout& Loadout);
		class UDataTable* GetAnimatedIconLookupDataTable();
		struct FAnimatedIcon GetAnimatedIconFromTable(const class FName& RowName, bool* bSuccess);
		class UDataTable* GetAmmoLookupDataTable();
		class UDataTable* GetAILookupDataTable();
		class FString GetAdditionalBugReportInformation(class APlayerController* PC);
		class APlayerCharacter* FindClosestDeadGuyInRadius(const struct FVector& Origin, class AActor* Causer, float Radius, bool bIncludeUnconscious);
		bool EquipLoadoutOnPlayer(const struct FSavedLoadout& Loadout, class AReadyOrNotCharacter* EquipPlayer, const struct FLoadoutEquipOptions& LoadoutEquipOptions);
		void EnableInteractionForController(class AActor* InInteractableActor, class APlayerController* InPlayerCharacter);
		void EnableInteractionFor(class AActor* InInteractableActor, class APlayerCharacter* InPlayerCharacter);
		void EnableInteractionCompForController(class UInteractableComponent* InteractableComponent, class APlayerController* InPlayerController);
		void DisableInteractionForController(class AActor* InInteractableActor, class APlayerController* InPlayerCharacter);
		void DisableInteractionFor(class AActor* InInteractableActor, class APlayerCharacter* InPlayerCharacter);
		void DisableInteractionCompForController(class UInteractableComponent* InteractableComponent, class APlayerController* InPlayerController);
		bool DeleteLoadout(const class FString& LoadoutName);
		EItemType ConvertWeaponTypeToItemType(EWeaponType WeaponType);
		struct FVector2D ConvertSquareVectorToCircle(const struct FVector2D& SquareVector);
		EWeaponType ConvertItemTypeToWeaponType(EItemType ItemType);
		class FString ConvertFloatToStringMinutes_Detail(float Val);
		class FString ConvertFloatToStringMinutes(float Val);
		class FString ConvertDegreeIntoLetter(float Degrees);
		bool CompareLevelDataLookupBP(const struct FLevelDataLookupTable& A, const struct FLevelDataLookupTable& B);
		void ChangeLocalization(const class FString& Target);
		struct FRadialDamageEvent CastToRadialDamageEvent(const struct FDamageEvent& DamageEvent, EStructureCastPathway* Branches);
		struct FPointDamageEvent CastToPointDamageEvent(const struct FDamageEvent& DamageEvent, EStructureCastPathway* Branches);
		bool CanSwatKillPlayer();
		void AttachMagazinesToWeapon(class ABaseMagazineWeapon* WeaponClass, class ABaseMagazineWeapon* Weapon);
		void AddDefaultItemsToPlayer(class AReadyOrNotCharacter* Player);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ArrestTargetActivity
	 * Size -> 0x0038 (FullSize[0x0230] - InheritedSize[0x01F8])
	 */
	class UArrestTargetActivity : public UBaseActivity
	{
	public:
		class AReadyOrNotCharacter*                                  ArrestTarget;                                            // 0x01F8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInteractionsData*                                     ArrestInteraction;                                       // 0x0200(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x28];                                  // 0x0208(0x0028) MISSED OFFSET (PADDING)

	public:
		void TickMoveToStage(float DeltaTime, float Uptime);
		void TickArrestStage(float DeltaTime, float Uptime);
		void OnArresterKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
		void EnterMoveToStage();
		void EnterArrestStage();
		bool CanArrest();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ArrestAndRescueGS
	 * Size -> 0x0008 (FullSize[0x09E0] - InheritedSize[0x09D8])
	 */
	class AArrestAndRescueGS : public AReadyOrNotGameState
	{
	public:
		int32_t                                                      BlueRespawnWaves;                                        // 0x09D8(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      RedRespawnWaves;                                         // 0x09DC(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_PreMissionWeaponVis
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_PreMissionWeaponVis : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotSaveGame
	 * Size -> 0x0220 (FullSize[0x0248] - InheritedSize[0x0028])
	 */
	class UReadyOrNotSaveGame : public USaveGame
	{
	public:
		class FString                                                SaveSlotName;                                            // 0x0028(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                     UserIndex;                                               // 0x0038(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSavedLoadout>                                 Loadouts;                                                // 0x0040(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FPlayerDetails                                        PlayerDetails;                                           // 0x0050(0x0010) NativeAccessSpecifierPublic
		TMap<class ABaseItem*, struct FSavedWeaponAttachmentData>    AttachmentSaveMap;                                       // 0x0060(0x0050) BlueprintVisible, NativeAccessSpecifierPublic
		TMap<ETeamType, class USkinComponent*>                       SkinSaveMap;                                             // 0x00B0(0x0050) BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic
		TMap<EItemType, class ABaseItem*>                            SavedWeaponClassOfTypeMap;                               // 0x0100(0x0050) BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic
		TMap<class ABaseWeapon*, EFireMode>                          WeaponClassToDefaultFireModeMap;                         // 0x0150(0x0050) BlueprintVisible, NativeAccessSpecifierPublic
		TMap<class ABaseItem*, struct FSavedWeaponPreset>            WeaponToWeaponPresetsMap;                                // 0x01A0(0x0050) BlueprintVisible, NativeAccessSpecifierPublic
		TMap<class FName, struct FLoadoutPreset>                     LoadoutPresetMap;                                        // 0x01F0(0x0050) BlueprintVisible, NativeAccessSpecifierPublic
		int64_t                                                      PCDO;                                                    // 0x0240(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		class UReadyOrNotSaveGame* CreateDefaultSavegame(const class FString& LoadSlotName);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SetControlRotationToCamBoneAnimNotify
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class USetControlRotationToCamBoneAnimNotify : public UAnimNotify
	{
	public:
		class FName                                                  CameraBoneName;                                          // 0x0038(0x0008) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BleedDamageType
	 * Size -> 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
	 */
	class UBleedDamageType : public UDamageType
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ASequenceInteraction
	 * Size -> 0x0030 (FullSize[0x02D8] - InheritedSize[0x02A8])
	 */
	class AASequenceInteraction : public ALevelSequenceActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x02A8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bAutoActivateInRange;                                    // 0x02B8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x02B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                                ReferencedCharacterViewTarget;                           // 0x02C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBoxComponent*                                         RadiusComp;                                              // 0x02C8(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APlayerCharacter*                                      LastPlayedSequencerCharacter;                            // 0x02D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void OnSequencerFinished();
		void OnBoxOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		void OnBoxEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimCharacterMovementLibrary
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UAnimCharacterMovementLibrary : public UBlueprintFunctionLibrary
	{
	public:
		void UpdateCharacterMovementSnapshot(const struct PCoreUObject_FTransform& WorldTransform, const struct FVector& WorldVelocity, const struct FVector& WorldAcceleration, bool bIsOnGround, float RootYawOffset, struct FAnimCharacterMovementSnapshot* Snapshot);
		class UAnimSequence* SelectAnimForCardinalDirection(EAnimCardinalDirection CardinalDirection, const struct FCardinalDirectionAnimSet& AnimSet);
		struct FVector PredictGroundMovementStopLocation(const struct FAnimCharacterMovementSnapshot& MovementSnapshot, const struct FAnimCharacterMovementPredictionSnapshot& PredictionSnapshot);
		struct FVector PredictGroundMovementPivotLocation(const struct FAnimCharacterMovementSnapshot& MovementSnapshot, float GroundFriction);
		EAnimCardinalDirection GetCardinalDirectionFromAngle(EAnimCardinalDirection PreviousCardinalDirection, float DirectionAngleInDegrees, float DeadZoneAngle);
		float CalculateDirAngle(const struct FVector& CurVel, const struct FRotator& CurActorRotation, const struct FRotator& DirRotation, float ClampMin, float ClampMax, float CurDirAngle);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BuildingTrigger
	 * Size -> 0x0098 (FullSize[0x02C0] - InheritedSize[0x0228])
	 */
	class ABuildingTrigger : public ATriggerBox
	{
	public:
		int32_t                                                      NumberOfFloors;                                          // 0x0228(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bAuto : 1;                                               // 0x022C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bUniformFloorSpacing : 1;                                // 0x022C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x022D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        SpacingBetweenFloors;                                    // 0x0230(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x0234(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                                SpacingPerFloor;                                         // 0x0238(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		class FText                                                  BuildingName;                                            // 0x0248(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		TMap<int32_t, class FString>                                 FloorNumberToFloorName;                                  // 0x0260(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		TArray<struct FBuildingFloor>                                GeneratedFloors;                                         // 0x02B0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, Protected, NativeAccessSpecifierProtected

	public:
		void OnBuildingExit(class AActor* OverlappedActor, class AActor* OtherActor);
		void OnBuildingEnter(class AActor* OverlappedActor, class AActor* OtherActor);
		bool IsActorOnFloor(class AActor* Actor, int32_t FloorNumber);
		int32_t GetFloorNumberFromActorLocation(class AActor* Actor);
		struct FVector GetFloorLocation(int32_t FloorNumber);
		void GenerateFloors();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BuildingTrigger_Incrimination
	 * Size -> 0x0010 (FullSize[0x02D0] - InheritedSize[0x02C0])
	 */
	class ABuildingTrigger_Incrimination : public ABuildingTrigger
	{
	public:
		TArray<class AIncriminationClueSpawnPoint*>                  ClueSpawnPoints;                                         // 0x02C0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AsyncLoader
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UAsyncLoader : public UBlueprintFunctionLibrary
	{
	public:
		class UUserWidget* GetLazyLoadedWidget(TSoftClassPtr<class UUserWidget> Widget);
		class ABaseWeapon* GetLazyLoadedWeapon(TSoftClassPtr<class ABaseWeapon> Item);
		class USoundCue* GetLazyLoadedSoundCue(TSoftObjectPtr<class USoundCue> Cue);
		class USkeletalMesh* GetLazyLoadedSkeletalMesh(TSoftObjectPtr<class USkeletalMesh> Mesh);
		TArray<class AReadyOrNotGameMode*> GetLazyLoadedReadyOrNotGameModeArray(TArray<TSoftClassPtr<class AReadyOrNotGameMode>> Array);
		class UParticleSystem* GetLazyLoadedParticleSystem(TSoftObjectPtr<class UParticleSystem> Particle);
		class UObject* GetLazyLoadedObject(TSoftObjectPtr<class UObject> Object);
		class UStaticMesh* GetLazyLoadedMesh(TSoftObjectPtr<class UStaticMesh> Mesh);
		class UMaterialInstance* GetLazyLoadedMaterialInstance(TSoftObjectPtr<class UMaterialInstance> Material);
		class ABaseItem* GetLazyLoadedItem(TSoftClassPtr<class ABaseItem> Item);
		class UTexture2D* GetLazyLoadedImage(TSoftObjectPtr<class UTexture2D> Texture);
		TArray<class UClass*> GetLazyLoadedClassArray(TArray<TSoftClassPtr<class UClass>> Array);
		class UObject* GetLazyLoadedClass(TSoftClassPtr<class UClass> Class);
		class UAnimSequence* GetLazyLoadedAnimSequence(TSoftObjectPtr<class UAnimSequence> Anim);
		class UAnimMontage* GetLazyLoadedAnimMontage(TSoftObjectPtr<class UAnimMontage> Montage);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BreakableGlass
	 * Size -> 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
	 */
	class ABreakableGlass : public AActor
	{
	public:
		void Multicast_DestructibleHit(const struct FVector_NetQuantize& Location);
		void Multicast_ConvertHitAndExecute(int32_t FirstPositionBox, int32_t TextureX, int32_t TextureY, const struct FVector_NetQuantize& HitPosition, const struct FVector_NetQuantize& Direction, float Damage);
		void FirstHitPositionObject(int32_t FirstPositionBox, int32_t TextureY, int32_t TextureX, const struct FVector& HitPosition, const struct FVector& ObjectiveDirection, float DamageRadius, bool bFirstHitCanBreakIt, float CharacterVelocityToBreak);
		void DestructibleHit(const struct FVector& Location);
		void ConvertHitAndExecute(const struct FHitResult& Hit, float Damage);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BulletTracer
	 * Size -> 0x0040 (FullSize[0x0260] - InheritedSize[0x0220])
	 */
	class ABulletTracer : public AActor
	{
	public:
		class USceneComponent*                                       RootComp;                                                // 0x0220(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x20];                                  // 0x0228(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystemComponent*                              ParticleComponent;                                       // 0x0248(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                       TracerParticle;                                          // 0x0250(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                       SmokeParticle;                                           // 0x0258(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BulletDamageType
	 * Size -> 0x0030 (FullSize[0x0070] - InheritedSize[0x0040])
	 */
	class UBulletDamageType : public UDamageType
	{
	public:
		class UUserWidget*                                           HitVisuals;                                              // 0x0040(0x0008) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMatineeCameraShake*                                   HitShake;                                                // 0x0048(0x0008) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bArmorPiercing;                                          // 0x0050(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bNonLethal;                                              // 0x0051(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x2];                                   // 0x0052(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        AggressionChangeInAI;                                    // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        HeadDamageMultiplier;                                    // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        UpperBodyDamageMultiplier;                               // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LowerBodyDamageMultiplier;                               // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ArmDamageMultiplier;                                     // 0x0064(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LegDamageMultiplier;                                     // 0x0068(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FootDamageMultiplier;                                    // 0x006C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_SetCoverFirePose
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UAnimNotify_SetCoverFirePose : public UAnimNotify
	{
	public:
		class UAnimSequence*                                         Pose;                                                    // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimDistanceMatchingLibrary
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UAnimDistanceMatchingLibrary : public UBlueprintFunctionLibrary
	{
	public:
		void CalculateDistanceMatchingStates(float DeltaTime, class ACharacter* CurrentCharacter, class UCharacterMovementComponent* CurrentMovementComponent, EDistanceMatchingType* DistanceMatchingCurrentState, const struct FAnimCharacterMovementSnapshot& MovementSnapshot, const struct FAnimCharacterMovementPredictionSnapshot& PredictionSnapshot, class UWorld* TargetWorld, float MinPivotAngle, TArray<class AActor*> ActorsToIgnore, struct FVector* LastActorLocation, struct FCardinalDirectionSnapshot* PivotingCardinalDirSnapShot, struct FPredictionResult* StartMarker, struct FPredictionResult* StopMarker, struct FPredictionResult* PivotMarker, struct FPredictionResult* TakeOffMarker, struct FPredictionResult* ApexMarker, struct FPredictionResult* LandingMarker, bool* bSMStartRuleset, bool* bSMStopRuleset, bool bIsAICharacter, bool bShowDebug);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.C2Explosive
	 * Size -> 0x00B8 (FullSize[0x0980] - InheritedSize[0x08C8])
	 */
	class AC2Explosive : public ABaseItem
	{
	public:
		unsigned char                                                UnknownData_0003[0x4];                                   // 0x08C8(0x0004) Fix Super Size
		struct FHitResult                                            LastGoodPlacement;                                       // 0x08CC(0x0088) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x0954(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlacedC2Explosive*                                    LastPlacedC2Explosive;                                   // 0x0958(0x0008) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MaxPlacementDistance;                                    // 0x0960(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x0964(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                                CurrentActorPlacement;                                   // 0x0968(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APlacedC2Explosive*                                    PlacedC2Class;                                           // 0x0970(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x8];                                   // 0x0978(0x0008) MISSED OFFSET (PADDING)

	public:
		void Server_StartC2Placement(class AActor* Actor);
		void Server_FinishC2Placement();
		void OnRep_LastPlacedC2Explosive();
		void Multicast_StartPlaceC2Explosive();
		void EquipDetonator(bool bFromExplosives);
		void Client_C2PlacementFinished();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CanIssueCommandOn
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class ICanIssueCommandOn : public IInterface
	{
	public:
		class AActor* GetCommandActor();
		bool CanIssueCommand();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_SetCoverHidePose
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UAnimNotify_SetCoverHidePose : public UAnimNotify
	{
	public:
		class UAnimSequence*                                         Pose;                                                    // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CachedAnimDataLibrary
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UCachedAnimDataLibrary : public UBlueprintFunctionLibrary
	{
	public:
		bool StateMachine_IsStateRelevant(class UAnimInstance* InAnimInstance, const struct FCachedAnimStateData& CachedAnimStateData);
		float StateMachine_GetLocalWeight(class UAnimInstance* InAnimInstance, const struct FCachedAnimStateData& CachedAnimStateData);
		float StateMachine_GetGlobalWeight(class UAnimInstance* InAnimInstance, const struct FCachedAnimStateData& CachedAnimStateData);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CanPlaceC2On
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class ICanPlaceC2On : public IInterface
	{
	public:
		void OnC2Removed(class APlacedC2Explosive* C2);
		void OnC2Detonated(class APlacedC2Explosive* C2);
		struct FRotator GetPlacementRotation(const struct FHitResult& TraceHit);
		struct FVector GetPlacementLocation(const struct FHitResult& TraceHit);
		bool CanPlaceC2OnNow(class APlayerCharacter* C2Owner, class AC2Explosive* C2, const struct FHitResult& Hit);
		void C2StopPlacement(class AC2Explosive* C2);
		void C2StartPlacement(class AC2Explosive* C2);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BaseWidget
	 * Size -> 0x0018 (FullSize[0x0278] - InheritedSize[0x0260])
	 */
	class UBaseWidget : public UUserWidget
	{
	public:
		struct FVector2D                                MouseAxisDeltaThreshold;                                 // 0x0260(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector2D                                GamepadAxisDeltaThreshold;                               // 0x0268(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AReadyOrNotGameState*                                  RONGS;                                                   // 0x0270(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		bool UpdateDebugInfo();
		void ToggleWidgetVisibility(bool bNotHitTestable);
		void StopWidgetAnimation_Internal(class UWidgetAnimation* InWidgetAnimation);
		void ShowWidget(bool bNotHitTestable);
		void PlayWidgetAnimation_Internal(class UWidgetAnimation* InWidgetAnimation, bool bRestartIfAlreadyPlaying);
		void PlaySoundEffect(class UFMODEvent* SoundEffectToPlay);
		void PauseWidgetAnimation_Internal(class UWidgetAnimation* InWidgetAnimation);
		bool IsMouseAxisBeyondThreshold(const struct FVector2D& InMouseDelta);
		bool IsGamepadAxisBeyondThreshold(const struct FVector2D& InGamepadAxis);
		bool IsBlockingAnimationPlaying();
		void HideWidget();
		bool HasMouseMoved();
		struct FVector2D GetMousePosition();
		struct FVector2D GetMouseDelta();
		struct FVector2D GetCenterScreenPosition();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BriefingWidget
	 * Size -> 0x0058 (FullSize[0x02D0] - InheritedSize[0x0278])
	 */
	class UBriefingWidget : public UBaseWidget
	{
	public:
		unsigned char                                                UnknownData_0000[0x58];                                  // 0x0278(0x0058) MISSED OFFSET (PADDING)

	public:
		void PlayMissionAudio(const class FString& AudioName);
		void MoveCameraToMouseCursor(const struct FPointerEvent& PointerEvent);
		void GetWhiteboardTimelineAsString(class FString* OutString);
		void GetWhiteboardObjectiveText(class FString* OutString);
		void GetLevelNickname(class FString* OutNickname);
		void GetBriefing(struct FMissionAudio* OutBriefing);
		void GetBios(EBioType BioType, TArray<struct FCharacterBio>* OutBios);
		void GetBioDetails(const struct FCharacterBio& Bio, TArray<struct FCriminalRecord>* RapSheet, class UTexture2D** ProfileImage, class FString* OutDescription, class FString* OutBioText);
		void DoesLevelHaveMissionAudio(const class FString& AudioName, bool* bHasMissionAudio);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_SetCoverIdlePose
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UAnimNotify_SetCoverIdlePose : public UAnimNotify
	{
	public:
		class UAnimSequence*                                         Pose;                                                    // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BlendRagdollAnimNotifyState
	 * Size -> 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
	 */
	class UBlendRagdollAnimNotifyState : public UAnimNotifyState
	{
	public:
		float                                                        TotalBlendDuration;                                      // 0x0030(0x0004) BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CurrentBlendAmount;                                      // 0x0034(0x0004) BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        PelvisWakeUpTime;                                        // 0x0038(0x0004) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x1];                                   // 0x003C(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bUsePhysicalAnimComp;                                    // 0x003D(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x2];                                   // 0x003E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPhysicalAnimationData                                PhysicalAnimData;                                        // 0x0040(0x0024) Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0xC];                                   // 0x0064(0x000C) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BadAIAction
	 * Size -> 0x0060 (FullSize[0x0280] - InheritedSize[0x0220])
	 */
	class ABadAIAction : public AActor
	{
	public:
		class FText                                                  Summary;                                                 // 0x0220(0x0018) Edit, d.e.o.tate, NativeAccessSpecifierPublic
		class FText                                                  Description;                                             // 0x0238(0x0018) Edit, d.e.o.tate, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0250(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBillboardComponent*                                   BillboardComponent;                                      // 0x0258(0x0008) Edit, ExportObject, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x20];                                  // 0x0260(0x0020) MISSED OFFSET (PADDING)

	public:
		void ReportBadAIAction();
		void Report(bool bReportToLog, bool bDrawString);
		void RemoveReport(bool bReportToLog, bool bDrawString);
		void RemoveBadAIAction();
		void AddNote(const class FText& InSummary, const class FText& InDescription);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_SetHoleTraversalPose
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UAnimNotify_SetHoleTraversalPose : public UAnimNotify
	{
	public:
		class UAnimSequence*                                         Pose;                                                    // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CharacterCustomizationPortal
	 * Size -> 0x0068 (FullSize[0x0288] - InheritedSize[0x0220])
	 */
	class ACharacterCustomizationPortal : public AActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReadyOrNotCharacter*                                  CustomizationCharacter;                                  // 0x0228(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UInteractableComponent*                                InteractableComponent;                                   // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBillboardComponent*                                   BillboardComponent;                                      // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UArrowComponent*                                       CharacterSpawnPoint;                                     // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x10];                                  // 0x0248(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UStaticMeshComponent*>                          CompsToOutline;                                          // 0x0258(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<class ULightComponent*>                               LightsToEnable;                                          // 0x0268(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
		class FName                                                  LightActorsOfTag;                                        // 0x0278(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                         bHasLocked;                                              // 0x0280(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0002[0x7];                                   // 0x0281(0x0007) MISSED OFFSET (PADDING)

	public:
		void UpdateCharacterLookOverride(const class FName& Head, const class FName& Body);
		bool SaveCharacterLookOverride(const class FName& InHead, const class FName& InBody);
		bool IsDLCLocked(const struct FCharacterPersonalizationData& Data);
		void GetCustomizationEntries(TArray<struct FCharacterPersonalizationData>* OutHeads, TArray<struct FCharacterPersonalizationData>* OutBodys);
		bool GetCurrentCharacterLookOverride(class FName* OutHead, class FName* OutBody);
		bool GetCharacterLookOverride(const class FName& Head, const class FName& Body, struct FCharacterLookOverride* OutCharacterLookOverride);
		void GetAllCompatibleHeads(const class FName& InBody, TArray<class FName>* OutHeads);
		void GetAllCompatibleBodies(const class FName& InHead, TArray<class FName>* OutBodies);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotGameplayEffect
	 * Size -> 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
	 */
	class UReadyOrNotGameplayEffect : public UObject
	{
	public:
		class UMulticastInlineDelegate                               OnGameplayEffectExpired;                                 // 0x0028(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xF];                                   // 0x0029(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class AActor*                                                Actor;                                                   // 0x0038(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWorld*                                                World;                                                   // 0x0040(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x10];                                  // 0x0048(0x0010) MISSED OFFSET (PADDING)

	public:
		void Server_ResetEffect(bool bMulticast);
		void Server_Initialize(class AActor* InActor, bool bMulticast);
		void Server_ApplyEffectFor(float Seconds, bool bMulticast);
		void Server_ApplyEffect(bool bMulticast);
		void ResetEffect();
		void OnEffectExpired();
		void Multicast_ResetEffect();
		void Multicast_Initialize(class AActor* InActor);
		void Multicast_ApplyEffectFor(float Seconds);
		void Multicast_ApplyEffect();
		void Initialize(class AActor* InActor);
		void ApplyEffectFor(float Seconds);
		void ApplyEffect();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BloodData
	 * Size -> 0x0240 (FullSize[0x0270] - InheritedSize[0x0030])
	 */
	class UBloodData : public UDataAsset
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UMaterialInterface*>                            Splatters;                                               // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                        SplatterMaxTraceDistance;                                // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                SplatterSizeRange;                                       // 0x004C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UMaterialInterface*>                            AnimatedSplatters;                                       // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class AAnimatedDecal*                                        AnimatedDecalClass;                                      // 0x0068(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                          AnimatedSplatterBones;                                   // 0x0070(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                        AnimatedSplatterMaxDistance;                             // 0x0080(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                AnimatedSplatterSizeRange;                               // 0x0084(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        AnimatedBloodTimescale;                                  // 0x008C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                    AnimatedBloodCurve;                                      // 0x0090(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<class UMaterialInterface*>                            HeadshotSplatters;                                       // 0x0118(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class UStaticMesh*                                           HeadshotDecalMesh;                                       // 0x0128(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                          HeadshotSplatterBones;                                   // 0x0130(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                        HeadshotMaxSplatterDistance;                             // 0x0140(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                HeadshotSplatterSizeRange;                               // 0x0144(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x014C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UParticleSystem*>                               HitEntryParticles;                                       // 0x0150(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		uint32_t                                                     SkinnedDecalImageCount;                                  // 0x0160(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                SkinnedDecalSizeRange;                                   // 0x0164(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x4];                                   // 0x016C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FArteryData>                                   Arteries;                                                // 0x0170(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UParticleSystem*>                               ArteryParticles;                                         // 0x0180(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UMaterialInterface*>                            ArteryParticleCollisionDecals;                           // 0x0190(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                        ArteryParticleCollisionChance;                           // 0x01A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                ArteryParticleCollisionSizeRange;                        // 0x01A4(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x4];                                   // 0x01AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UParticleSystem*>                               DismembermentParticles;                                  // 0x01B0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UMaterialInterface*>                            DismembermentParticleCollisionDecals;                    // 0x01C0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                        DismembermentParticleCollisionChance;                    // 0x01D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                DismembermentParticleCollisionSizeRange;                 // 0x01D4(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x4];                                   // 0x01DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGibData                                              GibData;                                                 // 0x01E0(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class ABloodPool*                                            BloodPoolClass;                                          // 0x0210(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        BloodPoolSpawnDelay;                                     // 0x0218(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  BloodPoolSpawnBone;                                      // 0x021C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x4];                                   // 0x0224(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UMaterialInstance*>                             BigSplatterDecals;                                       // 0x0228(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class AExplosionGibs*                                        Gibs;                                                    // 0x0238(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        BigSplatterTraceDistance;                                // 0x0240(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  BigSplatterDecalSize;                                    // 0x0244(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            HitEvent;                                                // 0x0250(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            DeadHitEvent;                                            // 0x0258(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            GoreEvent;                                               // 0x0260(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            HeadshotEvent;                                           // 0x0268(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Projectile
	 * Size -> 0x0038 (FullSize[0x0258] - InheritedSize[0x0220])
	 */
	class AProjectile : public AActor
	{
	public:
		class USphereComponent*                                      CollisionComp;                                           // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UProjectileMovementComponent*                          MovementComp;                                            // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x0230(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            ProjectileHitSound;                                      // 0x0240(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x0248(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AImpactEffect*                                         ImpactEffectsClass;                                      // 0x0250(0x0008) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		void Multicast_SpawnImpactEffects(const struct FHitResult& Hit, class AImpactEffect* EffectsClass, float DecalScale, bool bExitImpact, bool bArmorImpact);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_SetStrafe
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UAnimNotify_SetStrafe : public UAnimNotify
	{
	public:
		bool                                                         bSetStrafe;                                              // 0x0038(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BasePlayerEffect
	 * Size -> 0x0008 (FullSize[0x0060] - InheritedSize[0x0058])
	 */
	class UBasePlayerEffect : public UReadyOrNotGameplayEffect
	{
	public:
		class APlayerCharacter*                                      PlayerCharacter;                                         // 0x0058(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotSessionData
	 * Size -> 0x00B8 (FullSize[0x00E0] - InheritedSize[0x0028])
	 */
	class UReadyOrNotSessionData : public USaveGame
	{
	public:
		class FString                                                SaveSlotName;                                            // 0x0028(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                     UserIndex;                                               // 0x0038(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FString, int32_t>                                 SavedTeamKillData;                                       // 0x0040(0x0050) NativeAccessSpecifierPublic
		TMap<class FString, class FString>                           BanReasonData;                                           // 0x0090(0x0050) NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_SpawnThrownItem
	 * Size -> 0x0028 (FullSize[0x0060] - InheritedSize[0x0038])
	 */
	class UAnimNotify_SpawnThrownItem : public UAnimNotify
	{
	public:
		class ABaseItem*                                             ItemClass;                                               // 0x0038(0x0008) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bLocalOnly : 1;                                          // 0x0040(0x0001) BIT_FIELD Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bNonLocalOnly : 1;                                       // 0x0040(0x0001) BIT_FIELD Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                  BoneToSpawnOn;                                           // 0x0044(0x0008) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bCustomThrowDirection : 1;                               // 0x004C(0x0001) BIT_FIELD Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRotator                                 ThrowDirection;                                          // 0x0050(0x000C) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.HealthComponent
	 * Size -> 0x0000 (FullSize[0x0108] - InheritedSize[0x0108])
	 */
	class UHealthComponent : public UResourceComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CharacterHealthComponent
	 * Size -> 0x0190 (FullSize[0x0298] - InheritedSize[0x0108])
	 */
	class UCharacterHealthComponent : public UHealthComponent
	{
	public:
		class UMulticastInlineDelegate                               OnLimbFullHealth;                                        // 0x0108(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xF];                                   // 0x0109(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnLimbLowHealth;                                         // 0x0118(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xF];                                   // 0x0119(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnLimbNoHealth;                                          // 0x0128(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0xF];                                   // 0x0129(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnLimbBroken;                                            // 0x0138(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0xF];                                   // 0x0139(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnLimbFullTickets;                                       // 0x0148(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0xF];                                   // 0x0149(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnLimbNoTickets;                                         // 0x0158(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0xF];                                   // 0x0159(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		EPlayerHealthStatus                                          HealthStatus;                                            // 0x0168(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bEnableIncapacitation : 1;                               // 0x0169(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.i, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0006[0x2];                                   // 0x016A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        IncapacitationHealthMultiplier;                          // 0x016C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLimbHealthData                                       RightLeg;                                                // 0x0170(0x0034) Edit, BlueprintVisible, BlueprintReadOnly, Net, d.e.o.i, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FLimbHealthData                                       LeftLeg;                                                 // 0x01A4(0x0034) Edit, BlueprintVisible, BlueprintReadOnly, Net, d.e.o.i, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FLimbHealthData                                       RightArm;                                                // 0x01D8(0x0034) Edit, BlueprintVisible, BlueprintReadOnly, Net, d.e.o.i, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FLimbHealthData                                       LeftArm;                                                 // 0x020C(0x0034) Edit, BlueprintVisible, BlueprintReadOnly, Net, d.e.o.i, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FLimbHealthData                                       Head;                                                    // 0x0240(0x0034) Edit, BlueprintVisible, BlueprintReadOnly, Net, d.e.o.i, NoDestructor, Protected, NativeAccessSpecifierProtected
		bool                                                         bUnlimitedRevives : 1;                                   // 0x0274(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, Net, d.e.o.i, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0007[0x3];                                   // 0x0275(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      MaxRevives;                                              // 0x0278(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        ReviveTime;                                              // 0x027C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        ReviveTimeDecrement;                                     // 0x0280(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        ReviveOperatingTime;                                     // 0x0284(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MaxReviveHealth;                                         // 0x0288(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                      RemainingRevives;                                        // 0x028C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        RemainingReviveTime;                                     // 0x0290(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        RemainingReviveHealth;                                   // 0x0294(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void UseAllLimbTickets(ELimbType Limb);
		void UpdatePreviousLimbHealth(ELimbType Limb);
		void SetReviveHealth(float NewReviveHealth);
		void SetRemainingRevives(int32_t NewRemainingRevives);
		void SetMaxLimbHealth(ELimbType Limb, float NewMaxHealth);
		void SetLimbHealth(ELimbType Limb, float NewHealthAmount);
		void SetHealthStatus(EPlayerHealthStatus NewHealthStatus);
		void SetCurrentLimbHealthToMax(ELimbType Limb);
		void Server_UseAllRemainingLimbTickets(ELimbType Limb);
		void Server_UpdatePreviousLimbHealth(ELimbType Limb);
		void Server_SetReviveHealth(float NewReviveHealth);
		void Server_SetRemainingRevives(int32_t NewRemainingRevives);
		void Server_SetMaxLimbHealth(ELimbType Limb, float NewMaxHealth);
		void Server_SetLimbHealth(ELimbType Limb, float NewHealthAmount);
		void Server_SetHealthStatus(EPlayerHealthStatus NewHealthStatus);
		void Server_SetCurrentLimbHealthToMax(ELimbType Limb);
		void Server_ResetRevives();
		void Server_ResetReviveHealth();
		void Server_ResetLimbTickets(ELimbType Limb);
		void Server_ResetLimbHealth(ELimbType Limb);
		void Server_ResetAllLimbTickets();
		void Server_ResetAllLimbHealth();
		void Server_IncreaseReviveHealth(float Amount);
		void Server_IncreaseRevive();
		void Server_IncreaseLimbTickets(ELimbType Limb, int32_t Amount);
		void Server_IncreaseLimbHealth(ELimbType Limb, float Amount);
		void Server_HalfMaxLimbHealth(ELimbType Limb);
		void Server_DecreaseReviveHealth(float Amount);
		void Server_DecreaseRevive();
		void Server_DecreaseLimbTickets(ELimbType Limb, int32_t Amount);
		void Server_DecreaseLimbHealth(ELimbType Limb, float Amount);
		void ResetRevives();
		void ResetReviveHealth();
		void ResetLimbTickets(ELimbType Limb);
		void ResetLimbHealth(ELimbType Limb);
		void ResetAllLimbTickets();
		void ResetAllLimbHealth();
		void OnLimbNoTicketsRemainingSignature__DelegateSignature(ELimbType Limb);
		void OnLimbNoHealthSignature__DelegateSignature(ELimbType Limb);
		void OnLimbLowHealthSignature__DelegateSignature(ELimbType AffectedLimb, float LimbHealth);
		void OnLimbFullTicketsSignature__DelegateSignature(ELimbType Limb);
		void OnLimbFullHealthSignature__DelegateSignature(ELimbType Limb);
		void OnLimbBrokenSignature__DelegateSignature(ELimbType Limb);
		bool IsUsingUnlimitedRevives();
		bool IsReviveHealthDepleted();
		bool IsLimbNoHealth(ELimbType Limb);
		bool IsLimbLowHealth(ELimbType Limb);
		bool IsLimbHealthBelow(ELimbType Limb, float HealthValue);
		bool IsLimbHealthAtOrBelow(ELimbType Limb, float HealthValue);
		bool IsLimbHealthAtOrAbove(ELimbType Limb, float HealthValue);
		bool IsLimbHealthAt(ELimbType Limb, float HealthValue);
		bool IsLimbHealthAbove(ELimbType Limb, float HealthValue);
		bool IsLimbFullHealth(ELimbType Limb);
		bool IsLimbEqualTo(const struct FLimbHealthData& InLimbHealthData, const struct FLimbHealthData& OtherLimbHealthData);
		bool IsLimbBroken(ELimbType Limb);
		bool IsIncapacitationEnabled();
		bool IsIncapacitated();
		bool IsAnyLimbBroken(ELimbType* OutLimbType);
		bool IsAnyLimbBelowFullHealth(ELimbType* OutLimbType);
		bool IsAnyLimbAtNoHealth(ELimbType* OutLimbType);
		void IncreaseReviveHealth(float Amount);
		void IncreaseRevive();
		void IncreaseLimbTickets(ELimbType Limb, int32_t Amount);
		void IncreaseLimbHealth(ELimbType Limb, float Amount);
		bool HalfMaxLimbHealth(ELimbType Limb);
		struct FLimbHealthData GetRightLegHealth_Copy();
		struct FLimbHealthData GetRightArmHealth_Copy();
		float GetReviveOperatingTime();
		float GetRemainingReviveTime();
		int32_t GetRemainingRevives();
		float GetRemainingReviveHealth();
		int32_t GetMaxRevives();
		float GetMaxReviveHealth();
		struct FLimbHealthData GetLimb_Copy(ELimbType Limb);
		struct FLimbHealthData GetLeftLegHealth_Copy();
		struct FLimbHealthData GetLeftArmHealth_Copy();
		EPlayerHealthStatus GetHealthStatus();
		struct FLimbHealthData GetHeadHealth_Copy();
		TArray<ELimbType> GetBrokenLimbs();
		void DecreaseReviveHealth(float Amount);
		void DecreaseRevive();
		void DecreaseLimbTickets(ELimbType Limb, int32_t Amount);
		void DecreaseLimbHealth(ELimbType Limb, float Amount);
		bool CanUseReviveSystem();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BaseQuestNode
	 * Size -> 0x0058 (FullSize[0x0250] - InheritedSize[0x01F8])
	 */
	class UBaseQuestNode : public USceneComponent
	{
	public:
		class AQuestManager*                                         QuestManager;                                            // 0x01F8(0x0008) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               OnQuestNodeStarted;                                      // 0x0200(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xF];                                   // 0x0201(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnQuestNodeFinished;                                     // 0x0210(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xF];                                   // 0x0211(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0002[0xC];                                   // 0x0220(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        StartDelay;                                              // 0x022C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FString                                                QuestVoiceLine;                                          // 0x0230(0x0010) Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AMessagePromptActor*                                   StartQuestMessageActor;                                  // 0x0240(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class APlayerCharacter*                                      OwningPlayer;                                            // 0x0248(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void StartQuestNodeAction();
		void OnQuestNodeStarted__DelegateSignature();
		class APlayerCharacter* GetOwningPlayer();
		bool GetInProgress();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CanBreachWithShotgun
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class ICanBreachWithShotgun : public IInterface
	{
	public:
		void OnShotgunBreached(float DamageAmount, const struct FHitResult& Hit);
		bool IsBreachableWithShotgun(bool bFront);
		bool CanBreachWithShotgunNow(class AReadyOrNotCharacter* ShotgunOwner, class ABaseItem* Shotgun, float DamageAmount, const struct FHitResult& TraceHit);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotModData
	 * Size -> 0x0038 (FullSize[0x0060] - InheritedSize[0x0028])
	 */
	class UReadyOrNotModData : public USaveGame
	{
	public:
		class FString                                                SaveSlotName;                                            // 0x0028(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                     UserIndex;                                               // 0x0038(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                        InstalledPaks;                                           // 0x0040(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FString>                                        RemovePaksOnCleanExit;                                   // 0x0050(0x0010) ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DamageProjectile
	 * Size -> 0x0020 (FullSize[0x0278] - InheritedSize[0x0258])
	 */
	class ADamageProjectile : public AProjectile
	{
	public:
		unsigned char                                                UnknownData_0000[0xC];                                   // 0x0258(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        Damage;                                                  // 0x0264(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDamageType*                                           DamageType;                                              // 0x0268(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            HitMarker;                                               // 0x0270(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CanUse
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class ICanUse : public IInterface
	{
	public:
		bool UsesHoldButtonPrompt();
		bool StartUse(class APlayerCharacter* User);
		bool PlaysUseIconComplete();
		bool OverridesUseButtonPromptText();
		bool IsAvailableForUse();
		TArray<class USceneComponent*> GetUseViewComponents();
		class USceneComponent* GetUseIconBoltComponent();
		class FText GetUseButtonPromptText();
		void EndUse(class APlayerCharacter* User);
		bool CanUse(class APlayerCharacter* User);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CyberneticController
	 * Size -> 0x0560 (FullSize[0x0888] - InheritedSize[0x0328])
	 */
	class ACyberneticController : public AAIController
	{
	public:
		class UAIPerceptionComponent*                                AIPerceptionComponent;                                   // 0x0328(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UReadyOrNotAISenseConfig_Sight*                        SightConfig;                                             // 0x0330(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAISenseConfig_Touch*                                  TouchConfig;                                             // 0x0338(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAISenseConfig_Damage*                                 DamageConfig;                                            // 0x0340(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAISenseConfig_Hearing*                                HearingConfig;                                           // 0x0348(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMoraleComponent*                                      MoraleComponent;                                         // 0x0350(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTargetingComponent*                                   TargetingComponent;                                      // 0x0358(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TMap<class AActor*, float>                                   LastHeardActorTime;                                      // 0x0360(0x0050) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class APlayerCharacter*                                      SensingCharacter;                                        // 0x03B0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                                LastSensedActor;                                         // 0x03B8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AReadyOrNotCharacter*                                  HeardActorInstigator;                                    // 0x03C0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AReadyOrNotCharacter*                                  LastSensedCharacter;                                     // 0x03C8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  LastSensedLocation;                                      // 0x03D0(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCanOpenDoorThroughNavLink : 1;                          // 0x03DC(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x03DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        TimeSinceLastMove;                                       // 0x03E0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TimeUntilRecentlySeenCharactersClear;                    // 0x03E4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AReadyOrNotCharacter*>                          RecentlySeenSwat;                                        // 0x03E8(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class AReadyOrNotCharacter*>                          RecentlySeenSuspects;                                    // 0x03F8(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class AReadyOrNotCharacter*>                          RecentlySeenCivilians;                                   // 0x0408(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               OnAsyncPathFound;                                        // 0x0418(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xF];                                   // 0x0419(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0002[0x60];                                  // 0x0428(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class AReadyOrNotCharacter*, float>                     DamagedBy;                                               // 0x0488(0x0050) NativeAccessSpecifierPublic
		TMap<class AReadyOrNotCharacter*, struct FVector> DamagedByLocation;                                       // 0x04D8(0x0050) NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x8];                                   // 0x0528(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInvestigateStimulusActivity*                          InvestigateStimulusActivity;                             // 0x0530(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x2];                                   // 0x0538(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EAIAwarenessState                                            AwarenessState;                                          // 0x053A(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0005[0x11];                                  // 0x053B(0x0011) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAIStimulus                                           LatestStimulus;                                          // 0x054C(0x003C) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FAIStimulus                                           LatestSightStimulus;                                     // 0x0588(0x003C) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FAIStimulus                                           LatestHearingStimulus;                                   // 0x05C4(0x003C) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FAIStimulus                                           LatestDamageStimulus;                                    // 0x0600(0x003C) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x14];                                  // 0x063C(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                        TrackedDistractions;                                     // 0x0650(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0007[0x20];                                  // 0x0660(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnMoveComplete;                                          // 0x0680(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0008[0xF];                                   // 0x0681(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TArray<struct FActorSense>                                   ActorSightSenseMap;                                      // 0x0690(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FActorSense>                                   ActorSoundSenseMap;                                      // 0x06A0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FActorSense>                                   ActorDamageSenseMap;                                     // 0x06B0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                         bStopDecisionMaking : 1;                                 // 0x06C0(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0009[0x7];                                   // 0x06C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBaseActivity*                                         CurrentActivity;                                         // 0x06C8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UBaseActivity*>                                 ActivityQueue;                                           // 0x06D0(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0010[0x10];                                  // 0x06E0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        CallForHelpCoolDownDuration;                             // 0x06F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MaxHearingForHelpDistance;                               // 0x06F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FlashLightSeenCoolDownDuration;                          // 0x06F8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0011[0x4];                                   // 0x06FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class UBaseActivity*, float>                            ActivityCooldownMap;                                     // 0x0700(0x0050) NativeAccessSpecifierPublic
		bool                                                         bDisableSensePerception : 1;                             // 0x0750(0x0001) BIT_FIELD Edit, BlueprintVisible, d.e.o.tate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0012[0x7];                                   // 0x0751(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FName, struct FExposedToNoise>                    ExposedToStimulusTags;                                   // 0x0758(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, EditConst, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0013[0x58];                                  // 0x07A8(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        TimeSinceLastExposedToAggressiveStimulus;                // 0x0800(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TimeSinceLastExposedToAnyStimulus;                       // 0x0804(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TimeSinceLastExposedToSightStimulus;                     // 0x0808(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TimeSinceLastExposedToSoundStimulus;                     // 0x080C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bEverHeardAggressiveStimulus : 1;                        // 0x0810(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0014[0x3];                                   // 0x0811(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        UnalertTime;                                             // 0x0814(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        AlertTime;                                               // 0x0818(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SuspiciousTime;                                          // 0x081C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0015[0x10];                                  // 0x0820(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBaseCombatActivity*                                   CombatActivity;                                          // 0x0830(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0016[0x50];                                  // 0x0838(0x0050) MISSED OFFSET (PADDING)

	public:
		void SenseStuff(TArray<class AActor*> TestActors);
		int32_t RequestMoveAsync(const struct FVector& Location, bool bProjectToNavigation);
		void RemoveAllActivitiesExcept(class UBaseActivity* ActivityType);
		void RemoveActivitiesOfType(class UBaseActivity* ActivityType, bool bClearCurrent);
		bool PerformWorldBuildingActivities(float DeltaTime);
		void OnPerceptionUpdated(TArray<class AActor*> TestActors);
		void OnKnownNeutralTakeDamage_Blueprint(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
		void OnKnownNeutralTakeDamage(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
		void OnKnownNeutralStunned_Blueprint(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
		void OnKnownNeutralStunned(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
		void OnKnownNeutralKilled_Blueprint(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
		void OnKnownNeutralKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
		void OnKnownNeutralIncapacitated_Blueprint(class AReadyOrNotCharacter* IncapacitatedCharacter);
		void OnKnownNeutralIncapacitated(class AReadyOrNotCharacter* IncapacitatedCharacter);
		void OnKnownFriendlyTakeDamage_Blueprint(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
		void OnKnownFriendlyTakeDamage(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
		void OnKnownFriendlyStunned_Blueprint(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
		void OnKnownFriendlyStunned(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
		void OnKnownFriendlyKilled_Blueprint(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
		void OnKnownFriendlyKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
		void OnKnownFriendlyIncapacitated_Blueprint(class AReadyOrNotCharacter* IncapacitatedCharacter);
		void OnKnownFriendlyIncapacitated(class AReadyOrNotCharacter* IncapacitatedCharacter);
		void OnKnownEnemyTakeDamage_Blueprint(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
		void OnKnownEnemyTakeDamage(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
		void OnKnownEnemyStunned_Blueprint(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
		void OnKnownEnemyStunned(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
		void OnKnownEnemyKilled_Blueprint(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
		void OnKnownEnemyKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
		void OnKnownEnemyIncapacitated_Blueprint(class AReadyOrNotCharacter* IncapacitatedCharacter);
		void OnKnownEnemyIncapacitated(class AReadyOrNotCharacter* IncapacitatedCharacter);
		void OnDoorKicked(class ADoor* Door, class AReadyOrNotCharacter* InstigatorCharacter, bool bSuccess);
		void OnDoorExploded(class ADoor* Door, class AReadyOrNotCharacter* InstigatorCharacter);
		void OnAIMoveCompleted__DelegateSignature(class AAIController* Controller, int32_t RequestID);
		void OnAIFinishSpawning();
		void OnActivityComplete__DelegateSignature(class UBaseActivity* CompletedActivity, class UBaseActivity* NextActivity, bool bSuccessfullyCompleted);
		bool IsTagInvestigativeNoise(const class FName& Tag);
		bool IsTagAggressiveNoise(const class FName& Tag);
		bool IsSWAT();
		bool IsSuspect();
		bool IsPlayerAKnownEnemy(class APlayerCharacter* PlayerCharacter);
		bool IsMovingForRequests(TArray<struct FAIRequestID> Requests);
		bool IsMovingForRequest(int32_t RequestID);
		bool IsMoving();
		bool IsLastAlive();
		bool IsFindingPath(int32_t PathId);
		bool IsFindingAnyPath();
		bool IsCivilian();
		bool IsCharacterNeutral(class AReadyOrNotCharacter* InCharacter);
		bool IsCharacterFriendly(class AReadyOrNotCharacter* InCharacter);
		bool IsCharacterEnemy(class AReadyOrNotCharacter* InCharacter);
		bool IsActivelyMovingOnPath();
		bool HasRecentlySeenSwat(struct FVector* OutLocation);
		bool HasRecentlySeenSuspect();
		bool HasRecentlySeenCivilian();
		bool HasBeenExposedToAggressiveNoise_Tag(class FName* OutTag, float SinceSeconds, float MaxDistance, bool bIncludeFriendly);
		bool HasBeenExposedToAggressiveNoise(float SinceSeconds, float MaxDistance, bool bIncludeFriendly);
		bool HasActivityType(class UBaseActivity* ActivityType);
		class AReadyOrNotCharacter* GetTrackedTarget();
		float GetTimeSinceLastMove();
		ETeamType GetTeam();
		class UNavigationQueryFilter* GetNavQueryFilter();
		struct FAIStimulus GetLatestStimulus();
		class AReadyOrNotCharacter* GetHeardActorInstigator();
		class UBaseCombatActivity* GetCombatActivity();
		class ACyberneticCharacter* GetCharacter();
		EAIAwarenessState GetAwarenessState();
		int32_t GetActivityQueueCount();
		class FString GetActivityQueueAsString();
		class UBaseActivity* GetActivity(class UBaseActivity* ActivityType);
		void FinishActivity(class UBaseActivity* Activity, bool bSuccess, bool bForce);
		bool DoesPathGoThroughDoor(class ADoor** Door);
		void AsyncPathFoundDelegate__DelegateSignature(int32_t PathId, ERonNavigationQueryResult Result);
		void AddExposedToStimulusTag(const class FName& Tag, const struct FVector& StimulusLocation, bool bFriendly, class AReadyOrNotCharacter* StimulusInstigator);
		bool AddActivity(class UBaseActivity* Activity, bool bOverrideCurrentActivity);
		void AbortMove();
		void AbortCoverLandmark();
		void AbortCover();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BaseDeployableGear
	 * Size -> 0x0000 (FullSize[0x08C8] - InheritedSize[0x08C8])
	 */
	class ABaseDeployableGear : public ABaseItem
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CanUseMultitoolOn
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class ICanUseMultitoolOn : public IInterface
	{
	public:
		bool ShouldOperate();
		void Server_FinishedUsingMultitool(class AReadyOrNotCharacter* ToolOwner);
		EMultitoolFunctions GetMultitoolUseType();
		float GetMultitoolUseTime();
		void Client_FinishedUsingMultitool(class AReadyOrNotCharacter* ToolOwner);
		bool CanUseMultitoolNow(class AReadyOrNotCharacter* ToolOwner, class AMultitool* Tool, const struct FHitResult& TraceHit);
		bool CanCancelMultitoolAction();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BaseRadialMenuScript
	 * Size -> 0x0040 (FullSize[0x0068] - InheritedSize[0x0028])
	 */
	class UBaseRadialMenuScript : public UObject
	{
	public:
		TSoftObjectPtr<class UTexture2D>                             RadialMenuIcon;                                          // 0x0028(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.i, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x004C(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class URadialWidgetBase*                                     RadialMenuOwner;                                         // 0x0050(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AActor*                                                Actor;                                                   // 0x0058(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWorld*                                                World;                                                   // 0x0060(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void Initialize(class URadialWidgetBase* InRadialMenuOwner);
		void ExecuteScript();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BpKeybindsLib
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UBpKeybindsLib : public UBlueprintFunctionLibrary
	{
	public:
		bool SaveKeybinds();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CivilianController
	 * Size -> 0x0000 (FullSize[0x0888] - InheritedSize[0x0888])
	 */
	class ACivilianController : public ACyberneticController
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CaptureTheFlagGM
	 * Size -> 0x0040 (FullSize[0x07F0] - InheritedSize[0x07B0])
	 */
	class ACaptureTheFlagGM : public AReadyOrNotGameMode_PVP
	{
	public:
		class UMulticastInlineDelegate                               OnFlagCaptured;                                          // 0x07B0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xF];                                   // 0x07B1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnFlagDropped;                                           // 0x07C0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xF];                                   // 0x07C1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class ACTF_Flag*                                             FlagClassToSpawn;                                        // 0x07D0(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ACTF_Flag*                                             Flag;                                                    // 0x07D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0002[0x10];                                  // 0x07E0(0x0010) MISSED OFFSET (PADDING)

	public:
		void OnFlagDroppedSignature__DelegateSignature(class APlayerCharacter* DroppedByCharacter, ETeamType DroppedByTeam);
		void OnFlagCapturedSignature__DelegateSignature(class APlayerCharacter* CapturedByCharacter, ETeamType CpaturedByTeam);
		void OnFlagBearerKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
		void DropFlag();
		class ACTF_FlagSpawnPoint* ChooseFlagSpawnPoint();
		void CaptureFlag(class ACTF_Flag* CapturedFlag, class APlayerCharacter* NewFlagBearer);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BloodPool
	 * Size -> 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
	 */
	class ABloodPool : public AActor
	{
	public:
		class UDecalComponent*                                       Decal;                                                   // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BringOrderToChaos
	 * Size -> 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
	 */
	class ABringOrderToChaos : public AObjective
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BpVideoSettingsLib
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UBpVideoSettingsLib : public UBlueprintFunctionLibrary
	{
	public:
		bool SupportsRayTracing();
		bool SetWorldDecalEnabled(bool bEnabled, float FadeDistance, float Density);
		bool SetVSyncEnabled(bool bEnabled);
		bool SetVideoQualitySettings(int32_t AntiAliasing, int32_t Effects, int32_t PostProcess, float ResolutionScaling, int32_t Shadow, int32_t Texture, int32_t ViewDistance);
		bool SetScreenResolution(int32_t Width, int32_t Height, EWindowMode NewWindowMode);
		bool SetReflexLatencyOptions(bool bGameToRenderLatencyEnabled, bool bGameLatencyEnabled, bool bRenderLatencyEnabled);
		bool SetReflexEnabled(uint8_t ReflexMode, bool bFlashIndicatorEnabled);
		bool SetRaytracingSettings(bool bRTXEnabled, bool bRTXReflectionsEnabled, bool bRTXShadowsEnabled, bool bRTXAmbientOcclusionEnabled, bool bRTXGlobalIllumination, bool bRTXTranslucency);
		bool SetOverallVideoQuality(int32_t Quality);
		bool SetMotionBlurStrength(float Strength);
		bool SetMotionBlurEnabled(bool bEnabled);
		bool SetGraphicsPresetIndex(int32_t GraphicsPresetIndex);
		bool SetFSRQuality(int32_t Quality);
		bool SetFrameRateLimit(int32_t FrameRateLimit, bool bEnabled);
		bool SetDlssQuality(int32_t Quality);
		bool SetDepthofFieldSetting(bool bDoFEnabled);
		bool SaveVideoModeAndQuality();
		bool IsNvidiaReflexEnabled();
		bool GetWorldDecalsEnabled(bool* bEnabled, float* FadeDistance, float* Density);
		bool GetVSyncEnabled(bool* bEnabled);
		bool GetVideoQualitySettingsAsString(class FText* OverallSetting, class FText* AntiAliasing, class FText* Effects, class FText* PostProcess, class FText* Shadow, class FText* Texture, class FText* ViewDistance);
		bool GetVideoQualitySettings(int32_t* AntiAliasing, int32_t* Effects, int32_t* PostProcess, float* ResolutionScaling, int32_t* Shadow, int32_t* Texture, int32_t* ViewDistance);
		bool GetSupportedScreenResolutions(TArray<class FString>* Resolutions);
		bool GetReflexLatencyOptions(bool* bGameToRenderLatencyEnabled, bool* bGameLatencyEnabled, bool* bRenderLatencyEnabled);
		void GetReflexLatency(bool* bGameToRenderLatencyEnabled, float* GametoRenderLatency, bool* bGameLatencyEnabled, float* GameLatencyInMS, bool* bRenderLatencyEnabled, float* RenderLatencyInMS);
		bool GetReflexEnabled(uint8_t* ReflexMode, bool* bFlashIndicatorEnabled);
		bool GetRaytracingSettings(bool* bRTXEnabled, bool* bRTXReflectionsEnabled, bool* bRTXShadowsEnabled, bool* bRTXAmbientOcclusionEnabled, bool* bRTXGlobalIllumination, bool* bRTXTranslucency);
		bool GetOverallVideoQuality(int32_t* Quality);
		bool GetMotionBlurStrength(float* Strength);
		bool GetMotionBlurEnabled(bool* bEnabled);
		int32_t GetGraphicsPresetIndex();
		bool GetFSRQuality(int32_t* Quality);
		bool GetFrameRateLimit(int32_t* FrameRateLimit, bool* bEnabled);
		bool GetDlssQuality(int32_t* Quality);
		bool GetDepthOfFieldSetting(bool* bDoFEnabled);
		class FString GetCurrentScreenResolution();
		EWindowMode GetCurrentScreenMode();
		class FText GenerateQualityString(int32_t Quality);
		class FText GenerateFSRQualityString(int32_t Quality);
		class FText GenerateDlssQualityString(int32_t Quality);
		void ForceReloadSettings();
		bool ChangeScreenResolution(int32_t Width, int32_t Height, EWindowMode NewWindowMode);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CaptureTheFlagGS
	 * Size -> 0x0018 (FullSize[0x09F0] - InheritedSize[0x09D8])
	 */
	class ACaptureTheFlagGS : public AReadyOrNotGameState
	{
	public:
		class ACTF_Flag*                                             Flag;                                                    // 0x09D8(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APlayerCharacter*                                      FlagBearer;                                              // 0x09E0(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETeamType                                                    FlagBearerTeam;                                          // 0x09E8(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bFlagCaptured : 1;                                       // 0x09E9(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bGameWon : 1;                                            // 0x09E9(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x6];                                   // 0x09EA(0x0006) MISSED OFFSET (PADDING)

	public:
		void OnRep_FlagStatus();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BombActor
	 * Size -> 0x0060 (FullSize[0x0280] - InheritedSize[0x0220])
	 */
	class ABombActor : public AActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnBombDefused;                                           // 0x0230(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xF];                                   // 0x0231(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UStaticMeshComponent*                                  StaticMeshComponent;                                     // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInteractableComponent*                                InteractableComponent;                                   // 0x0248(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                              ExplosionParticleComponent;                              // 0x0250(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MultitoolUseTime;                                        // 0x0258(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBombState                                                   BombState;                                               // 0x025C(0x0001) Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x3];                                   // 0x025D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        TimeUntilExplodes;                                       // 0x0260(0x0004) Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x4];                                   // 0x0264(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            BombTickEvent;                                           // 0x0268(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            BombExplodeEvent;                                        // 0x0270(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x8];                                   // 0x0278(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnBombDefusedSignature__DelegateSignature(class ABombActor* DefusedBomb);
		void Multicast_PlayBombExplodeSFX();
		EBombState GetBombState();
		void Explode();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BaseCombatMoveActivity
	 * Size -> 0x0020 (FullSize[0x0218] - InheritedSize[0x01F8])
	 */
	class UBaseCombatMoveActivity : public UBaseActivity
	{
	public:
		class UBaseCombatActivity*                                   OwningCombatActivity;                                    // 0x01F8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBaseActivity*                                         InterruptActivity;                                       // 0x0200(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x0208(0x0010) MISSED OFFSET (PADDING)

	public:
		void RequestCombatMove_Blueprint(float DeltaTime);
		bool HasLOSToEnemy();
		bool HasAnyOtherCombatMoveGotLocation(const struct FVector& TestLocation);
		class UBaseActivity* GetInterruptActivity();
		void GenerateNavigablePoints(const struct FVector& GenAroundLoc, const struct FNavGenerationParameters& NavGenerationParameters, TArray<struct FVector>* OutLocations);
		void FinishCombatMove(bool bSuccess);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CivilianFleeCombatMove
	 * Size -> 0x0008 (FullSize[0x0220] - InheritedSize[0x0218])
	 */
	class UCivilianFleeCombatMove : public UBaseCombatMoveActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0218(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ChargeCombatMove
	 * Size -> 0x0000 (FullSize[0x0218] - InheritedSize[0x0218])
	 */
	class UChargeCombatMove : public UBaseCombatMoveActivity
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ControllableByTablet
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IControllableByTablet : public IInterface
	{
	public:
		void HideActorsForTabletView(class USceneCaptureComponent2D* Component);
		ETeamType GetTabletViewTeamColor();
		class FName GetTabletViewSocket();
		class USceneComponent* GetTabletViewComponent();
		class FText GetTabletNameText();
		bool CanTabletViewMe(class APlayerCharacter* TabletOwner, class AReadyOrNotGameState* GameState);
		bool CanControlWithTablet(class APlayerCharacter* TabletOwner);
		void AssumeTabletControl(class APlayerCharacter* TabletOwner);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BpWidgetLib
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UBpWidgetLib : public UBlueprintFunctionLibrary
	{
	public:
		bool PostBugReport(const class FString& Summary, const class FString& Description, const class FString& Category);
		void DrawLineWithThickness(struct FPaintContext* Context, const struct FVector2D& PositionA, const struct FVector2D& PositionB, const struct FLinearColor& Tint, bool bAntiAlias, float Thickness, const struct FVector2D& Offset);
		void DrawLineWithCenteredOffset(struct FPaintContext* Context, const struct FVector2D& PositionA, const struct FVector2D& PositionB, const struct FLinearColor& Tint, bool bAntiAlias, float Thickness, const struct FVector2D& Offset, const struct FVector2D& Center, float Scale);
		void DrawLinesWithThickness(struct FPaintContext* Context, TArray<struct FVector2D> Points, const struct FLinearColor& Tint, bool bAntiAlias, float Thickness, const struct FVector2D& Offset);
		void DrawLinesWithCenteredOffset(struct FPaintContext* Context, TArray<struct FVector2D> Points, const struct FLinearColor& Tint, bool bAntiAlias, float Thickness, const struct FVector2D& Offset, const struct FVector2D& Center, float Scale);
		class FText ChangeStringTableTextKey(const class FText& Target, const class FString& NewKey);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Conversation
	 * Size -> 0x0058 (FullSize[0x0080] - InheritedSize[0x0028])
	 */
	class UConversation : public UObject
	{
	public:
		unsigned char                                                UnknownData_0000[0x18];                                  // 0x0028(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FConversationData>                             ConversationData;                                        // 0x0040(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x10];                                  // 0x0050(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnConversationContinuing;                                // 0x0060(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0xF];                                   // 0x0061(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnEndConversation;                                       // 0x0070(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0xF];                                   // 0x0071(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY

	public:
		void TryGetSpeakers();
		bool RequirementsMet();
		void ReplyToConversation();
		void OnEndConversation__DelegateSignature();
		void OnConversationContinuing__DelegateSignature(int32_t Idx);
		void GoToSpecificConversationIdAndContinueConversation(int32_t Idx);
		void GiveWorldBuildingActivityByTag(const class FName& SpeakerId, const class FName& Tag);
		class ACyberneticCharacter* GetSpeakerForId(const class FName& ID);
		class ACyberneticCharacter* GetSpeakerForConversationIdx(int32_t Idx);
		struct FConversationData GetConversationData();
		void ContinueConversation();
		void BuildConversation(const class FName& ID);
		void BeginConversation(class ACyberneticCharacter* ConversationStarter, const class FName& ID);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Challenge
	 * Size -> 0x0048 (FullSize[0x0070] - InheritedSize[0x0028])
	 */
	class UChallenge : public UObject
	{
	public:
		class FText                                                  ChallengeName;                                           // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                  ChallengeDescription;                                    // 0x0040(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FName                                                  ChallengeProgressName;                                   // 0x0058(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      ChallengeProgressCurrent;                                // 0x0060(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      ChallengeProgressMax;                                    // 0x0064(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHiddenChallenge;                                        // 0x0068(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bChallengeComplete;                                      // 0x0069(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLevelSpecificChallenge;                                 // 0x006A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x5];                                   // 0x006B(0x0005) MISSED OFFSET (PADDING)

	public:
		void UpdateFromProfile(class UReadyOrNotProfile* Profile);
		void ResetChallengeProgress();
		void OnChallengeInit(class AReadyOrNotGameState* gs);
		void OnChallengeAchieved();
		void IncrementChallengeProgress(int32_t IncrementBy);
		void DecrementChallengeProgress(int32_t DecrementBy);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BaseWeapon
	 * Size -> 0x05B0 (FullSize[0x0E78] - InheritedSize[0x08C8])
	 */
	class ABaseWeapon : public ABaseItem
	{
	public:
		unsigned char                                                UnknownData_0017[0x8];                                   // 0x08C8(0x0008) Fix Super Size
		struct FAmmoTypeData                                         CurrentAmmoType;                                         // 0x08D0(0x0160) Edit, EditConst, Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x18];                                  // 0x0A30(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UArrowComponent*                                       BulletSpawn;                                             // 0x0A48(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UArrowComponent*                                       ShellSpawn;                                              // 0x0A50(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                              ShellParticle;                                           // 0x0A58(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USpotLightComponent*                                   Flashlight;                                              // 0x0A60(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UScopedWeaponAttachment*                               ScopeAttachment;                                         // 0x0A68(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponAttachment*                                     MuzzleAttachment;                                        // 0x0A70(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponAttachment*                                     UnderbarrelAttachment;                                   // 0x0A78(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponAttachment*                                     OverbarrelAttachment;                                    // 0x0A80(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponAttachment*                                     StockAttachment;                                         // 0x0A88(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponAttachment*                                     GripAttachment;                                          // 0x0A90(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponAttachment*                                     IlluminatorAttachment;                                   // 0x0A98(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponAttachment*                                     AmmunitionAttachment;                                    // 0x0AA0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      AttachmentPoints;                                        // 0x0AA8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSupressed;                                              // 0x0AAC(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xB];                                   // 0x0AAD(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnFireModeChanged;                                       // 0x0AB8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0xF];                                   // 0x0AB9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		EFireMode                                                    CurrentFireMode;                                         // 0x0AC8(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFireMode                                                    DefaultFireMode;                                         // 0x0AC9(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x6];                                   // 0x0ACA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EFireMode>                                            AvailableFireModes;                                      // 0x0AD0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		float                                                        BurstBulletCount;                                        // 0x0AE0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHasSafeMode;                                            // 0x0AE4(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x3];                                   // 0x0AE5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        AddedMagazineCountFromAttachments;                       // 0x0AE8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  Optics_UI_Socket;                                        // 0x0AEC(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  Grip_UI_Socket;                                          // 0x0AF4(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  Muzzle_UI_Socket;                                        // 0x0AFC(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  Stock_UI_Socket;                                         // 0x0B04(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  Magazine_UI_Socket;                                      // 0x0B0C(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ADSZoom;                                                 // 0x0B14(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ADSZoomInSpeed;                                          // 0x0B18(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ADSZoomOutSpeed;                                         // 0x0B1C(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDamageType*                                           DefaultDamageType;                                       // 0x0B20(0x0008) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDamageType*                                           DamageType;                                              // 0x0B28(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMatineeCameraShake*                                   FireCameraShake;                                         // 0x0B30(0x0008) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                    DamageOverRange;                                         // 0x0B38(0x0088) Edit, EditConst, NativeAccessSpecifierPublic
		float                                                        Damage;                                                  // 0x0BC0(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DamageSeverityMultiplier;                                // 0x0BC4(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DamageSeverityChance;                                    // 0x0BC8(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        BleedoutDamageMultiplier;                                // 0x0BCC(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        BleedoutDamageChance;                                    // 0x0BD0(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DefaultDamage;                                           // 0x0BD4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FireRate;                                                // 0x0BD8(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MinFireRateAI;                                           // 0x0BDC(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      BulletsFiredUntilFullyAccurate;                          // 0x0BE0(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MaxFireRateAI;                                           // 0x0BE4(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ProjectileMovementSpeed;                                 // 0x0BE8(0x0004) Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bArmorPiercing;                                          // 0x0BEC(0x0001) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x3];                                   // 0x0BED(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AImpactEffect*                                         ImpactEffects;                                           // 0x0BF0(0x0008) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AImpactEffect*                                         RicochetEffects;                                         // 0x0BF8(0x0008) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                       RicochetParticleSystem;                                  // 0x0C00(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            RicochetEvent;                                           // 0x0C08(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                    SpallingDecal;                                           // 0x0C10(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                       SpallingParticleSystem;                                  // 0x0C18(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            SpallingEvent;                                           // 0x0C20(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AImpactEffect*                                         ExitEffects;                                             // 0x0C28(0x0008) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        Wobble;                                                  // 0x0C30(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        InitialWobbleDelay;                                      // 0x0C34(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAttachBulletOnHit;                                      // 0x0C38(0x0001) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x3];                                   // 0x0C39(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        BulletPhysicsImpulseMultiplier;                          // 0x0C3C(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDestroyBulletOnHit;                                     // 0x0C40(0x0001) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0x7];                                   // 0x0C41(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkeletalMesh*                                         BulletProjectileMesh;                                    // 0x0C48(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                           FakeProjectileMeshStatic;                                // 0x0C50(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                           BulletProjectileMeshStatic;                              // 0x0C58(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  BulletProjectileScale;                                   // 0x0C60(0x000C) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0008[0x4];                                   // 0x0C6C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ABaseShell*                                            ShellClass;                                              // 0x0C70(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                           ShellMesh;                                               // 0x0C78(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FRotator>                         RecoilPattern;                                           // 0x0C80(0x0010) Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0009[0x4];                                   // 0x0C90(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        BulletDrag;                                              // 0x0C94(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RecoilInterpSpeed;                                       // 0x0C98(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ADSRecoilMultiplier;                                     // 0x0C9C(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ADSSpreadMultiplier;                                     // 0x0CA0(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RecoilReturnRate;                                        // 0x0CA4(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIgnoreAmmoTypeSpread;                                   // 0x0CA8(0x0001) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0010[0x3];                                   // 0x0CA9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRotator                                 SpreadPattern;                                           // 0x0CAC(0x000C) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0011[0x4];                                   // 0x0CB8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        SpreadReturnRate;                                        // 0x0CBC(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                 PendingSpread;                                           // 0x0CC0(0x000C) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                 fireDirection;                                           // 0x0CCC(0x000C) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                        GlimmerIntensity;                                        // 0x0CD8(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      SpawnProjectileCount;                                    // 0x0CDC(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FirstShotRecoil;                                         // 0x0CE0(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FirstShotSpread;                                         // 0x0CE4(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FirstShotResetTime;                                      // 0x0CE8(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        VelocitySpreadMultiplier;                                // 0x0CEC(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        VelocityRecoilMultiplier;                                // 0x0CF0(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RecoilMultiplierPitch;                                   // 0x0CF4(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RecoilMultiplierYaw;                                     // 0x0CF8(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RefireDelay;                                             // 0x0CFC(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RecoilReturnPercentage;                                  // 0x0D00(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RecoilReturnInterpSpeed;                                 // 0x0D04(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0012[0x38];                                  // 0x0D08(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UScopedWeaponAttachment*>                       AvailableScopeAttachments;                               // 0x0D40(0x0010) Edit, ZeroConstructor, d.e.o.i, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<class UWeaponAttachment*>                             AvailableMuzzleAttachments;                              // 0x0D50(0x0010) Edit, ZeroConstructor, d.e.o.i, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<class UWeaponAttachment*>                             AvailableUnderbarrelAttachments;                         // 0x0D60(0x0010) Edit, ZeroConstructor, d.e.o.i, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<class UWeaponAttachment*>                             AvailableOverbarrelAttachments;                          // 0x0D70(0x0010) Edit, ZeroConstructor, d.e.o.i, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<class UWeaponAttachment*>                             AvailableStockAttachments;                               // 0x0D80(0x0010) Edit, ZeroConstructor, d.e.o.i, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<class UWeaponAttachment*>                             AvailableGripAttachments;                                // 0x0D90(0x0010) Edit, ZeroConstructor, d.e.o.i, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<class UWeaponAttachment*>                             AvailableIlluminatorAttachments;                         // 0x0DA0(0x0010) Edit, ZeroConstructor, d.e.o.i, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<class UWeaponAttachment*>                             AvailableAmmunitionAttachments;                          // 0x0DB0(0x0010) Edit, ZeroConstructor, d.e.o.i, UObjectWrapper, NativeAccessSpecifierPublic
		bool                                                         bCalculateProcRecoil;                                    // 0x0DC0(0x0001) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0013[0x3];                                   // 0x0DC1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        RecoilDampStrength;                                      // 0x0DC4(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RecoilFireTime;                                          // 0x0DC8(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RecoilFireStrength;                                      // 0x0DCC(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RecoilFireStrengthFirst;                                 // 0x0DD0(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RecoilAngleStrength;                                     // 0x0DD4(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RecoilRandomness;                                        // 0x0DD8(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RecoilFireADSModifier;                                   // 0x0DDC(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RecoilAngleADSModifier;                                  // 0x0DE0(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                 RecoilRotationBuildup;                                   // 0x0DE4(0x000C) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                  RecoilPositionBuildup;                                   // 0x0DF0(0x000C) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RecoilBuildupADSModifier;                                // 0x0DFC(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         RecoilHasBuildup;                                        // 0x0E00(0x0001) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0014[0x3];                                   // 0x0E01(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        RecoilBuildupDampStrength;                               // 0x0E04(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0015[0x2C];                                  // 0x0E08(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                  ProcRecoil_Trans;                                        // 0x0E34(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                 ProcRecoil_Rot;                                          // 0x0E40(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                  ProcRecoil_Trans_Buildup;                                // 0x0E4C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                 ProcRecoil_Rot_Buildup;                                  // 0x0E58(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                        CurrentHighTimer;                                        // 0x0E64(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ReloadHighTimer;                                         // 0x0E68(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FireHighTimer;                                           // 0x0E6C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        EquipHighTimer;                                          // 0x0E70(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bUseScopeMask;                                           // 0x0E74(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0018[0x3];                                   // 0x0E75(0x0003) Fix size for supers

	public:
		void ResetRecoilSettingsToDefault();
		void RemoveAttachment(bool bScopedAttachment, bool bMuzzleAttachment, bool bUnderbarrelAttachment, bool bOverbarrelAttachment, bool bStockAttachment, bool bGripAttachment, bool bIlluminatorAttachment, bool bAmmunitionAttachment);
		void PlayFiringModeAnimation();
		void OnWeaponReloadStarted();
		void OnWeaponReloadComplete();
		void OnWeaponFireModeChanged__DelegateSignature(EFireMode newFireMode);
		void OnWeaponFiredEnd();
		void OnWeaponFired(const struct FRotator& fireDirection);
		void OnEndAimDownSights(bool bWasAiming);
		void OnAimDownSights(bool bWasAiming);
		bool IsLethalWeapon();
		bool IsLessLethalWeapon();
		EWeaponUnderbarrelAnimationType GetUnderbarrelAnimationType();
		struct FRotator GetSpread();
		struct FRotator GetRecoil();
		class ULightAttachment* GetLightAttachment();
		class ULaserAttachment* GetLaserAttachment();
		void EnableGlimmer();
		void DisableGlimmer();
		bool CanReload();
		bool CanAddAttachment(class UObject* AttachmentClass);
		void AddMagazineCountFromAttachments(float AddAmount);
		void AddAttachment(class UObject* Class, bool bReplicateAttachment);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BaseMagazineWeapon
	 * Size -> 0x0418 (FullSize[0x1290] - InheritedSize[0x0E78])
	 */
	class ABaseMagazineWeapon : public ABaseWeapon
	{
	public:
		unsigned char                                                UnknownData_0026[0x8];                                   // 0x0E78(0x0008) Fix Super Size
		class UParticleSystemComponent*                              MuzzleFlashParticleComponent;                            // 0x0E80(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UParticleSystemComponent*                              MuzzleSmokeParticleComponent;                            // 0x0E88(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UParticleSystemComponent*                              HeatSmokeParticleComponent;                              // 0x0E90(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x18];                                  // 0x0E98(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                                BreakableGlassHitActor;                                  // 0x0EB0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                  CartridgeText;                                           // 0x0EB8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                  RPMText;                                                 // 0x0ED0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                  BarrelLengthText;                                        // 0x0EE8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                  CapacityText;                                            // 0x0F00(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                  MuzzleVelocityText;                                      // 0x0F18(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		float                                                        SupressionStrength;                                      // 0x0F30(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x0F34(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMatineeCameraShake*                                   SupressionCameraShake;                                   // 0x0F38(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSpawnNoTrail;                                           // 0x0F40(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x7];                                   // 0x0F41(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ABulletTracer*>                                 BulletTracers;                                           // 0x0F48(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class ABaseShell*>                                    SpawnedShells;                                           // 0x0F58(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               OnWeaponFire;                                            // 0x0F68(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0xF];                                   // 0x0F69(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnWeaponDryFire;                                         // 0x0F78(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0xF];                                   // 0x0F79(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0005[0x20];                                  // 0x0F88(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODAudioComponent*                                   FiringAudioComp;                                         // 0x0FA8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x10];                                  // 0x0FB0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bReloading;                                              // 0x0FC0(0x0001) Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCancelReloading;                                        // 0x0FC1(0x0001) Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0xE];                                   // 0x0FC2(0x000E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                  MuzzleFlashParticleSocket;                               // 0x0FD0(0x0008) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  MuzzleSmokeParticleSocket;                               // 0x0FD8(0x0008) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTimerHandle                                          GunTails_Handle;                                         // 0x0FE0(0x0008) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowParticlesWhenFiring;                                // 0x0FE8(0x0001) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0008[0x7];                                   // 0x0FE9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDamageType*                                           ArmorPiercingDamageType;                                 // 0x0FF0(0x0008) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                       ProjectileAttachedParticle;                              // 0x0FF8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDrawBlood;                                              // 0x1000(0x0001) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0009[0x7];                                   // 0x1001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ABulletProjectile*                                     FakeBulletProjectile;                                    // 0x1008(0x0008) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ABulletProjectile*                                     BulletProjectile;                                        // 0x1010(0x0008) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ABulletProjectile*                                     ArmorPiercingBulletProjectile;                           // 0x1018(0x0008) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        PenetrationDistance;                                     // 0x1020(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0010[0x4];                                   // 0x1024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMesh*                                           BreachShell;                                             // 0x1028(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                           BeanbagShell;                                            // 0x1030(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                           BuckShotShell;                                           // 0x1038(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                           SlugShell;                                               // 0x1040(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  MagazineSocket;                                          // 0x1048(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMagazine>                                     Magazines;                                               // 0x1050(0x0010) Edit, BlueprintVisible, Net, ZeroConstructor, d.e.o.i, NativeAccessSpecifierPublic
		int32_t                                                      MagIndex;                                                // 0x1060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      NextMagIndex;                                            // 0x1064(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      DesiredAmmoType;                                         // 0x1068(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bInfiniteAmmo : 1;                                       // 0x106C(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0011[0x3];                                   // 0x106D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      QueuedAmmoType;                                          // 0x1070(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bBulletInChamberOnReload;                                // 0x1074(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bTacReloadWhenEmpty;                                     // 0x1075(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0012[0x2];                                   // 0x1076(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        AmmoMax;                                                 // 0x1078(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LockIntegrityMinDamage;                                  // 0x107C(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LockIntegrityMaxDamage;                                  // 0x1080(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLoseMagOnReload;                                        // 0x1084(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSpawnShell;                                             // 0x1085(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0013[0x2];                                   // 0x1086(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        SpawnShellDelay;                                         // 0x1088(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0014[0x4];                                   // 0x108C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            ShellBounceFMODAudio;                                    // 0x1090(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0015[0x14];                                  // 0x1098(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        ImpactDecalScale;                                        // 0x10AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AImpactEffect*                                         ImpactEffects_Instance;                                  // 0x10B0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AImpactEffect*>                                 SpawnedImpactEffects;                                    // 0x10B8(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                  Magazine_HandSocket;                                     // 0x10C8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowAmmoTypesOnHUD;                                     // 0x10D0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0016[0x7];                                   // 0x10D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                MoraleHighReloadTableOverride;                           // 0x10D8(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                                MoraleMediumReloadTableOverride;                         // 0x10E8(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                                MoraleLowReloadTableOverride;                            // 0x10F8(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0017[0x8];                                   // 0x1108(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ABulletProjectile*                                     LastSpawnedProjectile;                                   // 0x1110(0x0008) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0018[0x8];                                   // 0x1118(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                  MagCheckOverrideSocket;                                  // 0x1120(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  Mag_01_Socket;                                           // 0x1128(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  Mag_01_Bullets_Socket;                                   // 0x1130(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  Mag_01_Extra_Socket;                                     // 0x1138(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                  Mag_01_Comp;                                             // 0x1140(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                  Mag_01_Comp_TPOnly;                                      // 0x1148(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowBulletsWhenEmpty;                                   // 0x1150(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0019[0x7];                                   // 0x1151(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMeshComponent*                                  Mag_01_Bullets_Comp;                                     // 0x1158(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                  Mag_01_Extra_Comp;                                       // 0x1160(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                  Mag_ReloadInterpFix_Comp;                                // 0x1168(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, d.e.o.i, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0020[0x38];                                  // 0x1170(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMesh*                                           Mag_01_Static;                                           // 0x11A8(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                           Mag_01_FMJ_Bullets_Static;                               // 0x11B0(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                           Mag_01_HP_Bullets_Static;                                // 0x11B8(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                           Mag_01_Extra_Static;                                     // 0x11C0(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  Mag_02_Socket;                                           // 0x11C8(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  Mag_02_Bullets_Socket;                                   // 0x11D0(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  Mag_02_Extra_Socket;                                     // 0x11D8(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                  Mag_02_Comp;                                             // 0x11E0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                  Mag_02_Bullets_Comp;                                     // 0x11E8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                  Mag_02_Extra_Comp;                                       // 0x11F0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                           Mag_02_Static;                                           // 0x11F8(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                           Mag_02_FMJ_Bullets_Static;                               // 0x1200(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                           Mag_02_HP_Bullets_Static;                                // 0x1208(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                           Mag_02_Extra_Static;                                     // 0x1210(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bUseFireLoopAnims;                                       // 0x1218(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0021[0x7];                                   // 0x1219(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                            MagCheckIcon_Empty;                                      // 0x1220(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                            MagCheckIcon_Full;                                       // 0x1228(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            DroppedMagazineHitEvent;                                 // 0x1230(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        HeatPerShot;                                             // 0x1238(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        HeatThreshold;                                           // 0x123C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        HeatMax;                                                 // 0x1240(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        HeatDissipation;                                         // 0x1244(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CurrentHeat;                                             // 0x1248(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        HeatMinimumTime;                                         // 0x124C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        HeatTime;                                                // 0x1250(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHeatEffectPlayed;                                       // 0x1254(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0022[0x3];                                   // 0x1255(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MagazineWeightFull;                                      // 0x1258(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MagazineWeightEmpty;                                     // 0x125C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      MagazineCountDefault;                                    // 0x1260(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      MagazineCountMin;                                        // 0x1264(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      MagazineCountMax;                                        // 0x1268(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  MagazineLabel;                                           // 0x126C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHasBeenDisassembled;                                    // 0x1274(0x0001) Edit, BlueprintVisible, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0023[0x3];                                   // 0x1275(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        GunshotOcclusionMultiplier;                              // 0x1278(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        GunshotFullOcclusionDepth;                               // 0x127C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ShootingYellBias;                                        // 0x1280(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bTwoHandedPistol;                                        // 0x1284(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHeavyRifle;                                             // 0x1285(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0024[0x2];                                   // 0x1286(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        RagdollImpulseMultiplier;                                // 0x1288(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0025[0x4];                                   // 0x128C(0x0004) MISSED OFFSET (PADDING)

	public:
		void SetMagazineCount(int32_t Count, TArray<class FName> AmmoTypes);
		void Server_SetTacticalReload(bool bIsTacticalReload);
		void Server_SetReloading(bool bIsReloading);
		void Server_SetDesiredAmmoTypeIndex(int32_t Index);
		void Server_SetCancelReloading(bool bNewValue);
		void Server_OnFire(const struct FRotator& Direction, const struct FVector& SpawnLoc, int32_t Seed);
		void Server_NextMagazine();
		void Server_AddMagazine(const struct FMagazine& Magazine);
		void ReplenishAmmo();
		float RemoveAmmo(float Value);
		void PlaySound(class USoundCue* Cue);
		void PlayBulletWhizz(float Pan);
		void OnWeaponMagCheck__DelegateSignature(class ABaseMagazineWeapon* Weapon);
		void OnWeaponFire__DelegateSignature(class ABaseMagazineWeapon* Weapon, bool bServer);
		void OnReloadAnimEvent(EReloadAnimEvent Type);
		void OnNewFireModeAnimEvent(EFireMode newFireMode);
		void OnFire(const struct FRotator& Direction, const struct FVector& SpawnLoc);
		void Multicast_SpawnShell(bool bOnlyLocallyControlled, bool bSkipLocallyControlled);
		void Multicast_SpawnParticleEffects(bool bSkipAuthority, bool bSkipLocalOwner);
		void Multicast_SimulateFireForViewTargets(const struct FVector_NetQuantize100& DirectionNet, const struct FVector_NetQuantize100& SpawnLoc, int32_t Seed);
		void Multicast_OnFire(const struct FVector_NetQuantize100& DirectionNet, const struct FVector_NetQuantize100& SpawnLoc, int32_t Seed);
		void Multicast_HandleSupression();
		void Multicast_DoHitScan(const struct PCoreUObject_FTransform& SpawnTransform, bool bLocalOnly, int32_t ProjectileNumber, int32_t Seed);
		bool InSingleMode();
		bool InSafeMode();
		bool InFullAutoMode();
		bool InBurstMode();
		bool HasAnyAmmo();
		bool HasAmmo();
		void GivenAmmoFromAmmoBag();
		float GetNextAmmo();
		class FText GetMagazineScreenName(const struct FMagazine& Magazine);
		int32_t GetMagazineCount();
		float GetMagazineAmmoPercentage(int32_t MagazineIndex);
		struct FMagazine GetCurrentMagazine();
		float GetCurrentAmmoPercentage();
		float GetAmmoWeight(int32_t Count);
		float GetAmmoInMagazine(int32_t Index);
		float GetAmmo();
		void FindNextMagIndex();
		bool AllMagsEmpty();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Shotgun
	 * Size -> 0x0070 (FullSize[0x1300] - InheritedSize[0x1290])
	 */
	class AShotgun : public ABaseMagazineWeapon
	{
	public:
		bool                                                         bIsSawnOff : 1;                                          // 0x1290(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.i, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x1291(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      MaxShells;                                               // 0x1294(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                              Shells;                                                  // 0x1298(0x0010) Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic
		TArray<int32_t>                                              OriginalShellCounts;                                     // 0x12A8(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                      MaxShellsInWeapon;                                       // 0x12B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      ShellsPerSlot;                                           // 0x12BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ShellWeight;                                             // 0x12C0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x12C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMesh*                                           CurrentShellMesh;                                        // 0x12C8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bTapReload;                                              // 0x12D0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x7];                                   // 0x12D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FShotgunVisuals                                       ShotgunVisuals;                                          // 0x12D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                         bBlockingFireAnimation;                                  // 0x12E8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x3];                                   // 0x12E9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      ShellsInRack;                                            // 0x12EC(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UShellRackShellComponent*>                      ShellMeshComponents;                                     // 0x12F0(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		void RefreshEntireShellRack();
		void PlayReloadLoop();
		void OnRep_ShellsReplicated();
		void LoadNextShellInRack();
		void FinishedLoadingShellFromRack();
		void CheckReloadSettings();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ConversationManager
	 * Size -> 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
	 */
	class AConversationManager : public AInfo
	{
	public:
		TArray<class UConversation*>                                 RunningConversations;                                    // 0x0220(0x0010) ZeroConstructor, NativeAccessSpecifierPublic

	public:
		class UConversation* TryPlayConversation(const class FName& ConversationId, class ACyberneticCharacter* ConversationStarter);
		class UConversation* PlayPrebuiltConversation(class UConversation* Conversation, class ACyberneticCharacter* ConversationStarter, const class FName& ConversationId);
		void PlayConversationInst(class UConversation* Conversation, class ACyberneticCharacter* ConversationStarter);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ChallengeManager
	 * Size -> 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
	 */
	class UChallengeManager : public UObject
	{
	public:
		TArray<class UChallenge*>                                    Challenges;                                              // 0x0028(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class UReadyOrNotProfile*                                    Profile;                                                 // 0x0038(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void SaveChallenges();
		void InitChallenges(class AReadyOrNotGameState* GameState, const struct FLevelDataLookupTable& LevelData);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ClearPoint
	 * Size -> 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
	 */
	class AClearPoint : public AActor
	{
	public:
		class UBillboardComponent*                                   SpriteComponent;                                         // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BreachingShotgun
	 * Size -> 0x0000 (FullSize[0x1300] - InheritedSize[0x1300])
	 */
	class ABreachingShotgun : public AShotgun
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CoopGM
	 * Size -> 0x0360 (FullSize[0x0AB0] - InheritedSize[0x0750])
	 */
	class ACoopGM : public AReadyOrNotGameMode
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0750(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnAllAISpawned;                                          // 0x0758(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xF];                                   // 0x0759(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class ASWATManager*                                          SWATManager;                                             // 0x0768(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ASuspectsAndCivilianManager*                           SuspectsAndCivilianManager;                              // 0x0770(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AGameplayManager*                                      GameplayManager;                                         // 0x0778(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0002[0x1];                                   // 0x0780(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ECOOPMode                                                    Mode;                                                    // 0x0781(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0003[0x6];                                   // 0x0782(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReadyOrNotAvoidanceManager*                           AvoidanceManager;                                        // 0x0788(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x28];                                  // 0x0790(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                                KilledSuspectAvoidanceShape;                             // 0x07B8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bNegotiatorActive;                                       // 0x07C0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAIEquipSameLoadoutAsPlayer;                             // 0x07C1(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x2];                                   // 0x07C2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      MaxHostagesKilledBeforeMissionFailed;                    // 0x07C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      MaxTeamKillsBeforeAIRetaliates;                          // 0x07C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x4];                                   // 0x07CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ACommandDecal*                                         CommandDecalClass;                                       // 0x07D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ACyberneticCharacter*                                  SwatAlphaClass;                                          // 0x07D8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ACyberneticCharacter*                                  SwatBetaClass;                                           // 0x07E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ACyberneticCharacter*                                  SwatCharlieClass;                                        // 0x07E8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ACyberneticCharacter*                                  SwatDeltaClass;                                          // 0x07F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AAIController*                                         FriendlyAIController;                                    // 0x07F8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSavedLoadout                                         FriendlyAILoadout;                                       // 0x0800(0x0178) Edit, NativeAccessSpecifierPublic
		class AEvidenceActor*                                        EvidenceClass;                                           // 0x0978(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               OnMissionEnded;                                          // 0x0980(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0xF];                                   // 0x0981(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UUserWidget*                                           GameStartedWidget;                                       // 0x0990(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                                KeycardClass;                                            // 0x0998(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  AI_SpawnTag;                                             // 0x09A0(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class APlayerCharacter*, int32_t>                       FriendlySwatKilledCountMap;                              // 0x09A8(0x0050) NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0008[0x8];                                   // 0x09F8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ACyberneticCharacter*>                          RemainingAICharacters;                                   // 0x0A00(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class AEvidenceActor*>                                EvidenceInWorld;                                         // 0x0A10(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                      NextHighgroundDesignation;                               // 0x0A20(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0009[0x4];                                   // 0x0A24(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AHighgroundVolume*>                             Highground;                                              // 0x0A28(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                         bUniqueOfficerSoundsets;                                 // 0x0A38(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0010[0x3];                                   // 0x0A39(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      NumPickedOfficerSoundsets;                               // 0x0A3C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      PickedOfficerSoundsets;                                  // 0x0A40(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0011[0x4];                                   // 0x0A44(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ASWATCharacter*>                                SpawnedSWATAI;                                           // 0x0A48(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class ACommandDecal*>                                 SpawnedCommandDecals;                                    // 0x0A58(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class AAISpawn*>                                      SpawnLaterSpawns;                                        // 0x0A68(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0012[0x8];                                   // 0x0A78(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        AISpawnDistance;                                         // 0x0A80(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0013[0x4];                                   // 0x0A84(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USoundCue*                                             NegFeedback;                                             // 0x0A88(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundCue*                                             PosFeedBack;                                             // 0x0A90(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ADoor*>                                         KickedDoorsTriggeredMoraleChange;                        // 0x0A98(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0014[0x8];                                   // 0x0AA8(0x0008) MISSED OFFSET (PADDING)

	public:
		void StartMissionEndTimer(bool bWon);
		void SpawnSuspectsAndHostages();
		void SpawnPolice();
		void SpawnDeployables();
		void Server_SoftClearVoteCheck();
		void RemoveAllSpawnedAI();
		void Personnel_SpawnVentilation(int32_t PersonnelNum, int32_t MapPointNum);
		void Personnel_SpawnTruckDriver(int32_t PersonnelNum, int32_t MapPointNum);
		void Personnel_SpawnPowerCrew();
		void Personnel_SpawnOperator(int32_t PersonnelNum, int32_t MapPointNum, bool bNoisemaker);
		void Personnel_SpawnNegotiator();
		void Personnel_SpawnHighground(int32_t PersonnelNum, int32_t MapPointNum, bool bSpotter, bool bMarksman, bool bSniper);
		void OnMissionEnded__DelegateSignature(bool bMissionSucceded);
		void MissionEnd(bool bSuccess);
		class ASWATManager* GetSWATManager();
		ECOOPMode GetCOOPMode();
		void FriendlyAIKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
		void FindSpotUpgradeSWAT();
		class APlayerStart* FindPlayerStartForTeam(ETeamType Team);
		void EnemyAIKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
		void EnemyAIBulletHit(float Damage, class AActor* Causer, class ACharacter* InstigatorCharacter, class ACharacter* HitCharacter, class UBulletDamageType* DamageEvent);
		void EnemyAIArrested(class AReadyOrNotCharacter* ArrestedCharacter, class AReadyOrNotCharacter* InstigatorCharacter);
		void CheckSpawners();
		void AllAISpawnedDelegate__DelegateSignature();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ClearWeaponAnimNotify
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UClearWeaponAnimNotify : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CompetitionHelperLib
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UCompetitionHelperLib : public UBlueprintFunctionLibrary
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BaseShell
	 * Size -> 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
	 */
	class ABaseShell : public AActor
	{
	public:
		class UStaticMeshComponent*                                  ShellMesh;                                               // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODAudioComponent*                                   FMODAudioComp;                                           // 0x0228(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            ShellBounceFMODAudio;                                    // 0x0230(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ShellNormalizeMax;                                       // 0x0238(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ShellNormalizeMin;                                       // 0x023C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CTFTriggerBox
	 * Size -> 0x0008 (FullSize[0x0230] - InheritedSize[0x0228])
	 */
	class ACTFTriggerBox : public ATriggerBox
	{
	public:
		class UTextRenderComponent*                                  TextRender;                                              // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void OnBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
		bool FulfillsRequirements();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BallisticsShield
	 * Size -> 0x0048 (FullSize[0x0910] - InheritedSize[0x08C8])
	 */
	class ABallisticsShield : public ABaseDeployableGear
	{
	public:
		class UMaterialInstanceDynamic*                              GlassMaterialInstance;                                   // 0x08C8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ABaseMagazineWeapon*                                   PistolEquippedWithShield;                                // 0x08D0(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x08D8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            ShieldHitEvent;                                          // 0x08E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          ReloadAnim_1P;                                           // 0x08E8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          ReloadAnimEmpty_1P;                                      // 0x08F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          ReloadAnim_3P;                                           // 0x08F8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      Damage;                                                  // 0x0900(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x2];                                   // 0x0904(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bLowered;                                                // 0x0906(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x1];                                   // 0x0907(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMatineeCameraShake*                                   ShieldHitCameraShake;                                    // 0x0908(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void Server_SetLowered(bool bShouldLower);
		void OnTPShieldHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		void GlassUpdate();
		void DamageShieldGlass();
		void Client_SetPistol(class ABaseItem* newPistol);
		void Client_PlayShieldHitSound();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BulletProjectile
	 * Size -> 0x00F0 (FullSize[0x0368] - InheritedSize[0x0278])
	 */
	class ABulletProjectile : public ADamageProjectile
	{
	public:
		class UStaticMeshComponent*                                  BulletMesh;                                              // 0x0278(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x18];                                  // 0x0280(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ABaseItem*                                             FiredFromWeapon;                                         // 0x0298(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APlayerCharacter*                                      FiredFromPlayer;                                         // 0x02A0(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        HitAngleMultiplier;                                      // 0x02A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RequiredAngleToDeflect;                                  // 0x02AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        PercentageToDeflect;                                     // 0x02B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DeflectionAmount;                                        // 0x02B4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x02B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        SpeedLossMultiplierPerSurface;                           // 0x02C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DamageLossMultiplierPerSurface;                          // 0x02C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        VelocityRequiredToRespawn;                               // 0x02C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDrawBlood;                                              // 0x02CC(0x0001) Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0xF];                                   // 0x02CD(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                  BulletProjectileScale;                                   // 0x02DC(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DecalScale;                                              // 0x02E8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAffectedByGravity;                                      // 0x02EC(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x3];                                   // 0x02ED(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USoundCue*                                             BulletWizzSound;                                         // 0x02F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MinimumDistanceForWizz;                                  // 0x02F8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        requiredSpeedForWizz;                                    // 0x02FC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DebugLineSize;                                           // 0x0300(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x4];                                   // 0x0304(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AImpactEffect*                                         ExitEffects;                                             // 0x0308(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AImpactEffect*                                         RicochetEffects;                                         // 0x0310(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                       RichochetParticle;                                       // 0x0318(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ArmorPiercing;                                           // 0x0320(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDestroyOnHit;                                           // 0x0324(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAttachOnHit;                                            // 0x0325(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x2];                                   // 0x0326(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        InitialSpeed;                                            // 0x0328(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  InitialLocation;                                         // 0x032C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                                OwningActor;                                             // 0x0338(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LockIntegrityDamage;                                     // 0x0340(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x4];                                   // 0x0344(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDamageType*                                           InitialDamageType;                                       // 0x0348(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LifeSpan;                                                // 0x0350(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        Drag;                                                    // 0x0354(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        Wobble;                                                  // 0x0358(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        InitialWobbleDelay;                                      // 0x035C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        PhysicsImpulseMultiplier;                                // 0x0360(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0x4];                                   // 0x0364(0x0004) MISSED OFFSET (PADDING)

	public:
		void OnRespawnProjectile(const struct FVector& RespawnLocation, const struct FRotator& RespawnRotation, float NewSpeed, float NewDamage, EProjectileReaction ProjectileReaction);
		void OnRep_UpdateMesh();
		void OnMeshHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		void OnDeflect(const struct FHitResult& DeflectionHit);
		void Multicast_SimulatePhysics(bool bSimulate);
		void Multicast_OnRespawnProjectile(const struct FVector_NetQuantize100& RespawnLocation, const struct FVector_NetQuantize100& RespawnRotation, float NewSpeed, float NewDamage, EProjectileReaction ProjectileReaction);
		void Multicast_AttachToComponent(const struct FVector& NewLocation, class USceneComponent* Component, const class FName& BoneName);
		void Multicast_ApplyForceToHitObjects(const struct FHitResult& Hit, const struct FVector& Velocity);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_SpawnWeapon
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UAnimNotify_SpawnWeapon : public UAnimNotify
	{
	public:
		TArray<class ABaseWeapon*>                                   PotentialWeapons;                                        // 0x0038(0x0010) Edit, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BaseTeamQuestNode
	 * Size -> 0x0020 (FullSize[0x0270] - InheritedSize[0x0250])
	 */
	class UBaseTeamQuestNode : public UBaseQuestNode
	{
	public:
		TArray<ESwatCommand>                                         EnabledSwatCommands;                                     // 0x0250(0x0010) Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		bool                                                         bEnabledAllSwatCommands;                                 // 0x0260(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0261(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASWATManager*                                          SWATManager;                                             // 0x0268(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void UpdateSWATCommands(class USwatCommandWidget* Widget, TArray<struct FSwatCommand>* SwatCommands);
		class ASWATManager* GetSWATManager();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BaseActivityProxy
	 * Size -> 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
	 */
	class UBaseActivityProxy : public UObject
	{
	public:
		TArray<class UBaseActivity*>                                 Activities;                                              // 0x0028(0x0010) ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CoopGS
	 * Size -> 0x00F8 (FullSize[0x0AD0] - InheritedSize[0x09D8])
	 */
	class ACoopGS : public AReadyOrNotGameState
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x09D8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bMissionSucceded;                                        // 0x09E8(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bMissionSoftCompleted;                                   // 0x09E9(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECOOPMode                                                    Mode;                                                    // 0x09EA(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCrouchingTigerHiddenDragon;                             // 0x09EB(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      CurrentDeployables;                                      // 0x09EC(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                                DeployableDepot;                                         // 0x09F0(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  DepotLabel;                                              // 0x09F8(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      DepotNumber;                                             // 0x0A00(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      DepotCost;                                               // 0x0A04(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      CurrentPersonnel;                                        // 0x0A08(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      CurrentUsedPersonnelPoints;                              // 0x0A0C(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<int32_t, int32_t>                                       PersonnelMapping;                                        // 0x0A10(0x0050) BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                      TotalAIOfficers;                                         // 0x0A60(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      TotalOfficers;                                           // 0x0A64(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      NumCompleteExtraObjectives;                              // 0x0A68(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      NumTotalExtraObjectives;                                 // 0x0A6C(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      TeamKills;                                               // 0x0A70(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAllPlayerCharactesDead;                                 // 0x0A74(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x0A75(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      SquadPointsRemaining;                                    // 0x0A78(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESelectedSpawn                                               SelectedRedSpawnPoint;                                   // 0x0A7C(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x3];                                   // 0x0A7D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      RedSpawnSquadPoints;                                     // 0x0A80(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESelectedSpawn                                               SelectedBlueSpawnPoint;                                  // 0x0A84(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x3];                                   // 0x0A85(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      BlueSpawnSquadPoints;                                    // 0x0A88(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x4];                                   // 0x0A8C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            missionMusic;                                            // 0x0A90(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFMODEventInstance                                    musicInstance;                                           // 0x0A98(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class FText                                                  PromotedLeaderFormat;                                    // 0x0AA0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		int32_t                                                      YesVotes;                                                // 0x0AB8(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      NoVotes;                                                 // 0x0ABC(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x8];                                   // 0x0AC0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        TOCDelay;                                                // 0x0AC8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x4];                                   // 0x0ACC(0x0004) MISSED OFFSET (PADDING)

	public:
		void UpdateVotes(int32_t Yes, int32_t No);
		void StartTOCBriefing(const class FString& TOCLine);
		void Server_SetDeployableDepot(class AReadyOrNotPlayerController* Controller, int32_t NewDepotNum);
		void OnRep_MapElement();
		void OnRep_COOPMode();
		void Multicast_OnMissionEnd(bool bSuccess);
		void Multicast_BroadcastNewSquadLeader(class APlayerCharacter* NewLeader);
		bool IsPersonnelEnabled(int32_t PersonnelNum);
		bool IsDeployableEnabled(int32_t DeployableNumber);
		TArray<int32_t> GetUsedPersonnelPoints();
		TArray<int32_t> GetUnenabledPersonnel();
		TArray<int32_t> GetUnenabledDeployables();
		int32_t GetPersonnelForMapNum(int32_t MapPointNum);
		TArray<int32_t> GetEnabledPersonnel();
		TArray<class FText> GetEnabledDeployablesShortNames();
		TArray<int32_t> GetEnabledDeployables();
		bool CanChangeSpawn(bool bBlueTeam, ESelectedSpawn NewSpawn);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CollectedEvidenceActor
	 * Size -> 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
	 */
	class ACollectedEvidenceActor : public AActor
	{
	public:
		class UStaticMeshComponent*                                  CollectionBagMesh;                                       // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            Bag_Spawn_Sound;                                         // 0x0228(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void Server_PlaySpawnSound();
		void PlaySpawnSound();
		void Multicast_PlaySpawnSound();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CursorWidget
	 * Size -> 0x0000 (FullSize[0x0260] - InheritedSize[0x0260])
	 */
	class UCursorWidget : public UUserWidget
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CollectEvidenceActivity
	 * Size -> 0x00D0 (FullSize[0x02C8] - InheritedSize[0x01F8])
	 */
	class UCollectEvidenceActivity : public UBaseActivity
	{
	public:
		class AActor*                                                EvidenceItem;                                            // 0x01F8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xC8];                                  // 0x0200(0x00C8) MISSED OFFSET (PADDING)

	public:
		void OnEvidenceCollected();
		void OnCollectEvidenceEnd();
		void OnCollectEvidenceBegin();
		void EnterMoveToStage();
		void EnterCollectStage();
		bool CanCollectEvidence();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DoorInteractionActivity
	 * Size -> 0x0020 (FullSize[0x0218] - InheritedSize[0x01F8])
	 */
	class UDoorInteractionActivity : public UBaseActivity
	{
	public:
		class ADoor*                                                 Door;                                                    // 0x01F8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  CommandLocation;                                         // 0x0200(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xC];                                   // 0x020C(0x000C) MISSED OFFSET (PADDING)

	public:
		bool ShouldGetInPosition();
		void PerformInteractStage(float DeltaTime, float Uptime);
		void PerformGetInPositionStage(float DeltaTime, float Uptime);
		void OnInteractionEnd();
		void OnInteractionBegin();
		void OnDoorOpened();
		void OnDoorClosed();
		void OnDoorBroken();
		void ExitInteractStage();
		void ExitGetInPositionStage();
		void EnterInteractStage();
		void EnterGetInPositionStage();
		bool CanInteract();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Conditional
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IConditional : public IInterface
	{
	public:
		bool CheckPassCondition();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BaseCombatActivity
	 * Size -> 0x00F8 (FullSize[0x02F0] - InheritedSize[0x01F8])
	 */
	class UBaseCombatActivity : public UBaseActivity
	{
	public:
		class UMulticastInlineDelegate                               OnTrackNewEnemy;                                         // 0x01F8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xF];                                   // 0x01F9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		struct FScriptedFireAt                                       CurrentScriptedFireAt;                                   // 0x0208(0x0020) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xC];                                   // 0x0228(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        FleeDesire;                                              // 0x0234(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TimeSincePerformingAnyCombatMove;                        // 0x0238(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x023C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFleeingCombatMove*                                    FleeingCombatMove;                                       // 0x0240(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBaseCombatMoveActivity*                               CombatMoveActivity;                                      // 0x0248(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHardCoverCombatMove*                                  HardCoverCombatMove;                                     // 0x0250(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UDuelingCombatMove*                                    DuelingCombatMove;                                       // 0x0258(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFlankingCombatMove*                                   FlankingCombatMove;                                      // 0x0260(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USuppressionCombatMove*                                SuppressionCombatMove;                                   // 0x0268(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPushCombatMove*                                       PushCombatMove;                                          // 0x0270(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UChargeCombatMove*                                     ChargeCombatMove;                                        // 0x0278(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMoveIntoLOSActivity*                                  MoveIntoLOSActivity;                                     // 0x0280(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0003[0x18];                                  // 0x0288(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        CoverEvaluationCooldown;                                 // 0x02A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        CoverLandmarkEvaluationCooldown;                         // 0x02A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AReadyOrNotCharacter*                                  LastTrackedEnemy;                                        // 0x02A8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0004[0x10];                                  // 0x02B0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPickupItemActivity*                                   PickupItemActivity;                                      // 0x02C0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UReloadSafelyActivity*                                 ReloadSafelyActivity;                                    // 0x02C8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPlayDeadActivity*                                     PlayDeadActivity;                                        // 0x02D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCommitSuicideActivity*                                CommitSuicideActivity;                                   // 0x02D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0005[0x10];                                  // 0x02E0(0x0010) MISSED OFFSET (PADDING)

	public:
		void TrackEnemyKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
		void TrackEnemyFire(class AReadyOrNotCharacter* FromCharacter, class ABaseMagazineWeapon* Weapon, const struct FVector& fireDirection);
		void StopScriptedFire();
		void StopMoveIntoLineOfSight();
		void StartRunningCombatMove(class UBaseCombatMoveActivity* CombatMove);
		void ScriptedFireAtLocation(const struct FVector& InLocation, float InTime, bool bOverrideTarget, float AccuracyPenaltyMultiplier);
		void ScriptedFireAtActor(class AActor* InActor, float InTime, bool bOverrideTarget, float AccuracyPenaltyMultiplier);
		void PlayDeadStarted(class UBaseActivity* Activity, class ACyberneticController* Controller);
		void PlayDeadFinished(class UBaseActivity* Activity, class ACyberneticController* Controller);
		void PerformStrafeLogic(float DeltaTime, float Uptime);
		void PerformNoStrafeLogic(float DeltaTime, float Uptime);
		void OnTrackNewEnemy__DelegateSignature(class AReadyOrNotCharacter* NewTrackedEnemy);
		void OnTakeDamage(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
		void OnSuicideFakeOutSuccess();
		void OnStunned(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
		void OnRequestCoverLandmark();
		void OnRequestCover();
		void OnNoCoverFound();
		void OnCoverLandmarkExit();
		void OnCoverFound();
		void OnCoverExit();
		void MoveIntoLineOfSight(const struct FVector& ToLocation);
		bool IsRunningCombatMoveActivity(class UObject* Class);
		bool IsFocusingOnActor(class AActor* InActor);
		class UBaseCombatMoveActivity* GetCombatMoveActivity();
		void FinishCombatMove(bool bSuccess);
		void EnterStrafeState();
		void EnterNoStrafeState();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CombinedCombatActivity
	 * Size -> 0x0078 (FullSize[0x0368] - InheritedSize[0x02F0])
	 */
	class UCombinedCombatActivity : public UBaseCombatActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x14];                                  // 0x02F0(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ECombatState                                                 CombatState;                                             // 0x0304(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x13];                                  // 0x0305(0x0013) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReadyOrNotCharacter*                                  LastTrackedEnemyInDangerousState;                        // 0x0318(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x20];                                  // 0x0320(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ACyberneticCharacter*                                  TargetedCivilian;                                        // 0x0340(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ACyberneticCharacter*>                          UnpathableCivilians;                                     // 0x0348(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class UAnimMontage*                                          HesitateMontage;                                         // 0x0358(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x8];                                   // 0x0360(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnExitedSurrender(ESurrenderExitType ExitType);
		void GoToState(ECombatState NewCombatState);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BaseArmour
	 * Size -> 0x0070 (FullSize[0x0938] - InheritedSize[0x08C8])
	 */
	class ABaseArmour : public ABaseItem
	{
	public:
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x08C8(0x0004) Fix Super Size
		float                                                        ScaleLensFlare;                                          // 0x08CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class USkeletalMesh*>                                 Variations;                                              // 0x08D0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, NativeAccessSpecifierPublic
		class UParticleSystem*                                       ArmourHitParticle;                                       // 0x08E0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            ArmourHitSound;                                          // 0x08E8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            ArmourHitSoundFirstPerson;                               // 0x08F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                            PaperdollTexture;                                        // 0x08F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                            PaperdollTexture_Crouch;                                 // 0x0900(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                            PaperdollTexture_Carry;                                  // 0x0908(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                            PaperdollTexture_Carry_Crouch;                           // 0x0910(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMatineeCameraShake*                                   InterceptShakeFront;                                     // 0x0918(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMatineeCameraShake*                                   InterceptShakeBack;                                      // 0x0920(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMatineeCameraShake*                                   InterceptShakeLeft;                                      // 0x0928(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMatineeCameraShake*                                   InterceptShakeRight;                                     // 0x0930(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		bool HasRemainingProtection();
		float GetDurabilityPercentage();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CurrentMatchRoundWidget
	 * Size -> 0x0010 (FullSize[0x0288] - InheritedSize[0x0278])
	 */
	class UCurrentMatchRoundWidget : public UBaseWidget
	{
	public:
		class UTextBlock*                                            CurrentRound_Text;                                       // 0x0278(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                            CurrentRound_Text_Style2;                                // 0x0280(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CurveFunctionLibrary
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UCurveFunctionLibrary : public UBlueprintFunctionLibrary
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DeployableBag
	 * Size -> 0x0018 (FullSize[0x08E0] - InheritedSize[0x08C8])
	 */
	class ADeployableBag : public ABaseDeployableGear
	{
	public:
		class APlacedBag*                                            PlacedBagClass;                                          // 0x08C8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MaxPlacementDistance;                                    // 0x08D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xC];                                   // 0x08D4(0x000C) MISSED OFFSET (PADDING)

	public:
		void Server_StartBagPlacement(const struct FHitResult& TraceHit);
		void OnBagSpawned(class APlacedBag* SpawnedBag);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Detonator
	 * Size -> 0x0028 (FullSize[0x08F0] - InheritedSize[0x08C8])
	 */
	class ADetonator : public ABaseItem
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x08C8(0x0008) Fix Super Size
		TArray<class APlacedC2Explosive*>                            PlacedCharges;                                           // 0x08D0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                      PlacedChargesCount;                                      // 0x08E0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MaxDetonationDistance;                                   // 0x08E4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                              DetonatorLightDynamicMaterial;                           // 0x08E8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void Tick(float DeltaSeconds);
		void Server_DetonateC2();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CheckDoorQuestNode
	 * Size -> 0x0010 (FullSize[0x0280] - InheritedSize[0x0270])
	 */
	class UCheckDoorQuestNode : public UBaseTeamQuestNode
	{
	public:
		class ADoor*                                                 TargetDoor;                                              // 0x0270(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0278(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DeployableData
	 * Size -> 0x0078 (FullSize[0x00A8] - InheritedSize[0x0030])
	 */
	class UDeployableData : public UDataAsset
	{
	public:
		class FText                                                  DeployableName;                                          // 0x0030(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                  DeployableShortName;                                     // 0x0048(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                  DeployableDescription;                                   // 0x0060(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TSoftObjectPtr<class UTexture2D>                             DeployableTexture;                                       // 0x0078(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x009C(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class FName                                                  DeployableLabel;                                         // 0x00A0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DeployWedgeActivity
	 * Size -> 0x0008 (FullSize[0x0220] - InheritedSize[0x0218])
	 */
	class UDeployWedgeActivity : public UDoorInteractionActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0218(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DisarmC2Activity
	 * Size -> 0x0010 (FullSize[0x0208] - InheritedSize[0x01F8])
	 */
	class UDisarmC2Activity : public UBaseActivity
	{
	public:
		class APlacedC2Explosive*                                    PlacedC2;                                                // 0x01F8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0200(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CustomPhysicalMaterial
	 * Size -> 0x0008 (FullSize[0x0088] - InheritedSize[0x0080])
	 */
	class UCustomPhysicalMaterial : public UPhysicalMaterial
	{
	public:
		float                                                        FullOcclusionDepth;                                      // 0x0080(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x0084(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.COOPScorePopUp
	 * Size -> 0x0008 (FullSize[0x0268] - InheritedSize[0x0260])
	 */
	class UCOOPScorePopUp : public UUserWidget
	{
	public:
		class UFMODEvent*                                            Reward;                                                  // 0x0260(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void PlayRewardSound();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DisarmDoorTrapActivity
	 * Size -> 0x00C0 (FullSize[0x02D8] - InheritedSize[0x0218])
	 */
	class UDisarmDoorTrapActivity : public UDoorInteractionActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0xC0];                                  // 0x0218(0x00C0) MISSED OFFSET (PADDING)

	public:
		void OnTrapTriggered(class ATrapActor* Trap, class AReadyOrNotCharacter* TriggeredBy);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CuttableCableActor
	 * Size -> 0x0030 (FullSize[0x0250] - InheritedSize[0x0220])
	 */
	class ACuttableCableActor : public AActor
	{
	public:
		bool                                                         bCableCut;                                               // 0x0220(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x0221(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        CableSnapLength;                                         // 0x0224(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCablePullInsteadOfCutting;                              // 0x0228(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x0229(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                       SceneRoot;                                               // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCableComponent*                                       SubCable1;                                               // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCableComponent*                                       SubCable2;                                               // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCableComponent*                                       WholeCable;                                              // 0x0248(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void Server_PullCable();
		void Server_CutCableAt(const struct FVector& CutOrigin);
		void OnCablePulled_Server();
		void OnCablePulled_Multicast();
		void OnCableCut_Server(const struct FVector& SplitOrigin);
		void OnCableCut_Multicast(const struct FVector& SplitOrigin);
		void Multicast_OnCablePulled();
		void Multicast_OnCableCutAt(const struct FVector& SplitOrigin);
		void GetCablePoints(TArray<struct FVector>* OutPoints);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CommandDecal
	 * Size -> 0x00E0 (FullSize[0x0308] - InheritedSize[0x0228])
	 */
	class ACommandDecal : public ADecalActor
	{
	public:
		class UParticleSystemComponent*                              AlphaPositionParticleComponent;                          // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystemComponent*                              BetaPositionParticleComponent;                           // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystemComponent*                              CharliePositionParticleComponent;                        // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystemComponent*                              DeltaPositionParticleComponent;                          // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UObjectiveMarkerComponent*                             CommandMarkerComponent;                                  // 0x0248(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ETeamType                                                    CommandTeam;                                             // 0x0250(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0251(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                       GoldTeamSquadPositionParticle;                           // 0x0258(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystem*                                       RedTeamSquadPositionParticle;                            // 0x0260(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystem*                                       BlueTeamSquadPositionParticle;                           // 0x0268(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          GoldTeamDecalColor;                                      // 0x0270(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          RedTeamDecalColor;                                       // 0x0280(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          BlueTeamDecalColor;                                      // 0x0290(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          GoldTeamIconColor;                                       // 0x02A0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          RedTeamIconColor;                                        // 0x02B0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          BlueTeamIconColor;                                       // 0x02C0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                  DecalColorParamName;                                     // 0x02D0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                  OriginalDecalSize;                                       // 0x02D8(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x02E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                CommandDecalString;                                      // 0x02E8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x8];                                   // 0x02F8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialInstanceDynamic*                              MID_CommandDecal;                                        // 0x0300(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void TrackTarget(const struct FVector& TargetLocation, const struct FVector& MarkerLocation, const struct FVector2D& CommandDecalSize);
		void SetCommandTeam(ETeamType NewCommandTeam);
		void SetCommandParticle(class UParticleSystem* NewCommandParticle);
		void SetCommandIconColor(const struct FLinearColor& NewCommandIconColor);
		void SetCommandDecalString(const class FString& NewCommandName);
		void SetCommandDecalColor(const struct FLinearColor& NewCommandDecalColor);
		ETeamType GetCommandTeam();
		void DeactivateCommand(bool bHideDecalWhenNoSquadPositionIsVisible, class AReadyOrNotCharacter* SpecificPlayer);
		bool ActivateCommand(const class FString& CommandName, const struct FVector& CommandLocation, const struct FVector& MarkerLocation, TMap<class AReadyOrNotCharacter*, struct FVector> SquadPositionsMap);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Chemlight
	 * Size -> 0x0038 (FullSize[0x0900] - InheritedSize[0x08C8])
	 */
	class AChemlight : public ABaseItem
	{
	public:
		unsigned char                                                UnknownData_0002[0x8];                                   // 0x08C8(0x0008) Fix Super Size
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x08D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAmmoComponent*                                        Ammo;                                                    // 0x08D8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                  SocketSpawnName;                                         // 0x08E0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x18];                                  // 0x08E8(0x0018) MISSED OFFSET (PADDING)

	public:
		void SetFPMeshHidden(bool bFPMeshHidden);
		void Server_SpawnThrownChemlight();
		void QuickThrow();
		void OnChemlightThrown();
		void NormalThrow();
		void Multicast_SpawnThrownChemlight();
		bool IsPlayingChemlightThrowAnimations();
		int32_t GetRemainingAmmo();
		bool CanThrow();
		void CancelThrow();
		bool AICanThrowChemlightAtLocation(const struct FVector& Location);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DataSingleton
	 * Size -> 0x0280 (FullSize[0x02A8] - InheritedSize[0x0028])
	 */
	class UDataSingleton : public UObject
	{
	public:
		class ULookupData*                                           LookupData;                                              // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDrawBulletDebug;                                        // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDrawNoNameplates;                                       // 0x0031(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x6];                                   // 0x0032(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FText>                                          LoadingScreen_Tips;                                      // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FText                                                  YouKilledFormat;                                         // 0x0048(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<class FText>                                          KillfeedFormatRandom;                                    // 0x0060(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FText>                                          ArrestfeedFormatRandom;                                  // 0x0070(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FText>                                          FreefeedFormatRandom;                                    // 0x0080(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FText>                                          TeamkillfeedFormatRandom;                                // 0x0090(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FText                                                  KillfeedWithA;                                           // 0x00A0(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                         bShowGrenadeDamage;                                      // 0x00B8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x00B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UItemData*                                             ItemData;                                                // 0x00C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UItemData*                                             Dev_ItemData;                                            // 0x00C8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWidgetsData*                                          WidgetData;                                              // 0x00D0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPenetrationData*                                      PenetrationData;                                         // 0x00D8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                            ItemDataLookupTable;                                     // 0x00E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                            AmmoDataLookupTable;                                     // 0x00E8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                            AIDataLookupTable;                                       // 0x00F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                            LevelDataLookupTable;                                    // 0x00F8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                            AnimationDataLookupTable;                                // 0x0100(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                            AnimatedIconLookupTable;                                 // 0x0108(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                            DoorDataLookupTable;                                     // 0x0110(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                            TrapDataLookupTable;                                     // 0x0118(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                            ConversationLookupTable;                                 // 0x0120(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                            GameSettingsLookupTable;                                 // 0x0128(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                            CharacterLookOverrideTable;                              // 0x0130(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                            RonInputKeyTable;                                        // 0x0138(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FString, class UDataTable*>                       SpeechDataLookupTable;                                   // 0x0140(0x0050) Edit, NativeAccessSpecifierPublic
		class UDataTable*                                            WidgetDataLookupTable;                                   // 0x0190(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                            SuspectArmourDataTable;                                  // 0x0198(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                            PairedInteractionDataTable;                              // 0x01A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                            MoveStyleDataTable;                                      // 0x01A8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  CustomizationCharacterLevel;                             // 0x01B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  CustomizationMenuLevel;                                  // 0x01B8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0xE8];                                  // 0x01C0(0x00E8) MISSED OFFSET (PADDING)

	public:
		void UnloadLevels();
		void RefreshInputKeyTable();
		void LoadLevels();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CoverDoorActivity
	 * Size -> 0x0000 (FullSize[0x01F8] - InheritedSize[0x01F8])
	 */
	class UCoverDoorActivity : public UBaseActivity
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DoorBreachActivity
	 * Size -> 0x0010 (FullSize[0x0228] - InheritedSize[0x0218])
	 */
	class UDoorBreachActivity : public UDoorInteractionActivity
	{
	public:
		struct FVector                                  OriginalLocation;                                        // 0x0218(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x0224(0x0004) MISSED OFFSET (PADDING)

	public:
		void OnBreacherKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
		void FinishDoorBreach(bool bForce);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ShotgunDoorActivity
	 * Size -> 0x0008 (FullSize[0x0230] - InheritedSize[0x0228])
	 */
	class UShotgunDoorActivity : public UDoorBreachActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0228(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnDoorShotgunned();
		void OnDoorKicked();
		void OnDoorBreached();
		bool IsShotgunBreachFinished();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DisarmStandaloneTrapActivity
	 * Size -> 0x0008 (FullSize[0x0200] - InheritedSize[0x01F8])
	 */
	class UDisarmStandaloneTrapActivity : public UBaseActivity
	{
	public:
		class ATrapActor*                                            TrapToDisarm;                                            // 0x01F8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void OnTrapTriggered(class ATrapActor* Trap, class AReadyOrNotCharacter* TriggeredBy);
		void OnTrapDisarmed();
		void EnterGetInPositionStage();
		void EnterDisarmStage();
		bool CanPerformDisarm();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CoverFinderPreview
	 * Size -> 0x0410 (FullSize[0x0630] - InheritedSize[0x0220])
	 */
	class ACoverFinderPreview : public AActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        SearchExtent;                                            // 0x0228(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SearchDangerZone;                                        // 0x022C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECoverSearchMode                                             SearchMode;                                              // 0x0230(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECoverStance                                                 CoverStance;                                             // 0x0231(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xE];                                   // 0x0232(0x000E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCoverQueryTest                                       SearchModeTest;                                          // 0x0240(0x0050) Edit, NativeAccessSpecifierPublic
		struct FCoverQueryTest                                       HeightDifferenceTest;                                    // 0x0290(0x0050) Edit, NativeAccessSpecifierPublic
		struct FCoverQueryTest                                       LineOfSightTest;                                         // 0x02E0(0x0050) Edit, NativeAccessSpecifierPublic
		struct FCoverQueryTest                                       CoverBehindInstigatorTest;                               // 0x0330(0x0050) Edit, NativeAccessSpecifierPublic
		struct FCoverQueryTest                                       SufficientCoverTest;                                     // 0x0380(0x0050) Edit, NativeAccessSpecifierPublic
		struct FCoverQueryTest                                       DistanceToInstigatorTest;                                // 0x03D0(0x0050) Edit, NativeAccessSpecifierPublic
		struct FCoverQueryTest                                       DirectionMatchTest;                                      // 0x0420(0x0050) Edit, NativeAccessSpecifierPublic
		int32_t                                                      NumCoverPointsFound;                                     // 0x0470(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CoverSearchTimeMs;                                       // 0x0474(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class ACoverPoint>                            BestCover;                                               // 0x0478(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, Transient, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDrawLabels : 1;                                         // 0x0480(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDrawScore : 1;                                          // 0x0480(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDrawPass : 1;                                           // 0x0480(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDrawFail : 1;                                           // 0x0480(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDrawFailReason : 1;                                     // 0x0480(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x7];                                   // 0x0481(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                       SceneComponent;                                          // 0x0488(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0003[0x1A0];                                 // 0x0490(0x01A0) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CustomizationWidget
	 * Size -> 0x0000 (FullSize[0x0260] - InheritedSize[0x0260])
	 */
	class UCustomizationWidget : public UUserWidget
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DebugDisplayActor
	 * Size -> 0x0030 (FullSize[0x0250] - InheritedSize[0x0220])
	 */
	class ADebugDisplayActor : public AActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                       SceneComponent;                                          // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWidgetComponent*                                      WidgetComponent;                                         // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LifeSpan;                                                // 0x0238(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bBillboarding;                                           // 0x023C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x023D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                  Velocity;                                                // 0x0240(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x024C(0x0004) MISSED OFFSET (PADDING)

	public:
		void SetWidgetClass(class UDebugDisplayWidget* NewWidgetClass);
		void SetTitle(const class FString& TextTitle);
		void SetText(int32_t TextLine, const class FString& Text);
		int32_t AddText(const class FString& Text);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DontDie
	 * Size -> 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
	 */
	class ADontDie : public AObjective
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DeployableDepot
	 * Size -> 0x0018 (FullSize[0x0238] - InheritedSize[0x0220])
	 */
	class ADeployableDepot : public AActor
	{
	public:
		TArray<class UDeployableSpawnComponent*>                     SpawnedDeployableComponents;                             // 0x0220(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		class FName                                                  DepotLabel;                                              // 0x0230(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void OnSuccessfulSpawn();
		void OnGameStarted();
		void Multicast_OnSuccessfulSpawn();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DestructibleVehicle
	 * Size -> 0x0218 (FullSize[0x0438] - InheritedSize[0x0220])
	 */
	class ADestructibleVehicle : public AActor
	{
	public:
		bool                                                         bComplexVehicle;                                         // 0x0220(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLightsOn;                                               // 0x0221(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x2];                                   // 0x0222(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        ChanceToCauseAlarmOnDamage;                              // 0x0224(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        AlarmPlayLength;                                         // 0x0228(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        AlarmHeadLightsFlashInterval;                            // 0x022C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ChanceToCauseAirbagToDeployOnDamage;                     // 0x0230(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        GlassHealth;                                             // 0x0234(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        GlassDamageToApply;                                      // 0x0238(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RollAmountOnTyreDamage;                                  // 0x023C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        PitchAmountOnTyreDamage;                                 // 0x0240(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SinkAmountOnTyreDamage;                                  // 0x0244(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TireDeflationInterpSpeed;                                // 0x0248(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x024C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMesh*                                           FlatTireMesh;                                            // 0x0250(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            BodyImpactEvent;                                         // 0x0258(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            BodyBreakEvent;                                          // 0x0260(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            GlassImpactEvent;                                        // 0x0268(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            GlassBreakEvent;                                         // 0x0270(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                       AirbagParticle;                                          // 0x0278(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            AirbagEvent;                                             // 0x0280(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            TireDeflateEvent;                                        // 0x0288(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UMaterialInstance*>                             RandomShatteredGlassMaterial;                            // 0x0290(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class UMaterialInstance*                                     FrontLightsOnMaterial;                                   // 0x02A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstance*                                     FrontLightsOffMaterial;                                  // 0x02A8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstance*                                     RearLightsOnMaterial;                                    // 0x02B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstance*                                     RearLightsOffMaterial;                                   // 0x02B8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      FrontLeftLightsMaterialIndex;                            // 0x02C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      FrontRightLightsMaterialIndex;                           // 0x02C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      RearLightsMaterialIndex;                                 // 0x02C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x1B];                                  // 0x02CC(0x001B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bLeftLightDestroyed;                                     // 0x02E7(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                         bRightLightDestroyed;                                    // 0x02E8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                         bFrontLeftTyreDestroyed;                                 // 0x02E9(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                         bFrontRightTyreDestroyed;                                // 0x02EA(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                         bRearLeftTyreDestroyed;                                  // 0x02EB(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                         bRearRightTyreDestroyed;                                 // 0x02EC(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0003[0x6B];                                  // 0x02ED(0x006B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMeshComponent*                                  CarBody;                                                 // 0x0358(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                  FrontLeftDoor;                                           // 0x0360(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                  FrontRightDoor;                                          // 0x0368(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                  BackLeftDoor;                                            // 0x0370(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                  BackRightDoor;                                           // 0x0378(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                  Boot;                                                    // 0x0380(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDestructibleComponent*                                RearWindshield;                                          // 0x0388(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDestructibleComponent*                                FrontWindshield;                                         // 0x0390(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDestructibleComponent*                                RearSideWindowLeft;                                      // 0x0398(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDestructibleComponent*                                RearSideWindowRight;                                     // 0x03A0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDestructibleComponent*                                RearDoorWindowLeft;                                      // 0x03A8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDestructibleComponent*                                RearDoorWindowRight;                                     // 0x03B0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDestructibleComponent*                                FrontDoorWindowLeft;                                     // 0x03B8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDestructibleComponent*                                FrontDoorWindowRight;                                    // 0x03C0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                  RearVisionMirror;                                        // 0x03C8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                  AirBag;                                                  // 0x03D0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UArrowComponent*                                       AirBagEffects;                                           // 0x03D8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                  LeftSideMirror;                                          // 0x03E0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                  RightSideMirror;                                         // 0x03E8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                  FrontLeftTyre;                                           // 0x03F0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                  FrontRightTyre;                                          // 0x03F8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                  RearLeftTyre;                                            // 0x0400(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                  RearRightTyre;                                           // 0x0408(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USphereComponent*                                      LeftLightCollision;                                      // 0x0410(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USphereComponent*                                      RightLightCollision;                                     // 0x0418(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USpotLightComponent*                                   LeftHeadLight;                                           // 0x0420(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USpotLightComponent*                                   RightHeadLight;                                          // 0x0428(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODAudioComponent*                                   AlarmAudio;                                              // 0x0430(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void StopCarAlarm();
		void Multicast_PlayTireDestroyedEffects(class UStaticMeshComponent* TireMesh);
		void Multicast_PlayAudioEvent(class UFMODEvent* Event, const struct FVector_NetQuantize& Location);
		void Multicast_DeployCarFeatures(bool bAirbag, bool bCarAlarm, bool bDisableLeftLight, bool bDisableRightLight, bool bSimulateRearVisionMirror, bool bSimulateLeftWingMirror, bool bSimulateRightWingMirror);
		void Multicast_ApplyWindowShatterEffects(class UDestructibleComponent* Destructible);
		void Multicast_ApplyRadialDamageToWindow(class UDestructibleComponent* Destructible, const struct FVector_NetQuantize& DamageOrigin, float DamageRadius, float ImpulseStrength);
		void FlashHeadLights();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.BaseGrenade
	 * Size -> 0x0458 (FullSize[0x0D20] - InheritedSize[0x08C8])
	 */
	class ABaseGrenade : public ABaseItem
	{
	public:
		unsigned char                                                UnknownData_0027[0x8];                                   // 0x08C8(0x0008) Fix Super Size
		class UPointLightComponent*                                  DetonationLight;                                         // 0x08D0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URadialForceComponent*                                 DetonationRadialForce;                                   // 0x08D8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODAudioComponent*                                   FMODBounceSoundComponent;                                // 0x08E0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAIPerceptionStimuliSourceComponent*                   DetonationStimuliComp;                                   // 0x08E8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        GrenadeBounciness;                                       // 0x08F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDetonationTriggersStimuli;                              // 0x08F4(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x08F5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        DetonationSoundMaxRange;                                 // 0x08F8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DetonationLoudness;                                      // 0x08FC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  DetonationTag;                                           // 0x0900(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  ThrownTag;                                               // 0x0908(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  BounceTag;                                               // 0x0910(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x0918(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AThrownGrenade*                                        Thrown;                                                  // 0x0920(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FVector>                          FirstBouncePath;                                         // 0x0928(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FHitResult                                            FirstBounceHit;                                          // 0x0938(0x0088) IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x8];                                   // 0x09C0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVector>                          SecondBouncePath;                                        // 0x09C8(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FHitResult                                            SecondBounceHit;                                         // 0x09D8(0x0088) IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x8];                                   // 0x0A60(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVector>                          ThirdBouncePath;                                         // 0x0A68(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FHitResult                                            ThirdBounceHit;                                          // 0x0A78(0x0088) IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x8];                                   // 0x0B00(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVector_NetQuantize>                           CompletePath;                                            // 0x0B08(0x0010) Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0xC];                                   // 0x0B18(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      BouncePt1;                                               // 0x0B24(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      BouncePt2;                                               // 0x0B28(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      BouncePt3;                                               // 0x0B2C(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x8];                                   // 0x0B30(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                DeployGrenadeVoiceLine;                                  // 0x0B38(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        GrenadeSpeed;                                            // 0x0B48(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0x8];                                   // 0x0B4C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        BounceSoundMinImpulse;                                   // 0x0B54(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class USoundBase*>                                    BounceSoundEffects;                                      // 0x0B58(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                              ActivationEffect;                                        // 0x0B68(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                       GrenadeBounceEffect;                                     // 0x0B70(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            ActivationSound;                                         // 0x0B78(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ActivationTime;                                          // 0x0B80(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ActivationElapsedTime;                                   // 0x0B84(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bActivated;                                              // 0x0B88(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bPlayDetonationEffectsExactlyOnce;                       // 0x0B89(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0008[0xE];                                   // 0x0B8A(0x000E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                  Rep_InterpedPosition;                                    // 0x0B98(0x000C) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0009[0x5];                                   // 0x0BA4(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EDrawDebugTrace                                              DrawDebugType;                                           // 0x0BA9(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bThrowAsQuickThrow;                                      // 0x0BAA(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bFastThrowOnceEquipped;                                  // 0x0BAB(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bFastThrowing;                                           // 0x0BAC(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bGrenadeReleased;                                        // 0x0BAD(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0010[0x6];                                   // 0x0BAE(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        ThrowImpulse;                                            // 0x0BB4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        UpImpulse;                                               // 0x0BB8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bTriggersActionMusic;                                    // 0x0BBC(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCanThrowGrenade;                                        // 0x0BBD(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0011[0x2];                                   // 0x0BBE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        DetonationTime;                                          // 0x0BC0(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIncreaseDamageRadiusOverTime;                           // 0x0BC4(0x0001) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0012[0x7];                                   // 0x0BC5(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        UnderarmForceScale;                                      // 0x0BCC(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        Drag;                                                    // 0x0BD0(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DragAppliedPerBounce;                                    // 0x0BD4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DetonationFlashIntensitiy;                               // 0x0BD8(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DetonationFlashInterp;                                   // 0x0BDC(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ReDetonationTime;                                        // 0x0BE0(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bTriggerSFXOnRedetonate;                                 // 0x0BE4(0x0001) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0013[0x3];                                   // 0x0BE5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        ThrowDistance;                                           // 0x0BE8(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RedotonateCount;                                         // 0x0BEC(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ListenerTriggerDistance;                                 // 0x0BF0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0014[0xC];                                   // 0x0BF4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                  MaxRandomizedForceOnDetonation;                          // 0x0C00(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  FixedForceOnDetonation;                                  // 0x0C0C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UParticleSystem*>                               DetonationParticles;                                     // 0x0C18(0x0010) Edit, ZeroConstructor, d.e.o.i, NativeAccessSpecifierPublic
		TArray<class UParticleSystemComponent*>                      SpawnedParticles;                                        // 0x0C28(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRotator                                 ParticleSpawnRotation;                                   // 0x0C38(0x000C) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0015[0x4];                                   // 0x0C44(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            DetonationFMODEvent;                                     // 0x0C48(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundCue*                                             DetonationEvent;                                         // 0x0C50(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHideGrenadeOnDetonate;                                  // 0x0C58(0x0001) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0016[0x7];                                   // 0x0C59(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnGrenadeDetonated;                                      // 0x0C60(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0017[0xF];                                   // 0x0C61(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnGrenadeThrown;                                         // 0x0C70(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0018[0xF];                                   // 0x0C71(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		float                                                        RedrawDelayAfterThrow;                                   // 0x0C80(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bUsed;                                                   // 0x0C84(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0019[0x3];                                   // 0x0C85(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReadyOrNotCharacter*                                  ThrownBy;                                                // 0x0C88(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0020[0x10];                                  // 0x0C90(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FGrenadeDamage>                                DetonationDamage;                                        // 0x0CA0(0x0010) Edit, ZeroConstructor, d.e.o.i, NativeAccessSpecifierPublic
		bool                                                         bUseScreenShake;                                         // 0x0CB0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0021[0x7];                                   // 0x0CB1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMatineeCameraShake*                                   ExplosionScreenShake;                                    // 0x0CB8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CameraShakeRadius;                                       // 0x0CC0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bUseDetonationDecal;                                     // 0x0CC4(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0022[0x3];                                   // 0x0CC5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        DetonationDecalTraceDistance;                            // 0x0CC8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0023[0x4];                                   // 0x0CCC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialInterface*                                    DetonationDecal;                                         // 0x0CD0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  DetonationDecalSize;                                     // 0x0CD8(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0024[0x4];                                   // 0x0CE4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AController*                                           GrenadeThrowerInstigator;                                // 0x0CE8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                          HideBonesOnUsed;                                         // 0x0CF0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, NativeAccessSpecifierPublic
		float                                                        BounceActivationRadius;                                  // 0x0D00(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0025[0x4];                                   // 0x0D04(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            FMODGrenadeBounce;                                       // 0x0D08(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0026[0x10];                                  // 0x0D10(0x0010) MISSED OFFSET (PADDING)

	public:
		void UpdateServerPath(TArray<struct FVector_NetQuantize> Path, int32_t Bounce1, int32_t Bounce2, int32_t Bounce3);
		void SetFullyPrimed();
		void Server_UpdateThrowPosition(const struct FVector& Position);
		void Server_ThrowGrenade(bool bOverarmThrow, const struct FVector& ThrowDirection, const struct FVector& ThrowStart);
		void Server_StartFastThrow();
		void Server_SetThrowOverarm(bool bThrowOverarm, bool bQuickThrow);
		void OnRep_GrenadeUsed();
		void OnRep_GrenadePath();
		void OnGrenadeThrown__DelegateSignature(class ABaseGrenade* ThrownGrenade);
		void OnGrenadeBounceSoundStopped();
		void OnDetonate__DelegateSignature();
		void Multicast_OnDeadDropped();
		void Multicast_GrenadeThrow(bool bOverarmThrow, const struct FVector& ThrowDirection, const struct FVector& ThrowStart);
		void Multicast_DetonationEffects(const struct FVector& CalculatedForce);
		void Multicast_AddImpulse(const struct FVector& Impulse, const struct FVector& FromLocation);
		bool IsOutside();
		void DoThrowFast();
		void Detonate();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ThrowItemThroughDoorActivity
	 * Size -> 0x0040 (FullSize[0x0268] - InheritedSize[0x0228])
	 */
	class UThrowItemThroughDoorActivity : public UDoorBreachActivity
	{
	public:
		class ABaseItem*                                             ThrowItemClass;                                          // 0x0228(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               OnThrowReady;                                            // 0x0230(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xF];                                   // 0x0231(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnThrowingItem;                                          // 0x0240(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xF];                                   // 0x0241(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0002[0x8];                                   // 0x0250(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ABaseItem*                                             ThrownItem;                                              // 0x0258(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0003[0x8];                                   // 0x0260(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnThrowReady__DelegateSignature();
		void OnPerformingThrow__DelegateSignature();
		void OnDoorBreached();
		bool IsItemThrown();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ThrowGrenadeThroughDoorActivity
	 * Size -> 0x0000 (FullSize[0x0268] - InheritedSize[0x0268])
	 */
	class UThrowGrenadeThroughDoorActivity : public UThrowItemThroughDoorActivity
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DestructibleDoorChunkComponent
	 * Size -> 0x0020 (FullSize[0x0500] - InheritedSize[0x04E0])
	 */
	class UDestructibleDoorChunkComponent : public UStaticMeshComponent
	{
	public:
		bool                                                         bIsDoorHandle;                                           // 0x04E0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                         bIsHinge;                                                // 0x04E1(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x2];                                   // 0x04E2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        Health;                                                  // 0x04E4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                         bCannotKickIfDestroyed;                                  // 0x04E8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x04E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UDestructibleDoorChunkComponent*>               SupportChunks;                                           // 0x04F0(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DeployableSpawnComponent
	 * Size -> 0x0018 (FullSize[0x0210] - InheritedSize[0x01F8])
	 */
	class UDeployableSpawnComponent : public USceneComponent
	{
	public:
		class AActor*                                                ItemClass;                                               // 0x01F8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  DeployableLabel;                                         // 0x0200(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0208(0x0008) MISSED OFFSET (PADDING)

	public:
		bool TrySpawnComponent(bool ShouldSpawn);
		void MutateSpawnedDeployable(class AActor* SpawnedDeployable);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.KickDoorActivity
	 * Size -> 0x0008 (FullSize[0x0230] - InheritedSize[0x0228])
	 */
	class UKickDoorActivity : public UDoorBreachActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0228(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnDoorKicked();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DeployAtLocationCommand
	 * Size -> 0x0000 (FullSize[0x0228] - InheritedSize[0x0228])
	 */
	class UDeployAtLocationCommand : public UTeamBaseActivity
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CommitSuicideActivity
	 * Size -> 0x0030 (FullSize[0x0228] - InheritedSize[0x01F8])
	 */
	class UCommitSuicideActivity : public UBaseActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x30];                                  // 0x01F8(0x0030) MISSED OFFSET (PADDING)

	public:
		void SuicideActivityDelegate__DelegateSignature();
		void OnStunned(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
		void OnMeleeHitTaken(class AReadyOrNotCharacter* InstigatorCharacter);
		void OnHeardYell(class AReadyOrNotCharacter* Shouter, bool bLOS);
		void OnDamaged(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.RamDoorActivity
	 * Size -> 0x0008 (FullSize[0x0230] - InheritedSize[0x0228])
	 */
	class URamDoorActivity : public UDoorBreachActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0228(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DoorwayWithoutDoor
	 * Size -> 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
	 */
	class ADoorwayWithoutDoor : public AActor
	{
	public:
		class UDoorwayComponent*                                     Doorway;                                                 // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		bool IsPointInFrontOfDoorway(const struct FVector& Vector);
		TArray<class UDoorPointComponent*> GetFrontStackupPoints();
		struct FVector GetFrontPIEMidLocation();
		struct FVector GetFrontPIEEndLocation();
		class UDoorPointComponent* GetFrontMidpoint();
		class UDoorPointComponent* GetFrontGrenadeThrowPoint();
		class UDoorPointComponent* GetFrontGrenadeLaunchPoint();
		struct FVector GetFrontDoorInteractionPoint();
		TArray<class UDoorPointComponent*> GetFrontClearPoints();
		TArray<class UDoorPointComponent*> GetBackStackupPoints();
		struct FVector GetBackPIEMidLocation();
		struct FVector GetBackPIEEndLocation();
		class UDoorPointComponent* GetBackMidpoint();
		class UDoorPointComponent* GetBackGrenadeThrowPoint();
		class UDoorPointComponent* GetBackGrenadeLaunchPoint();
		struct FVector GetBackDoorInteractionPoint();
		TArray<class UDoorPointComponent*> GetBackClearPoints();
		bool CanIssueMoveAndClear(const struct FHitResult& TraceHit);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotifyState_HideBoneVis
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UAnimNotifyState_HideBoneVis : public UAnimNotifyState
	{
	public:
		class FName                                                  BoneNameToHide;                                          // 0x0030(0x0008) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DeployItemAtLocationActivity
	 * Size -> 0x0018 (FullSize[0x0210] - InheritedSize[0x01F8])
	 */
	class UDeployItemAtLocationActivity : public UBaseActivity
	{
	public:
		class ABaseItem*                                             DeployItemClass;                                         // 0x01F8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  DeployLocation;                                          // 0x0200(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x020C(0x0004) MISSED OFFSET (PADDING)

	public:
		void TickMoveToStage(float DeltaTime, float Uptime);
		void TickDeployStage(float DeltaTime, float Uptime);
		void ExitMoveToStage();
		void ExitDeployStage();
		void EnterMoveToStage();
		void EnterDeployStage();
		bool CanDeploy();
		void Blueprint_TickDeployStage(float DeltaTime, float Uptime);
		void Blueprint_ExitDeployStage();
		void Blueprint_EnterDeployStage();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CoverFinderRenderingComponent
	 * Size -> 0x00B0 (FullSize[0x0500] - InheritedSize[0x0450])
	 */
	class UCoverFinderRenderingComponent : public UPrimitiveComponent
	{
	public:
		unsigned char                                                UnknownData_0000[0xB0];                                  // 0x0450(0x00B0) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DebugDisplayWidget
	 * Size -> 0x0000 (FullSize[0x0260] - InheritedSize[0x0260])
	 */
	class UDebugDisplayWidget : public UUserWidget
	{
	public:
		void SetDebugTitle(const class FString& NewTitle);
		void SetDebugText(int32_t ID, const class FString& NewText);
		int32_t AddDebugText(const class FString& NewText);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DeployChemlightActivity
	 * Size -> 0x0000 (FullSize[0x0210] - InheritedSize[0x0210])
	 */
	class UDeployChemlightActivity : public UDeployItemAtLocationActivity
	{
	public:
		void OnChemlightThrown(class ABaseItem* Item);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_ToggleEquipmentVis
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UAnimNotify_ToggleEquipmentVis : public UAnimNotify
	{
	public:
		EToggleInventoryVis                                          InventroyVis;                                            // 0x0038(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DefusalGM
	 * Size -> 0x0080 (FullSize[0x0830] - InheritedSize[0x07B0])
	 */
	class ADefusalGM : public AReadyOrNotGameMode_PVP
	{
	public:
		class ABombActor*                                            SelectedBombActor;                                       // 0x07B0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class AAISpawn*>                                      SpawnPoints;                                             // 0x07B8(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		class APlayerStart*                                          SwatSpawn;                                               // 0x07C8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TMap<class APlayerCharacter*, struct FCharacterLookOverride> CharacterLookMap;                                        // 0x07D0(0x0050) NativeAccessSpecifierPrivate
		class USkeletalMesh*                                         BlankFaceMesh;                                           // 0x0820(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0828(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.C2DoorActivity
	 * Size -> 0x0010 (FullSize[0x0238] - InheritedSize[0x0228])
	 */
	class UC2DoorActivity : public UDoorBreachActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x0228(0x0010) MISSED OFFSET (PADDING)

	public:
		void OnC2Placed();
		void OnC2Detonate();
		void EnterDetonateC2Stage();
		bool CanDetonateC2();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DropItemAtLocationActivity
	 * Size -> 0x0010 (FullSize[0x0238] - InheritedSize[0x0228])
	 */
	class UDropItemAtLocationActivity : public UTeamBaseActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x0228(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotify_WedgeDoor
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UAnimNotify_WedgeDoor : public UAnimNotify
	{
	public:
		bool                                                         bWedgeDeployFinished : 1;                                // 0x0038(0x0001) BIT_FIELD Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotCharacter
	 * Size -> 0x0EF8 (FullSize[0x13B0] - InheritedSize[0x04B8])
	 */
	class AReadyOrNotCharacter : public ACharacter
	{
	public:
		unsigned char                                                UnknownData_0080[0x8];                                   // 0x04B8(0x0008) Fix Super Size
		unsigned char                                                UnknownData_0000[0x80];                                  // 0x04C0(0x0080) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkeletalMeshComponent*                                MeshGearSlot;                                            // 0x0540(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractableComponent*                                InteractableComponent;                                   // 0x0548(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UObjectiveMarkerComponent*                             PlayerMarkerComponent;                                   // 0x0550(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UItemVisualizationComponent*                           PrimaryItemVisualizationComponent;                       // 0x0558(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UItemVisualizationComponent*                           SecondaryItemVisualizationComponent;                     // 0x0560(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UItemVisualizationComponent*                           LongTacticalVisualizationComponent;                      // 0x0568(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UItemVisualizationComponent*                           HelmetVisualizationComponent;                            // 0x0570(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UItemVisualizationComponent*                           EquippedItemVisualizationComponent;                      // 0x0578(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USkeletalMeshComponent*                                FaceMesh;                                                // 0x0580(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMapActorComponent*                                    MapActorComponent;                                       // 0x0588(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODAudioPropagationComponent*                        FMODAudioPropagationComp;                                // 0x0590(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODAudioComponent*                                   FMODVoiceAudioComp;                                      // 0x0598(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCharacterHealthComponent*                             CharacterHealth;                                         // 0x05A0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInventoryComponent*                                   InventoryComp;                                           // 0x05A8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPawnNoiseEmitterComponent*                            NoiseEmitter;                                            // 0x05B0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAIPerceptionStimuliSourceComponent*                   PerceptionStimuliComp;                                   // 0x05B8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UGibComponent*                                         GibComponent;                                            // 0x05C0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPhysicalAnimationComponent*                           PhysicalAnimationComp;                                   // 0x05C8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USkinnedDecalSampler*                                  SkinnedDecalSampler;                                     // 0x05D0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x3C];                                  // 0x05D8(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRotator                                 ReplicatedControlRotation;                               // 0x0614(0x000C) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               OnCharacterKilled;                                       // 0x0620(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0xF];                                   // 0x0621(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnCharacterIncapacitated;                                // 0x0630(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0xF];                                   // 0x0631(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnWeaponFire;                                            // 0x0640(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0xF];                                   // 0x0641(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnWeaponDryFire;                                         // 0x0650(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0xF];                                   // 0x0651(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnPlayerDowned;                                          // 0x0660(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0xF];                                   // 0x0661(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnPointDamageReceived;                                   // 0x0670(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0xF];                                   // 0x0671(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnStunDamageReceived;                                    // 0x0680(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0008[0xF];                                   // 0x0681(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnPlayerFreed;                                           // 0x0690(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0009[0xF];                                   // 0x0691(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnPlayerHit;                                             // 0x06A0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0010[0xF];                                   // 0x06A1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnPlayerArmorHit;                                        // 0x06B0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0011[0xF];                                   // 0x06B1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class ABaseItem*                                             ThrownItem;                                              // 0x06C0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               OnGetupComplete;                                         // 0x06C8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0012[0xF];                                   // 0x06C9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnItemThrown_FromAnimNotify;                             // 0x06D8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0013[0xF];                                   // 0x06D9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnDoorLockPickBegin_FromAnimNotify;                      // 0x06E8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0014[0xF];                                   // 0x06E9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnDoorLockPickEnd_FromAnimNotify;                        // 0x06F8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0015[0xF];                                   // 0x06F9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnDoorChecked_FromAnimNotify;                            // 0x0708(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0016[0xF];                                   // 0x0709(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnC2Placed_FromAnimNotify;                               // 0x0718(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0017[0xF];                                   // 0x0719(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnC2Detonate_FromAnimNotify;                             // 0x0728(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0018[0xF];                                   // 0x0729(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnTrapDisarmBegin_FromAnimNotify;                        // 0x0738(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0019[0xF];                                   // 0x0739(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnTrapDisarmEnd_FromAnimNotify;                          // 0x0748(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0020[0xF];                                   // 0x0749(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnMirrorDoorStarted_FromAnimNotify;                      // 0x0758(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0021[0xF];                                   // 0x0759(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnMirrorDoorFinished_FromAnimNotify;                     // 0x0768(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0022[0xF];                                   // 0x0769(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnStartDoorWedgePlacement_FromAnimNotify;                // 0x0778(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0023[0xF];                                   // 0x0779(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnEndDoorWedgePlacement_FromAnimNotify;                  // 0x0788(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0024[0xF];                                   // 0x0789(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0025[0x30];                                  // 0x0798(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCharacterDamageEvent                                 LastDamageEvent;                                         // 0x07C8(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, EditConst, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0026[0x2];                                   // 0x07F0(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bBulletForceTransferred;                                 // 0x07F2(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0027[0x1];                                   // 0x07F3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MinimumBodyFallImpulse;                                  // 0x07F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      MaxRagdollSounds;                                        // 0x07F8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      RagdollSoundsPlayed;                                     // 0x07FC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            BodyFallEvent;                                           // 0x0800(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0028[0x1];                                   // 0x0808(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bInRagdoll;                                              // 0x0809(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0029[0x1C6];                                 // 0x080A(0x01C6) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bBlendInPhysics;                                         // 0x09D0(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bStartBlendInIncapacitation;                             // 0x09D1(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bBlendInIncapacitation;                                  // 0x09D2(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0030[0x1];                                   // 0x09D3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        IncapacitationBlendTime;                                 // 0x09D4(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        IncapacitationBlendOutTime;                              // 0x09D8(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0031[0x4];                                   // 0x09DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                         IncapacitationLoopAnim;                                  // 0x09E0(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        BlendInterpAmount;                                       // 0x09E8(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0032[0xC];                                   // 0x09EC(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        FinalBlendInTime;                                        // 0x09F8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0033[0x4];                                   // 0x09FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        BlendInAfterStartOfAnim;                                 // 0x0A00(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsPreviewCharacter : 1;                                 // 0x0A04(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0034[0xB];                                   // 0x0A05(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReadyOrNotCharacter*                                  ArrestedBy;                                              // 0x0A10(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AReadyOrNotCharacter*                                  KilledBy;                                                // 0x0A18(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AReadyOrNotCharacter*                                  IncapacitatedBy;                                         // 0x0A20(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECharacterDeathReason                                        DeathReason;                                             // 0x0A28(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0035[0x7];                                   // 0x0A29(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnCharacterTakeDamage;                                   // 0x0A30(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0036[0xF];                                   // 0x0A31(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnAIStunnedPlaySound;                                    // 0x0A40(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0037[0xF];                                   // 0x0A41(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnStunnedEvent;                                          // 0x0A50(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0038[0xF];                                   // 0x0A51(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnStunnedEndedEvent;                                     // 0x0A60(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0039[0xF];                                   // 0x0A61(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnMeleeHitTaken;                                         // 0x0A70(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0040[0xF];                                   // 0x0A71(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TArray<class FName>                                          HeadBones;                                               // 0x0A80(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class FName>                                          UpperBody;                                               // 0x0A90(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0041[0x10];                                  // 0x0AA0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                          LowerBody;                                               // 0x0AB0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class FName>                                          R_Leg;                                                   // 0x0AC0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class FName>                                          L_Leg;                                                   // 0x0AD0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class FName>                                          L_Foot;                                                  // 0x0AE0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class FName>                                          R_Foot;                                                  // 0x0AF0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class FName>                                          L_Arm;                                                   // 0x0B00(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class FName>                                          R_Arm;                                                   // 0x0B10(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class FName>                                          L_Hand;                                                  // 0x0B20(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class FName>                                          R_Hand;                                                  // 0x0B30(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		bool                                                         bLowReadyPointUp;                                        // 0x0B40(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bLowReadyPointDown;                                      // 0x0B41(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0042[0x2];                                   // 0x0B42(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        LowReadyDistance;                                        // 0x0B44(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0043[0x8];                                   // 0x0B48(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UCapsuleComponent*>                             LowReadyIgnoredCapsules;                                 // 0x0B50(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		bool                                                         bIsCrouching : 1;                                        // 0x0B60(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESquadPosition                                               SquadPosition;                                           // 0x0B61(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ETeamType                                                    DefaultTeam;                                             // 0x0B62(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0044[0x5];                                   // 0x0B63(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            FPMeleeImpactFMODEvent;                                  // 0x0B68(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODEvent*                                            TPMeleeImpactFMODEvent;                                  // 0x0B70(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystem*                                       MeleeImpactParticle;                                     // 0x0B78(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMatineeCameraShake*                                   MeleeCameraShake;                                        // 0x0B80(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MeleeRange;                                              // 0x0B88(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MeleeDamage;                                             // 0x0B8C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TSoftClassPtr<class UDamageType>                             MeleeDamageType;                                         // 0x0B90(0x0024) ELEMENT_SIZE_MISMATCH Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0045[0x4];                                   // 0x0BB4(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnPlayerArrested;                                        // 0x0BB8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0046[0xF];                                   // 0x0BB9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnPlayerArrestStart;                                     // 0x0BC8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0047[0xF];                                   // 0x0BC9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnPlayerArrestedCanceled;                                // 0x0BD8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0048[0xF];                                   // 0x0BD9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		struct FCarryArrestedAnimState                               Rep_CarryArrestedAnimState;                              // 0x0BE8(0x0008) BlueprintVisible, Net, NoDestructor, NativeAccessSpecifierPublic
		bool                                                         bSurrendered;                                            // 0x0BF0(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSurrenderComplete;                                      // 0x0BF1(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0049[0x16];                                  // 0x0BF2(0x0016) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bOrderedToRotateForArrest : 1;                           // 0x0C08(0x0001) BIT_FIELD Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0050[0x7];                                   // 0x0C09(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlacedZipcuffs*                                       PlacedZipcuffs;                                          // 0x0C10(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class APlacedZipcuffs*                                       SpawnedZipcuffsClass;                                    // 0x0C18(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class APlacedZipcuffs*                                       SpawnedFPZipcuffsClass;                                  // 0x0C20(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                  ZipcuffBone;                                             // 0x0C28(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bIsBeingCarried;                                         // 0x0C30(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0051[0x7];                                   // 0x0C31(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReadyOrNotCharacter*                                  CarriedByCharacter;                                      // 0x0C38(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AReadyOrNotCharacter*                                  ThrownByCharacter;                                       // 0x0C40(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AReadyOrNotCharacter*                                  PendingCarryCharacter;                                   // 0x0C48(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AReadyOrNotCharacter*                                  CurrentCarryCharacter;                                   // 0x0C50(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ASkeletalMeshActor*                                    FakeCarryCharacterMesh;                                  // 0x0C58(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        CurrentCarryConfirmTime;                                 // 0x0C60(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0052[0x4];                                   // 0x0C64(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                         CarryMasterIdleLoop;                                     // 0x0C68(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimSequence*                                         CarrySlaveIdleLoop;                                      // 0x0C70(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MaxCarryConfirmTime;                                     // 0x0C78(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0053[0x4];                                   // 0x0C7C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReadyOrNotCharacter*                                  LastCharacterMakingArrest;                               // 0x0C80(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AReadyOrNotCharacter*                                  CurrentlyArresting;                                      // 0x0C88(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MaxRagdollArrestConfirmTime;                             // 0x0C90(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        CurrentRagdollArrestConfirmTime;                         // 0x0C94(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AReadyOrNotCharacter*                                  PendingRagdollArrestCharacter;                           // 0x0C98(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AReadyOrNotCharacter*                                  CurrentRagdollArrestCharacter;                           // 0x0CA0(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bIsBeingArrested;                                        // 0x0CA8(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bArrestComplete;                                         // 0x0CA9(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bArrestedAsRagdoll;                                      // 0x0CAA(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bArrestedAsRagdoll_Flipped;                              // 0x0CAB(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsPairedInteractionPlaying;                             // 0x0CAC(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bNoTeamDamage;                                           // 0x0CAD(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bPrimed;                                                 // 0x0CAE(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bOverarmThrow;                                           // 0x0CAF(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               OnQuickThrowStart;                                       // 0x0CB0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0054[0xF];                                   // 0x0CB1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnQuickThrowEnd;                                         // 0x0CC0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0055[0xF];                                   // 0x0CC1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0056[0x1];                                   // 0x0CD0(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bIsStrafing;                                             // 0x0CD1(0x0001) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0057[0x6];                                   // 0x0CD2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FString, class UAnimMontage*>                     PlayedTableMontageMap3P;                                 // 0x0CD8(0x0050) NativeAccessSpecifierPublic
		class FString                                                LastTableMontagePlayed;                                  // 0x0D28(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0058[0x78];                                  // 0x0D38(0x0078) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCharacterLookOverride                                CharacterLookOverride;                                   // 0x0DB0(0x00D0) Edit, EditConst, NativeAccessSpecifierPublic
		class FString                                                Rep_CharacterLookOverride;                               // 0x0E80(0x0010) Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TMap<class ABaseArmour*, class USkeletalMesh*>               ArmorOverrideMapTP;                                      // 0x0E90(0x0050) Edit, Protected, NativeAccessSpecifierProtected
		class USkeletalMesh*                                         Rep_BodyMesh;                                            // 0x0EE0(0x0008) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USkeletalMesh*                                         Rep_FaceMesh;                                            // 0x0EE8(0x0008) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USkeletalMesh*                                         Rep_FPMesh;                                              // 0x0EF0(0x0008) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TMap<class UAnimMontage*, float>                             AnimMontageCooldown;                                     // 0x0EF8(0x0050) Protected, NativeAccessSpecifierProtected
		class UPoseAsset*                                            CurrentFaceROM;                                          // 0x0F48(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        AnimationBlockingTime;                                   // 0x0F50(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0059[0x24];                                  // 0x0F54(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ATOCManager*                                           TOCManager;                                              // 0x0F78(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMatineeCameraShake*                                   ReportToTOC_PVP_CameraShake;                             // 0x0F80(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FString                                                TOCLine;                                                 // 0x0F88(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FString                                                SpeechCharacterName;                                     // 0x0F98(0x0010) Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0060[0x8];                                   // 0x0FA8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bHasBeenReported;                                        // 0x0FB0(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0061[0x3];                                   // 0x0FB1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        SpeakCooldown;                                           // 0x0FB4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            ReportPlayerDeadFMODEvent;                               // 0x0FB8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            ReportPlayerArrestedFMODEvent;                           // 0x0FC0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            ReportPlayerGeneralFMODEvent;                            // 0x0FC8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0062[0x18];                                  // 0x0FD0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FString, float>                                   SpeechCooldownMap;                                       // 0x0FE8(0x0050) Protected, NativeAccessSpecifierProtected
		class UFMODEvent*                                            FMODVoiceLine2D;                                         // 0x1038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODEvent*                                            FMODVoiceLineSpatalized;                                 // 0x1040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0063[0x8];                                   // 0x1048(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FName, struct FSuppressionData>                   BoneSuppressionAmount;                                   // 0x1050(0x0050) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               OnBoneDamaged;                                           // 0x10A0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0064[0xF];                                   // 0x10A1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnBodyPartDamaged;                                       // 0x10B0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0065[0xF];                                   // 0x10B1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		bool                                                         bBodyHit : 1;                                            // 0x10C0(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRightFootHit : 1;                                       // 0x10C0(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLeftFootHit : 1;                                        // 0x10C0(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bBlockedByBodyArmor : 1;                                 // 0x10C0(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bBlockedByHeadArmor : 1;                                 // 0x10C0(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0066[0x17];                                  // 0x10C1(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EGibAreas, float>                                       DismembermentDamageMap;                                  // 0x10D8(0x0050) Edit, d.e.o.tate, NativeAccessSpecifierPublic
		TArray<class FName>                                          DamageExcludedBones;                                     // 0x1128(0x0010) Edit, ZeroConstructor, d.e.o.tate, NativeAccessSpecifierPublic
		float                                                        GasDamageAccumulated;                                    // 0x1138(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        GasDamageDecay;                                          // 0x113C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bGodMode : 1;                                            // 0x1140(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bNoTarget;                                               // 0x1141(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0067[0x6];                                   // 0x1142(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                       ArmorImpactEffect;                                       // 0x1148(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UBloodData*                                            Blood;                                                   // 0x1150(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class ABaseWeapon*>                                   DamagedByWeapons;                                        // 0x1158(0x0010) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0068[0x8];                                   // 0x1168(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bRepStunned;                                             // 0x1170(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EStunType                                                    RepStunnedWith;                                          // 0x1171(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0069[0x56];                                  // 0x1172(0x0056) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bHasEverBeenStunned : 1;                                 // 0x11C8(0x0001) BIT_FIELD Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0070[0x17];                                  // 0x11C9(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AReadyOrNotCharacter*>                          DamagedByCharacters;                                     // 0x11E0(0x0010) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0071[0x8];                                   // 0x11F0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                                PendingEvidence;                                         // 0x11F8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bIsCollectingEvidence;                                   // 0x1200(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bCollectionAnimHasTriggered;                             // 0x1201(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0072[0x6];                                   // 0x1202(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                          CollectingLoopAnim1P;                                    // 0x1208(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimMontage*                                          CollectingLoopAnim3P;                                    // 0x1210(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ACollectedEvidenceActor*                               CollectedEvidenceClass;                                  // 0x1218(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODEvent*                                            Reward;                                                  // 0x1220(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ECharacterEmotion                                            CurrentEmotion;                                          // 0x1228(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0073[0x3];                                   // 0x1229(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        FacialAnimationOverrideTime;                             // 0x122C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FacialAnimationBlend;                                    // 0x1230(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FacialAnimationBlendTarget;                              // 0x1234(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FacialAnimationBlendDecay;                               // 0x1238(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                      FacialAnimationPriority;                                 // 0x123C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bMovementLocked;                                         // 0x1240(0x0001) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bAimLocked;                                              // 0x1241(0x0001) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bActionsLocked;                                          // 0x1242(0x0001) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0074[0x5];                                   // 0x1243(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ADoor*                                                 QueuedDoorToOpen;                                        // 0x1248(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ADoor*                                                 QueuedDoorToClose;                                       // 0x1250(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ADoor*                                                 LastKickedDoor;                                          // 0x1258(0x0008) Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractionsData*                                     DoorKickInteractionFront;                                // 0x1260(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractionsData*                                     DoorKickInteractionBack;                                 // 0x1268(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractionsData*                                     DoorKickFailureInteractionFront;                         // 0x1270(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractionsData*                                     DoorKickFailureInteractionBack;                          // 0x1278(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractionsData*                                     DoorKickBreakInteractionFront;                           // 0x1280(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractionsData*                                     DoorKickBreakInteractionBack;                            // 0x1288(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractionsData*                                     CarryArrestedInteractionData;                            // 0x1290(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractionsData*                                     DropArrestedInteractionData;                             // 0x1298(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractionsData*                                     ThrowArrestedInteractionData;                            // 0x12A0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0075[0x20];                                  // 0x12A8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bShouldPlayFootstepFoley;                                // 0x12C8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bPlayEveryStep;                                          // 0x12C9(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0076[0x6];                                   // 0x12CA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AImpactEffect*                                         FootstepImpactEffectFast;                                // 0x12D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AImpactEffect*                                         FootstepImpactEffectSlow;                                // 0x12D8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODEvent*                                            CurrentFootstepFoleyEvent;                               // 0x12E0(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODEvent*                                            CurrentFootstepFoleyEventRemote;                         // 0x12E8(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODEvent*                                            FootstepsLocal;                                          // 0x12F0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODEvent*                                            FootstepsRemote;                                         // 0x12F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPhysicsAsset*                                         DefaultRagdollPhysAsset;                                 // 0x1300(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPhysicsAsset*                                         DefaultAlivePhysAsset;                                   // 0x1308(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPhysicsAsset*                                         CuffedRagdollPhysAsset;                                  // 0x1310(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPhysicsAsset*                                         Rep_ActiveRagdollPhysAsset;                              // 0x1318(0x0008) Edit, Net, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0077[0x8];                                   // 0x1320(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ANeutralizeSuspectByTag*                               NeutralizeSuspectTag;                                    // 0x1328(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class UAnimMontage*>                                  TorsoDeathAnims;                                         // 0x1330(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UAnimMontage*>                                  HeadDeathAnims;                                          // 0x1340(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UAnimMontage*>                                  LeftArmDeathAnims;                                       // 0x1350(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UAnimMontage*>                                  RightArmDeathAnims;                                      // 0x1360(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UAnimMontage*>                                  LeftLegDeathAnims;                                       // 0x1370(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UAnimMontage*>                                  RightLegDeathAnims;                                      // 0x1380(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class UAnimMontage*                                          CurrentDeathMontage;                                     // 0x1390(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bPlayingDeathMontage : 1;                                // 0x1398(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bStartedPlayingDeath : 1;                                // 0x1398(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRonReplicatedAcceleration                            ReplicatedAcceleration;                                  // 0x1399(0x0003) Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPublic
		float                                                        ReplicatedMaxSpeed;                                      // 0x139C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsBlendRagdollNotifyActive;                             // 0x13A0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0078[0x3];                                   // 0x13A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        FootstepOcclusionMultiplier;                             // 0x13A4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FootstepFullOcclusionDepth;                              // 0x13A8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0079[0x4];                                   // 0x13AC(0x0004) MISSED OFFSET (PADDING)

	public:
		bool UsingReviveSystem();
		void UpdateOverridesFromCharacterLookOverrideDataTable(const class FString& LookOverride);
		void UnlockMovementAndActions();
		void UnlockMovement();
		void UnlockAllActions();
		void UnlockAim();
		void TestPhysicalAnimationComponent();
		void StopTPMontageFromTable(const class FString& Animation, float BlendoutTime);
		void StopTPMontage(class UAnimMontage* AnimMontage, float BlendoutTime);
		void StopTPAnimMontage(class UAnimMontage* AnimMontage);
		void StopFPAnimMontage(class UAnimMontage* AnimMontage, float BlendoutTime);
		void StartStun(EStunType StunType, class AActor* StunCauser);
		void StartPepperSprayed(const struct FHitResult& Hit, class APepperspray* PeppersprayUsed);
		void StartBeingTasered(float PingStunDuration, class ATaser* WeaponUsed);
		void SpawnFootstepEffect();
		class ACollectedEvidenceActor* SpawnEvidenceCollectionBag(const struct PCoreUObject_FTransform& SpawnTransform);
		void SpawnBloodPool();
		void Server_Yell();
		void Server_ThrowArrestedTarget(class AReadyOrNotCharacter* ArrestedCharacter);
		void Server_StartStun(EStunType StunType, class AActor* StunCauser);
		void Server_ReportToTOC(class AActor* Actor, bool bPlayAnimation);
		void Server_ReportTarget(class AActor* Character);
		void Server_PlayTOCConversation();
		void Server_PlayNonLocal3PMontage(class UAnimMontage* NewMontage);
		void Server_Play3PMontage(class UAnimMontage* NewMontage, float StartTime, float PlayRate);
		void Server_MeleeInteract(class UObject* Interactable, class UInteractableComponent* InInteractableComponent);
		void Server_Kill();
		void Server_KickQueuedDoor();
		void Server_KickFailQueuedDoor();
		void Server_KickBreakQueuedDoor();
		void Server_Interact_PrimaryUse(class UObject* Interactable, class UInteractableComponent* InInteractableComponent);
		void Server_Interact(class UObject* Interactable, class UInteractableComponent* InInteractableComponent);
		void Server_EndInteract_PrimaryUse(class UObject* Interactable, class UInteractableComponent* InInteractableComponent);
		void Server_EndInteract(class UObject* Interactable, class UInteractableComponent* InInteractableComponent);
		void Server_DropArrestedTarget(class AReadyOrNotCharacter* ArrestedCharacter);
		void Server_DoubleTapInteract(class UObject* Interactable, class UInteractableComponent* InInteractableComponent);
		void Server_DoMelee();
		void Server_CollectEvidenceActor(class AEvidenceActor* InEvidenceActor);
		void Server_CollectEvidence(class ABaseItem* Item);
		void Server_ChangeTPMesh(class USkeletalMesh* Body, class USkeletalMesh* Face);
		void Server_CarryArrestedTarget(class AReadyOrNotCharacter* ArrestedCharacter);
		void Server_ApplyPointDamage(class AActor* DamagedActor, float BaseDamage, const struct FVector& HitFromDirection, const struct FHitResult& HitInfo, class AController* EventInstigator, class AActor* DamageCauser, class UDamageType* DamageTypeClass);
		void ResetPhysicsAsset();
		void ResetHealth();
		void RagdollArrestTarget(class AReadyOrNotCharacter* RagdollCharacter);
		void PlayTOCResponse(const class FString& Line, bool bIsNetworked, ETOCPriority Priority, bool bCanPrefix, float Delay);
		void PlaySpecificDebugVoiceLine(const class FString& Filename);
		void PlayROEViolateTOCResponse();
		void PlayRawVOWithCooldown(const class FString& VoiceLine, float Cooldown, const class FString& OverrideSpeakerName);
		void PlayRawVO(const class FString& VoiceLine, const class FString& OverrideSpeakerName, bool bIgnoreIfAlreadyPlaying);
		void PlayRandomDebugVoiceLine(const class FString& Line);
		void PlayRandomDebugConversation();
		class APairedInteractionDriver* PlayPairedInteraction(class UInteractionsData* InteractionData, class AActor* Driver, class AActor* Slave, class ABaseItem* OptionalItem);
		class UAnimMontage* PlayMontageFromTableWithIndex(const class FString& Animation, int32_t Index);
		class UAnimMontage* PlayMontageFromTable(const class FString& Animation);
		void Play3PMontageDeferred(class UAnimMontage* Montage, const class FString& AnimationName);
		void Play3PMontage(class UAnimMontage* NewMontage, float StartTime, float PlayRate);
		void Play1PMontageDeferred(class UAnimMontage* Montage, const class FString& AnimationName);
		void Play1PMontage(class UAnimMontage* NewMontage, float PlayRate);
		void PickupEvidence(class AActor* InEvidence);
		bool OpenDoor(class ADoor* Door, bool bOpenDoor);
		void OnYellExecute();
		void OnWeaponFire__DelegateSignature(class AReadyOrNotCharacter* Character, class ABaseMagazineWeapon* Weapon, const struct FVector& fireDirection);
		void OnVoiceAudioStopped();
		void OnStunnedPlaySound__DelegateSignature(EStunType StunType, bool bIsImmune);
		void OnStunnedEnded__DelegateSignature(EStunType StunType);
		void OnStunned__DelegateSignature(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
		void OnStunDamage__DelegateSignature(float Damage, class AActor* Causer, class ACharacter* InstigatorCharacter, class ACharacter* HitCharacter, class UStunDamage* DamageEvent);
		void OnRep_Surrendered();
		void OnRep_ReplicatedAcceleration();
		void OnRep_MeshReplicated();
		void OnRep_CurrentRagdollArrestCharacterChanged();
		void OnRep_CurrentCarryCharacterChanged();
		void OnRep_ControlRotation();
		void OnRep_CharacterLookOverride();
		void OnRep_ActiveRagdollPhysAsset();
		void OnQuickthrowStart__DelegateSignature(class ABaseItem* LastItemBeforeQuickThrow, class ABaseItem* QuickThrowGrenade);
		void OnQuickthrowEnd__DelegateSignature(class ABaseItem* QuickThrowGrenade);
		void OnPointDamage__DelegateSignature(float Damage, class AActor* Causer, class ACharacter* InstigatorCharacter, class ACharacter* HitCharacter, class UBulletDamageType* DamageEvent);
		void OnPlayerHitEvent__DelegateSignature(float Damage, const class FName& HitBone);
		void OnPickupItemNotifyEvent__DelegateSignature();
		void OnMirrorDoorNotifyEvent__DelegateSignature();
		void OnMeshHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		void OnMeleeHitTaken__DelegateSignature(class AReadyOrNotCharacter* InstigatorCharacter);
		void OnKilled(class AReadyOrNotCharacter* InstigatorCharacter);
		void OnItemThrownNotifyEvent__DelegateSignature(class ABaseItem* InThrownItem);
		void OnItemHolstered(class ABaseItem* HolsteredItem);
		void OnItemEquipped(class ABaseItem* NewEquippedItem);
		void OnIncapacitated(class AReadyOrNotCharacter* InstigatorCharacter);
		void OnHealthDepleted();
		void OnGetupComplete__DelegateSignature();
		void OnFreed__DelegateSignature(class ACharacter* Freed, class ACharacter* Freer);
		void OnFootstep__DelegateSignature();
		void OnEquippedWeaponMagCheck(class ABaseMagazineWeapon* Weapon);
		void OnEquippedWeaponFire(class ABaseMagazineWeapon* Weapon, bool bServer);
		void OnEquippedWeaponDryFire(class ABaseMagazineWeapon* Weapon, bool bServer);
		void OnDowned__DelegateSignature(class AReadyOrNotCharacter* DownedCharacter, class AReadyOrNotCharacter* InstigatorCharacter);
		void OnDoorWedgePlacedNotifyEvent__DelegateSignature();
		void OnDoorLockPickNotifyEvent__DelegateSignature();
		void OnDoorCheckedNotifyEvent__DelegateSignature();
		void OnDismembermentParticleCollision(const class FName& EventName, float EmitterTime, int32_t ParticleTime, const struct FVector& Location, const struct FVector& Velocity, const struct FVector& Direction, const struct FVector& Normal, const class FName& BoneName, class UPhysicalMaterial* PhysMat);
		void OnDisarmTrapNotifyEvent__DelegateSignature();
		void OnDeadHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		void OnCharacterTakeDamage__DelegateSignature(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
		void OnCharacterKilled__DelegateSignature(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
		void OnCharacterIncapacitated__DelegateSignature(class AReadyOrNotCharacter* IncapacitatedCharacter);
		void OnCarryThrowComplete_Slave(class AActor* Slave);
		void OnCarryThrowComplete_Driver(class AActor* Driver);
		void OnCarryThrowComplete(class AActor* Driver, class AActor* Slave);
		void OnCarryPickupComplete_Slave(class AActor* Slave);
		void OnCarryPickupComplete_Driver(class AActor* Driver);
		void OnCarryPickupComplete(class AActor* Driver, class AActor* Slave);
		void OnCarryDropComplete_Slave(class AActor* Slave);
		void OnCarryDropComplete_Driver(class AActor* Driver);
		void OnCarryDropComplete(class AActor* Driver, class AActor* Slave);
		void OnC2NotifyEvent__DelegateSignature();
		void OnBoneDamaged__DelegateSignature(const class FName& BoneHit);
		void OnBodyPartDamaged__DelegateSignature(bool bHeadDamaged, bool bBodyDamaged, bool bLeftArmDamaged, bool bRightArmDamaged, bool bLeftLegDamaged, bool bRightLegDamaged, bool bLeftFootDamaged, bool bRightFootDamaged);
		void OnArteryBleedParticleCollision(const class FName& EventName, float EmitterTime, int32_t ParticleTime, const struct FVector& Location, const struct FVector& Velocity, const struct FVector& Direction, const struct FVector& Normal, const class FName& BoneName, class UPhysicalMaterial* PhysMat);
		void OnArrest__DelegateSignature(class AReadyOrNotCharacter* ArrestedCharacter, class AReadyOrNotCharacter* InstigatorCharacter);
		void OnActorSpawned(class AActor* Actor);
		void Multicast_TakeDamage(float Damage, const struct FDamageEvent& DamageEvent, class AReadyOrNotCharacter* InstigatorCharacter, class AActor* DamageCauser);
		void Multicast_Stop3PMontage(class UAnimMontage* Montage, float BlendoutTime);
		void Multicast_Stop1PMontage(class UAnimMontage* Montage, float BlendoutTime);
		void Multicast_SpawnDismembermentEffects(EGibAreas GibArea, const struct FHitResult& HitResult);
		void Multicast_SpawnBloodEffects(const struct FHitResult& Hit, float WoundSize);
		void Multicast_SpawnArterialBloodEffects(const struct FHitResult& HitResult, const class FName& Artery);
		void Multicast_SavePoseSnapshot(const class FName& SnapshotName);
		void Multicast_PlayRawVO(const class FString& SpecificFileName, const class FString& OverrideSpeakerName, bool bIgnoreIfAlreadyPlaying);
		void Multicast_PlayNonLocal3PMontage(class UAnimMontage* NewMontage);
		void Multicast_PlayMeleeImpactEffects(class UFMODEvent* ImpactSound, class UParticleSystem* ImpactParticle);
		void Multicast_PlayDeathAnimation(class UAnimMontage* Montage);
		void Multicast_Play3PMontage(class UAnimMontage* NewMontage, float StartTime, float PlayRate);
		void Multicast_PauseAllAnims(bool bPaused);
		void Multicast_OnTargetReported();
		void Multicast_OnKilled(const class FName& LastBoneHit, class AActor* DamageCauser);
		void Multicast_OnIncapacitated(const class FName& LastBone);
		void Multicast_OnExplosiveVestDetonation();
		void Multicast_InflictSuppression(float Strength, class UMatineeCameraShake* CameraShake, bool bLessLethal);
		void Multicast_EnableRagdollBlendIn();
		void Multicast_EnableRagdoll(float Duration);
		void Multicast_DisableRagdoll();
		void Multicast_ChangeFaceEmotion(ECharacterEmotion NewEmotion, float OverrideTime, float Blend, float BlendDecay, int32_t Priority);
		void Multicast_AddMoveIgnoreActor(class AReadyOrNotCharacter* MoveIgnoreCharacter, bool bAdd);
		void MeshMerge();
		void LockMovementAndActions();
		void LockMovement();
		void LockAllActions();
		void LockAim();
		void Kill();
		void KickDoor(class ADoor* Door);
		bool IsUpperBodyMontagePlaying();
		bool IsUnconsciousNotDead();
		bool IsTableMontagePlayingWithTimeRemaining(const class FString& Animation, float* TimeRemaining);
		bool IsTableMontagePlaying(const class FString& Animation);
		bool IsTableMontage(class UAnimMontage* Montage);
		bool IsSuspect();
		bool IsSurrenderedFor(float Seconds);
		bool IsSurrendered();
		bool IsSurrenderComplete();
		bool IsStunnedWith(EStunType StunType);
		bool IsStunned();
		bool IsStartling();
		bool IsSpeechTimerActive();
		bool IsReviveHealthDepleted();
		bool IsRelevant();
		bool IsRagdollBlending();
		bool IsPlayingRootMotionFromMontage();
		bool IsPlayingNonInterruptibleMontage(const class FString& MontageNameTryingToBePlayed);
		bool IsPlayingCarryAnims();
		bool IsOutside();
		bool IsOutlineEnabled(EActorOutlineType OutlineType);
		bool IsOnSWATTeam();
		bool IsOnSameTeam(class AReadyOrNotCharacter* A, class AReadyOrNotCharacter* B);
		bool IsMontageSlotPlaying(const class FName& SlotName);
		bool IsLowHealth();
		bool IsLocalPlayer();
		bool IsLoadingTableMontage();
		bool IsLimbHit(ELimbType Limb);
		bool IsLimbBroken(ELimbType Limb);
		bool IsInRagdoll();
		bool IsInjured();
		bool IsIncapacitated();
		bool IsHealthDepleted();
		bool IsHalfHealth();
		bool IsGettingUp();
		bool IsFullHealth();
		bool IsFullBodyMontagePlaying();
		bool IsDropping();
		bool IsDowned();
		bool IsDeadOrUnconscious();
		bool IsDeadNotUnconscious();
		bool IsCurrentlyTased();
		bool IsCurrentlyStung();
		bool IsCurrentlySprayed();
		bool IsCurrentlyGassed();
		bool IsCurrentlyFlashed();
		bool IsCivilian();
		bool IsCarrying();
		bool IsCarried();
		bool IsBeingThrown();
		bool IsBeingCarried();
		bool IsBeingArrested();
		bool IsArrestedOrSurrendered();
		bool IsArrestedAndDead();
		bool IsArrested();
		bool IsAnyTableMontagePlaying(class FString* OutMontage);
		bool IsAnyLimbHit();
		bool IsAnimationBlocking();
		bool IsAffectedByDamageTypeClass(class UDamageType* DamageType);
		bool IsAffectedByDamageType(class UDamageType* DamageType);
		bool IsActiveForMovement();
		bool IsActive();
		bool Is3PMontagePlaying(class UAnimMontage* Montage);
		void IncreaseHealth(float Amount);
		bool HasRecentlyTakenStunDamage(float Tolerance);
		bool HasRecentlyTakenDamage(float Tolerance);
		bool HasLineOfSightTo(const struct FVector& Location);
		bool HasEverBeenStunned();
		bool HasBeenSpottedBySwat();
		bool HasBeenReported();
		float GetTimeSinceLastStun();
		float GetTimeSinceLastBulletDamage();
		ETeamType GetTeam();
		TArray<class FString> GetTableMontageQueue();
		class FString GetSpeechCharacterName();
		float GetSpeakCooldown();
		TArray<class ABaseItem*> GetRemovedItems();
		class UAnimMontage* GetMontageFromTableWithIndex(const class FString& Animation, int32_t Index);
		class UAnimMontage* GetMontageFromTable(const class FString& Animation);
		int32_t GetMontageAnimCountFromTable(const class FString& Animation);
		float GetMaxHealth();
		struct FLimbHealthData GetLimbHealth(ELimbType Limb);
		class FString GetLastTableMontagePlayed();
		EPlayerHealthStatus GetHealthStatus();
		class UCharacterHealthComponent* GetHealthComponent();
		void GetFMODFootstepParameters(int32_t* Stance, int32_t* Speed, int32_t* Surface);
		class ABaseItem* GetEquippedItem();
		float GetDeltaRotationToCharacter(class AReadyOrNotCharacter* Character);
		EAnimWeaponType GetCurrentWeaponAnimType();
		float GetCurrentStunTime();
		float GetCurrentStunDuration();
		float GetCurrentReviveTime();
		float GetCurrentReviveHealth();
		float GetCurrentHealth();
		TArray<class UPrimitiveComponent*> GetCollisionIgnoredComponents();
		TArray<class AActor*> GetCollisionIgnoredActors();
		void ForceMeshUsingOverride(class USkeletalMesh* InFPMesh, class USkeletalMesh* InTPMesh, class USkeletalMesh* InFaceMesh);
		void EndStun(EStunType StunType);
		void EndEvidenceCollection_COOP(class UInteractableComponent* CollectionInteractableComp);
		void EnableRagdoll(float Duration);
		void EnableOutline(EActorOutlineType OutlineType);
		bool DoesMontageFromTableExist(const class FString& Animation);
		void DisableRagdoll();
		void DisableOutline();
		void DepleteHealth();
		void DecreaseHealth(float Amount);
		bool DamageHitHead(const struct FPointDamageEvent& DamageEvent);
		void CompleteEvidenceCollection_COOP(class AActor* InEvidenceActor);
		void CollectPendingEvidence();
		void Client_SetControlRotation(const struct FRotator& NewRotation);
		void Client_PlayScreenShake(class UMatineeCameraShake* CameraShake);
		void Client_PlayMeleeImpactEffects();
		void Client_PlayFMODEvent2D(class UFMODEvent* Event);
		void Client_Play1PMontage(class UAnimMontage* NewMontage, float PlayRate);
		void Client_OnBoneDamaged(const class FName& BoneHit);
		void Client_OnBodyPartDamaged(bool bInHeadHit, bool bInBodyHit, bool bInLeftArmHit, bool bInRightArmHit, bool bInLeftLegHit, bool bInRightLegHit, bool bInLeftFootHit, bool bInRightFootHit);
		bool CanYell();
		bool CanMelee();
		bool CanDropCharacter(class AReadyOrNotCharacter* CharacterToDrop);
		void CancelArrest(class AReadyOrNotCharacter* PlayerMakingArrest);
		bool CanCarryCharacter(class AReadyOrNotCharacter* CharacterToPickup);
		bool CanBePickedUp();
		bool CanArrestRagdoll();
		bool CanArrest();
		void CacheIsOutside();
		void BeginEvidenceCollection_COOP(class AActor* InEvidenceActor, class UInteractableComponent* CollectionInteractableComp, float CollectionTime);
		void ArrestComplete(class AReadyOrNotCharacter* PlayerMakingArrest, class AZipcuffs* Zipcuffs);
		void Arrest(class AReadyOrNotCharacter* PlayerMakingArrest);
		void ApplyDamageToBone(float* Damage, const class FName& HitBone, const struct FPointDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
		bool AnyBodyPartHit();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimNotifyState_SpawnLight
	 * Size -> 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
	 */
	class UAnimNotifyState_SpawnLight : public UAnimNotifyState
	{
	public:
		struct FLinearColor                                          LightColor;                                              // 0x0030(0x0010) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                        StartIntensity;                                          // 0x0040(0x0004) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                        MiddleIntensity;                                         // 0x0044(0x0004) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                        EndIntensity;                                            // 0x0048(0x0004) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                        InterpSpeed;                                             // 0x004C(0x0004) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class APointLight*                                           PointLight;                                              // 0x0050(0x0008) BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                        MaxDuration;                                             // 0x0058(0x0004) BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                        CurrentDuration;                                         // 0x005C(0x0004) BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                  SocketName;                                              // 0x0060(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DropWeaponAnimNotify
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UDropWeaponAnimNotify : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DefusalGS
	 * Size -> 0x0000 (FullSize[0x09D8] - InheritedSize[0x09D8])
	 */
	class ADefusalGS : public AReadyOrNotGameState
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DeployGrenadeAtLocationActivity
	 * Size -> 0x0000 (FullSize[0x0210] - InheritedSize[0x0210])
	 */
	class UDeployGrenadeAtLocationActivity : public UDeployItemAtLocationActivity
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Door
	 * Size -> 0x0EC8 (FullSize[0x10F0] - InheritedSize[0x0228])
	 */
	class ADoor : public ADoorwayWithoutDoor
	{
	public:
		unsigned char                                                UnknownData_0000[0x48];                                  // 0x0228(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                        Errors;                                                  // 0x0270(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class AActor*                                                DoorBlockerActor;                                        // 0x0280(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                                DoorBlockerActorInst;                                    // 0x0288(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDrawNoStackupExtent;                                    // 0x0290(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xF];                                   // 0x0291(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bRandomlyOpenAtGameStart;                                // 0x02A0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x27];                                  // 0x02A1(0x0027) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bIgnoreForFlee;                                          // 0x02C8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x7];                                   // 0x02C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTeamBreachAndClearActivity*                           CurrentTeamBreachActivity;                               // 0x02D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               OnDoorOpened;                                            // 0x02D8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0xF];                                   // 0x02D9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnSubDoorOpened;                                         // 0x02E8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0xF];                                   // 0x02E9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnDoorClosed;                                            // 0x02F8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0xF];                                   // 0x02F9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnDoorBroken;                                            // 0x0308(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0xF];                                   // 0x0309(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnDoorExploded;                                          // 0x0318(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0008[0xF];                                   // 0x0319(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnDoorKicked;                                            // 0x0328(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0009[0xF];                                   // 0x0329(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TArray<class AThreatAwarenessActor*>                         FrontThreatAwarenessPoints;                              // 0x0338(0x0010) Edit, ZeroConstructor, d.e.o.tate, EditConst, NativeAccessSpecifierPublic
		TArray<class AThreatAwarenessActor*>                         BackThreatAwarenessPoints;                               // 0x0348(0x0010) Edit, ZeroConstructor, d.e.o.tate, EditConst, NativeAccessSpecifierPublic
		TArray<class AStackUpActor*>                                 FrontLeftStackUpPoints;                                  // 0x0358(0x0010) Edit, ZeroConstructor, d.e.o.tate, NativeAccessSpecifierPublic
		TArray<class AStackUpActor*>                                 FrontRightStackUpPoints;                                 // 0x0368(0x0010) Edit, ZeroConstructor, d.e.o.tate, NativeAccessSpecifierPublic
		TArray<class AStackUpActor*>                                 BackLeftStackUpPoints;                                   // 0x0378(0x0010) Edit, ZeroConstructor, d.e.o.tate, NativeAccessSpecifierPublic
		TArray<class AStackUpActor*>                                 BackRightStackUpPoints;                                  // 0x0388(0x0010) Edit, ZeroConstructor, d.e.o.tate, NativeAccessSpecifierPublic
		TArray<class AThreatAwarenessActor*>                         RedTeamFrontClearPoints;                                 // 0x0398(0x0010) Edit, ZeroConstructor, d.e.o.tate, NativeAccessSpecifierPublic
		TArray<class AThreatAwarenessActor*>                         BlueTeamFrontClearPoints;                                // 0x03A8(0x0010) Edit, ZeroConstructor, d.e.o.tate, NativeAccessSpecifierPublic
		TArray<class AThreatAwarenessActor*>                         RedTeamBackClearPoints;                                  // 0x03B8(0x0010) Edit, ZeroConstructor, d.e.o.tate, NativeAccessSpecifierPublic
		TArray<class AThreatAwarenessActor*>                         BlueTeamBackClearPoints;                                 // 0x03C8(0x0010) Edit, ZeroConstructor, d.e.o.tate, NativeAccessSpecifierPublic
		bool                                                         bDoorJammed : 1;                                         // 0x03D8(0x0001) BIT_FIELD Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0010[0x7];                                   // 0x03D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                              DestroyedChunkIdxs;                                      // 0x03E0(0x0010) Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic
		EStackupGenType                                              StackupGenType;                                          // 0x03F0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EStackupGenArea                                              StackupGenArea;                                          // 0x03F1(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0011[0xA];                                   // 0x03F2(0x000A) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        ElectronicLockChance;                                    // 0x03FC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShouldInvertTrap;                                       // 0x0400(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0012[0x7];                                   // 0x0401(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                        OperatingStates;                                         // 0x0408(0x0010) Edit, ZeroConstructor, d.e.o.tate, EditConst, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0013[0x10];                                  // 0x0418(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                       RootScene;                                               // 0x0428(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UStaticMeshComponent*                                  DoorStatic;                                              // 0x0430(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UStaticMeshComponent*                                  DoorHandleFront;                                         // 0x0438(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UStaticMeshComponent*                                  DoorHandleBack;                                          // 0x0440(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMirrorPortalComponent*                                FrontMirrorPoint;                                        // 0x0448(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMirrorPortalComponent*                                BackMirrorPoint;                                         // 0x0450(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UDestructibleDoorChunkComponent*                       DoorChunk0;                                              // 0x0458(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UDestructibleDoorChunkComponent*                       DoorChunk1;                                              // 0x0460(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UDestructibleDoorChunkComponent*                       DoorChunk2;                                              // 0x0468(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UDestructibleDoorChunkComponent*                       DoorChunk3;                                              // 0x0470(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UDestructibleDoorChunkComponent*                       DoorChunk4;                                              // 0x0478(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UDestructibleDoorChunkComponent*                       DoorChunk5;                                              // 0x0480(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UDestructibleDoorChunkComponent*                       DoorChunk6;                                              // 0x0488(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UDestructibleDoorChunkComponent*                       DoorChunk7;                                              // 0x0490(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UDestructibleDoorChunkComponent*                       DoorChunk8;                                              // 0x0498(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UStaticMeshComponent*                                  LightBlocker;                                            // 0x04A0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractableComponent*                                DoorOpenInteractableComp;                                // 0x04A8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractableComponent*                                DoorSublinkOpenInteractableComp;                         // 0x04B0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractableComponent*                                DoorSublinkPushInteractableComp;                         // 0x04B8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractableComponent*                                DoorPushInteractableComp;                                // 0x04C0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractableComponent*                                DoorKickInteractableComp;                                // 0x04C8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractableComponent*                                DoorSublinkKickInteractableComp;                         // 0x04D0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractableComponent*                                LockpickInteractableComponent;                           // 0x04D8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractableComponent*                                C2InteractableComponent;                                 // 0x04E0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractableComponent*                                WedgeInteractableComponent;                              // 0x04E8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractableComponent*                                OptiwandInteractableComponent;                           // 0x04F0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractableComponent*                                BSGInteractableComponent;                                // 0x04F8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractableComponent*                                BSGInteractableComponent_3;                              // 0x0500(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractableComponent*                                DoorRamInteractableComponent;                            // 0x0508(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODAudioPropagationComponent*                        FMODAudioPropagationComp;                                // 0x0510(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ANavLinkProxy*                                         NavLinkProxy;                                            // 0x0518(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USceneComponent*                                       LockpickArea;                                            // 0x0520(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USceneComponent*                                       DoorArea;                                                // 0x0528(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USceneComponent*                                       C2Area;                                                  // 0x0530(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USceneComponent*                                       BSGArea;                                                 // 0x0538(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USceneComponent*                                       MirrorgunArea;                                           // 0x0540(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USceneComponent*                                       WedgeArea;                                               // 0x0548(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USceneComponent*                                       BatteringRamArea;                                        // 0x0550(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AFlankingAvoidanceVolume*                              NavModifierVolume;                                       // 0x0558(0x0008) Edit, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bHasEverBeenOpenedBySwat : 1;                            // 0x0560(0x0001) BIT_FIELD Edit, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0014[0x7];                                   // 0x0561(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowHandle                                   TypeOfDoor;                                              // 0x0568(0x0010) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FDataTableRowHandle                                   TypeOfTrap;                                              // 0x0578(0x0010) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
		ETrapSetup                                                   TrapSetup;                                               // 0x0588(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bNoSpawnTrap : 1;                                        // 0x0589(0x0001) BIT_FIELD Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0015[0x2];                                   // 0x058A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                  DoorName;                                                // 0x058C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bCanPlayerInteract : 1;                                  // 0x0594(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bCanMirrorGun : 1;                                       // 0x0594(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bOneWay : 1;                                             // 0x0594(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bCanOpenFromOppositeSide : 1;                            // 0x0594(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0016[0x3];                                   // 0x0595(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EDoorDamageType, float>                                 DoorKillDistance;                                        // 0x0598(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		TMap<EDoorDamageType, float>                                 DoorStunDistance;                                        // 0x05E8(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		float                                                        MaxOpenClose;                                            // 0x0638(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        StartingOpenCloseAngle;                                  // 0x063C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        OpenThreshold;                                           // 0x0640(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        CloseThreshold;                                          // 0x0644(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        IncrementAngle;                                          // 0x0648(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MultitoolUseTime;                                        // 0x064C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        GrenadeDamageToBreakDoor;                                // 0x0650(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MoveAndClearRequiredAmount;                              // 0x0654(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        PhysicalPushAmount;                                      // 0x0658(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bCanIssueOrdersOnFrontSide;                              // 0x065C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bCanIssueOrdersOnBackSide;                               // 0x065D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0017[0x2];                                   // 0x065E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPingData                                             PingData;                                                // 0x0660(0x00A8) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class ADoor*                                                 DriveSubDoor;                                            // 0x0708(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ADoor*                                                 MatchOpenCloseDoor;                                      // 0x0710(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bMainSubDoor : 1;                                        // 0x0718(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bKickAlwaysFails : 1;                                    // 0x0718(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0018[0x3];                                   // 0x0719(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        DoorKickSuccessChance;                                   // 0x071C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                      NumSuccessfulKicksToBreakDown;                           // 0x0720(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0019[0x4];                                   // 0x0724(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialInterface*                                    C2ExplosionDecal;                                        // 0x0728(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bDisableStackUpOnFront;                                  // 0x0730(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bDisableStackUpOnBack;                                   // 0x0731(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bOverrideLockChance : 1;                                 // 0x0732(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0020[0x1];                                   // 0x0733(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        LockedChance;                                            // 0x0734(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCurveFloat*                                           DoorPushCurve;                                           // 0x0738(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCurveFloat*                                           DoorOpenCurve;                                           // 0x0740(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCurveFloat*                                           DoorCloseCurve;                                          // 0x0748(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCurveFloat*                                           DoorKickSuccessCurve;                                    // 0x0750(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCurveFloat*                                           DoorKickFailCurve;                                       // 0x0758(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCurveFloat*                                           DoorLockedCurve;                                         // 0x0760(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCurveFloat*                                           DoorRamCurve;                                            // 0x0768(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCurveFloat*                                           DoorExplodeCurve;                                        // 0x0770(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCurveFloat*                                           DoorBreachCurve;                                         // 0x0778(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCurveFloat*                                           DoorHandleOpenCurve;                                     // 0x0780(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCurveFloat*                                           DoorHandlePushCurve;                                     // 0x0788(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCurveFloat*                                           DoorHandleLockedCurve;                                   // 0x0790(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class APlacedC2Explosive*                                    PlacedC2;                                                // 0x0798(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UDestructibleDoorChunkComponent*>               ChunkComponents;                                         // 0x07A0(0x0010) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.i, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		bool                                                         bPendingSubDoorKick : 1;                                 // 0x07B0(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0021[0x7];                                   // 0x07B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReadyOrNotCharacter*                                  LastDoorUser;                                            // 0x07B8(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EDoorDamageType                                              LastDoorDamage;                                          // 0x07C0(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0022[0x7];                                   // 0x07C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ATrapActorAttachedToDoor*                              AttachedTrap;                                            // 0x07C8(0x0008) Edit, Net, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ADoorJam*                                              AttachedWedge;                                           // 0x07D0(0x0008) Edit, Net, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bIsElectronicDoor : 1;                                   // 0x07D8(0x0001) BIT_FIELD NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0023[0x3];                                   // 0x07D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        OpenCloseAmount;                                         // 0x07DC(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        DoorHandlePitchAmount;                                   // 0x07E0(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bC2Placed : 1;                                           // 0x07E4(0x0001) BIT_FIELD Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bSWATKnowsLockState : 1;                                 // 0x07E4(0x0001) BIT_FIELD Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bSuspectKnowsLockState : 1;                              // 0x07E4(0x0001) BIT_FIELD Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bSWATKnowsTrapState : 1;                                 // 0x07E4(0x0001) BIT_FIELD Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bSuspectKnowsTrapState : 1;                              // 0x07E4(0x0001) BIT_FIELD Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         Blocked : 1;                                             // 0x07E4(0x0001) BIT_FIELD Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bDoorBroken : 1;                                         // 0x07E4(0x0001) BIT_FIELD Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bTrapInFront : 1;                                        // 0x07E4(0x0001) BIT_FIELD Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bAlarmTriggered : 1;                                     // 0x07E5(0x0001) BIT_FIELD NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bSuspectsHaveKeycard : 1;                                // 0x07E5(0x0001) BIT_FIELD NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bDoorHandlesBroken : 1;                                  // 0x07E5(0x0001) BIT_FIELD Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bClientReset : 1;                                        // 0x07E5(0x0001) BIT_FIELD Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bSWATHasKeycard : 1;                                     // 0x07E5(0x0001) BIT_FIELD NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0024[0x3A];                                  // 0x07E6(0x003A) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDoorData                                             DoorData;                                                // 0x0820(0x0150) Net, RepNotify, NativeAccessSpecifierPrivate
		struct FTrapData                                             TrapData;                                                // 0x0970(0x0050) Net, RepNotify, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0025[0x718];                                 // 0x09C0(0x0718) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AReadyOrNotCharacter*>                          CharactersOverlappingDoor;                               // 0x10D8(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		float                                                        DoorOcclusionMultiplier;                                 // 0x10E8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0026[0x4];                                   // 0x10EC(0x0004) MISSED OFFSET (PADDING)

	public:
		void UpdateDoorTickRate();
		void UnlockDoor(bool bUnlockSubDoor);
		void TryPlayAISuspectResponseToDoorBroken();
		void ToggleLightBlocker();
		void Tick_DoorRam();
		void Tick_DoorPush();
		void Tick_DoorOpenClose();
		void Tick_DoorLocked();
		void Tick_DoorKick_Success();
		void Tick_DoorKick_Fail();
		void Tick_DoorHandleLocked();
		void Tick_DoorHandle_Push();
		void Tick_DoorHandle_Open();
		void Tick_DoorExplode();
		void Tick_DoorBreach();
		bool TeamKnowsDoorTrapState(bool bSuspectTeam);
		bool TeamKnowsDoorLockState(bool bSuspectTeam);
		bool SubDoor_CanOpenDoors(class AReadyOrNotCharacter* PlayerCharacter);
		bool SubDoor_CanCloseDoors(class AReadyOrNotCharacter* PlayerCharacter);
		void SpawnDoorBlocker();
		void SkippedBreachAction();
		void SetupTrap();
		void Setup();
		void SetSWATHasAllKeycards(class UObject* WorldContextObject);
		void SetLocked(bool bNewLocked);
		void SetDoorTrapKnowledge(bool bSuspectTeam, bool bKnowledge);
		void SetDoorLockKnowledge(bool bSuspectTeam, bool bKnowledge);
		void SetAllElectronicLocks(class UObject* WorldContextObject, bool Blocked);
		void Server_SetTrapKnowledgeState(bool bSuspectTeam, bool bNewKnowledgeState);
		void Server_SetLockKnowledgeState(bool bSuspectTeam, bool bNewKnowledgeState);
		void Restore();
		void ResetDoorTrapKnowledge();
		void ResetDoorLockKnowledge();
		void RemoveWedges();
		void RemoveDoorBlocker();
		float RamDoor(class AReadyOrNotCharacter* DoorRamCharacter);
		void PushDoor_SpecificAngle(class AReadyOrNotCharacter* DoorPusherCharacter, float CustomTargetAngle, bool bAnimateDoorHandle);
		float PushDoor(class AReadyOrNotCharacter* DoorPusherCharacter, float InIncrementAngle, bool bAnimateDoorHandle, bool bPlaySound);
		void PlayDoorSound(EDoorInteraction DoorInteraction, class AReadyOrNotCharacter* DoorInteractionInstigator, TArray<struct FMODParam> Params);
		void PlayDoorKickSound(class AReadyOrNotCharacter* Kicker, float Result);
		void PlayDoorDamageSound(EDoorDamageType DoorDamage, TArray<struct FMODParam> Params);
		float PeekDoor(class AReadyOrNotCharacter* DoorPeekerCharacter, float InIncrementAngle, bool bAnimateDoorHandle);
		void OpenSubDoor(class AReadyOrNotCharacter* DoorOpenCharacter, bool bInstant, bool bAnimateDoorHandle);
		void OpenDoor_SpecificAngle(class AReadyOrNotCharacter* DoorOpenCharacter, float CustomTargetAngle, bool bInstant, bool bAnimateDoorHandle);
		void OpenDoor_Debug();
		float OpenDoor(class AReadyOrNotCharacter* DoorOpenCharacter, bool bInstant, bool bAnimateDoorHandle, bool bNoCloseThreshold);
		void OnRep_TrapDataUpdated();
		void OnRep_DoorHandlesBroken();
		void OnRep_DoorDataUpdated();
		void OnRep_DestroyedChunkIdxChanged();
		void OnRep_ClientResetDoor();
		void OnDoorOpened__DelegateSignature();
		void OnDoorKick__DelegateSignature(class ADoor* Door, class AReadyOrNotCharacter* InstigatorCharacter, bool bSuccess);
		void OnDoorExplode__DelegateSignature(class ADoor* Door, class AReadyOrNotCharacter* InstigatorCharacter);
		void OnDoorClosed__DelegateSignature();
		void OnDoorBroken__DelegateSignature();
		bool NonMainSubDoor_CanShowOpenDoorPrompt();
		void Multicast_SetLocked(bool bShouldLocked);
		void Multicast_PlayElectronicDoorSound(class UFMODEvent* Event);
		void Multicast_PlayDoorSound(EDoorInteraction DoorDamage, class AReadyOrNotCharacter* DoorInteractionInstigator, TArray<struct FMODParam> Params);
		void Multicast_PlayDoorDamageSound(EDoorDamageType DoorDamage, TArray<struct FMODParam> Params);
		void Multicast_ExplodeDoor(class AReadyOrNotCharacter* DoorBreacherCharacter, class AActor* ExplosionCauser, bool bKeepHinges);
		void Multicast_CheckSupports();
		bool MainSubDoor_CanShowOpenDoorPrompt();
		void LockDoor(bool bLockSubDoor);
		void KickSubDoor(class AReadyOrNotCharacter* DoorKickCharacter);
		void KickDoor(class AReadyOrNotCharacter* DoorKickCharacter, bool bKickSubDoor, bool bForce);
		bool IsTrapLive();
		bool IsTooFarForKick();
		bool IsSubDoorOpen();
		bool IsStackUpDisabled(const struct FVector& CommandLocation);
		bool IsPointRightOfDoorway(const struct FVector& Vector);
		bool IsPointInFrontOfDoor(const struct FVector& Vector);
		bool IsPendingSubDoorKick();
		bool IsOutlineEnabled(EActorOutlineType OutlineType);
		bool IsOutlineDisabled();
		bool IsOpening();
		bool IsOpenBy_Angle(float Angle);
		bool IsOpenBy(float Percentage);
		bool IsOpenBeyondIncrementThreshold();
		bool IsOpenBeyondCloseThreshold();
		bool IsOpenBeyond_Angle(float Angle);
		bool IsOpenBeyond(float Percentage);
		bool IsOpenAtOrBeyond_Angle(float Angle);
		bool IsOpenAtOrBeyond(float Percentage);
		bool IsOpen_Forward();
		bool IsOpen_Backward();
		bool IsOpen();
		bool IsNonMainSubdoor();
		bool IsNonDoorInteractionPlaying();
		bool IsMirrorBlocked();
		bool IsMiddleChunkBroken();
		bool IsMainSubdoor();
		bool IsLocked();
		bool IsLockChanceOverriden();
		bool IsLockable();
		bool IsLocationSameSideAsTrap(const struct FVector& InLocation);
		bool IsJammed();
		bool IsIgnoredForFlee();
		bool IsHalfwayOpen();
		bool IsFullyOpen_Forward();
		bool IsFullyOpen_Backward();
		bool IsFullyOpen();
		bool IsElectronicDoor();
		bool IsDoorwayOnly();
		bool IsDoorInteractionPlaying();
		bool IsDoorChunkDestroyed(class UDestructibleDoorChunkComponent* InChunkComponent);
		bool IsDoorBroken();
		bool IsDestructible();
		bool IsClosing();
		bool IsClosed();
		bool IsC2Placed();
		bool IsAttachedToRoot();
		bool IsAnyInteractionPlaying();
		bool IsAnyAIOpening();
		bool IsAnyAIClosing();
		bool IsActorSameSideAsTrap(class AActor* InActor);
		bool IsActorRightOfDoorway(class AActor* Actor);
		bool IsActorInFrontOfDoorway(class AActor* Actor);
		bool IsActorInFrontOfDoor(class AActor* Actor);
		bool IsActorBehindDoor_Relative(class AActor* Actor);
		bool HasTrapAndSWATKnowsTrap();
		bool HasTrapAndSuspectKnowsTrap();
		bool HasEverBeenOpened();
		struct FVector GetWedgeLocation();
		class FName GetTypeOfDoorTrap();
		class FName GetTypeOfDoorRow();
		float GetTargetAngle();
		bool GetSWATKnowsLockState();
		bool GetSuspectKnowsLockState();
		class ADoor* GetSubDoor();
		float GetStartingOpenAngle();
		TArray<class AStackUpActor*> GetStackupsForArea(EStackupGenArea StackupArea);
		float GetPseudoVelocity();
		class APlacedC2Explosive* GetPlacedC2();
		float GetOpenThreshold();
		float GetOpenAmountAsPercentage();
		float GetOpenAmount();
		float GetMaxOpenAmount();
		class AReadyOrNotCharacter* GetLastDoorUser();
		float GetIncrementAngle();
		TMap<EDoorDamageType, float> GetDoorStunDistance();
		struct FVector GetDoorMidLocation();
		TMap<EDoorDamageType, float> GetDoorKillDistance();
		struct FVector GetBestDoorInteraction_FromStackUpArea(EStackupGenArea InStackUpArea, bool bDoorwayBased);
		struct FVector GetBestDoorInteraction_FromLocation(const struct FVector& InInteractionLocation, bool bDoorwayBased);
		class ADoorJam* GetAttachedWedge();
		class ATrapActorAttachedToDoor* GetAttachedTrap();
		void GenerateClearPoints();
		void FlipStackUpArea(EStackupGenArea* OutStackUpArea, bool bHorizontalFlip, bool bVerticalFlip);
		void Finished_DoorRam();
		void Finished_DoorKick_Success();
		void Finished_DoorExplode();
		EStackupGenArea FindStackUpAreaFromLocation(const struct FVector& InInteractionLocation);
		void ExplodeDoor(class AReadyOrNotCharacter* DoorBreacherCharacter, class AActor* ExplosionCauser, bool bKeepHinges);
		void EnableOutline(EActorOutlineType OutlineType);
		void EnableNavLink();
		void EnableAllInteractables();
		bool DoesSWATKnowTrapState();
		bool DoesSuspectKnowTrapState();
		void DisableStackupsOnErroringSide();
		void DisableOutline();
		void DisableNavLink();
		void DisableAllInteractables();
		void DestroyNavLink();
		void DestroyChunk_Index(int32_t ChunkIndex, const struct FVector& Impulse, float ImpulseStrength);
		void DestroyChunk(class UDestructibleDoorChunkComponent* InChunk, const struct FVector& Impulse, float ImpulseStrength);
		void DestroyAllChunks(const struct FVector& Impulse, float ImpulseStrength, bool bKeepHinges);
		void DecreaseNumKicksToBreakDown(class AReadyOrNotCharacter* DoorKickCharacter, bool* bShouldOpenDoor, bool* bCanBreakLock, float KickChanceOffset);
		void CollapseDoor(class AReadyOrNotCharacter* DoorBreacherCharacter, const struct FVector& BreachLocation);
		void CloseSubDoor(class AReadyOrNotCharacter* DoorCloseCharacter, bool bInstant, bool bAnimateDoorHandle);
		void CloseDoor_Debug();
		void CloseDoor(class AReadyOrNotCharacter* DoorCloserCharacter, bool bInstant, bool bAnimateDoorHandle);
		bool CanTakeDamage(float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
		bool CanSpawnTrap();
		bool CanRamDoor(class AReadyOrNotCharacter* PlayerCharacter);
		bool CanPushDoorWhileBroken();
		bool CanPushDoor(class AReadyOrNotCharacter* PlayerCharacter);
		bool CanPullDoor(class AReadyOrNotCharacter* PlayerCharacter);
		bool CanPlaceC2Explosive(class AReadyOrNotCharacter* PlayerCharacter);
		bool CanPeekDoor(class AReadyOrNotCharacter* PlayerCharacter);
		bool CanOpenDoor(class AReadyOrNotCharacter* PlayerCharacter);
		bool CanMirrorUnderDoor(class AReadyOrNotCharacter* PlayerCharacter);
		bool CanLockpickDoor(class AReadyOrNotCharacter* PlayerCharacter);
		bool CanKickDoor(class AReadyOrNotCharacter* PlayerCharacter);
		bool CanIssueOrdersHere(const struct FHitResult& TraceResult);
		bool CanEquipWedge(class AReadyOrNotCharacter* PlayerCharacter);
		bool CanEquipOptiwand(class AReadyOrNotCharacter* PlayerCharacter);
		bool CanEquipMultitool(class AReadyOrNotCharacter* PlayerCharacter);
		bool CanEquipC2Explosive(class AReadyOrNotCharacter* PlayerCharacter);
		bool CanEquipBreachingShotgun(class AReadyOrNotCharacter* PlayerCharacter);
		bool CanEquipBatteringRam(class AReadyOrNotCharacter* PlayerCharacter);
		bool CanDeployWedge(class AReadyOrNotCharacter* PlayerCharacter);
		bool CanCloseDoor(class AReadyOrNotCharacter* PlayerCharacter);
		void BreakDoorHandles();
		void BreakDoor(bool bDestroyAllChunks, class AReadyOrNotCharacter* DoorBreakerCharacter);
		void BreachDoorFromPoint(class AReadyOrNotCharacter* DoorBreacherCharacter, const struct FVector& BreachPoint, float InIncrementAngle);
		void BreachDoor(class AReadyOrNotCharacter* DoorBreacherCharacter, float InIncrementAngle);
		void AttachWedge(class ADoorJam* NewWedge);
		void AttachTrap(class ATrapActorAttachedToDoor* NewTrap, bool bAttachToDoor);
		void ApplyRandomDamageToChunks(float MinDamage, float MaxDamage);
		void ApplyDoorDamage(EDoorDamageType InDoorDamage, class AReadyOrNotCharacter* Victim);
		bool AnyTopDoorChunksBroken();
		bool AnyMiddleDoorChunksBroken();
		bool AnyHingesLeft();
		bool AnyChunksDestroyed();
		bool AnyBottomDoorChunksBroken();
		bool AllTopDoorChunksBroken();
		bool AllMiddleDoorChunksBroken();
		bool AllMajorDoorChunksDestroyed();
		bool AllBottomDoorChunksBroken();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ElevatorButtonComponent
	 * Size -> 0x0040 (FullSize[0x0520] - InheritedSize[0x04E0])
	 */
	class UElevatorButtonComponent : public UStaticMeshComponent
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x04E0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bOverrideButtonPromptText;                               // 0x04F0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x04F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                  ButtonPromptText;                                        // 0x04F8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class AElevator*                                             OwningElevator;                                          // 0x0510(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDoorButton;                                             // 0x0518(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDoorClose;                                              // 0x0519(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x2];                                   // 0x051A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      Floor;                                                   // 0x051C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DuelingCombatMove
	 * Size -> 0x0030 (FullSize[0x0248] - InheritedSize[0x0218])
	 */
	class UDuelingCombatMove : public UBaseCombatMoveActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x30];                                  // 0x0218(0x0030) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DefuseBombThreats
	 * Size -> 0x0008 (FullSize[0x0278] - InheritedSize[0x0270])
	 */
	class ADefuseBombThreats : public AObjective
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0270(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnBombDefused(class ABombActor* DefusedBomb);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DynamicInteractableWorldItem
	 * Size -> 0x00A0 (FullSize[0x02C0] - InheritedSize[0x0220])
	 */
	class ADynamicInteractableWorldItem : public AActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bRestartOnToggle;                                        // 0x0228(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bCanToggleIfDestroyed;                                   // 0x0229(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bItemOn;                                                 // 0x022A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bItemDestroyed;                                          // 0x022B(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x022C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInteractableComponent*                                InteractableComponent;                                   // 0x0230(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODAudioComponent*                                   InteractAudioFMOD;                                       // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODAudioComponent*                                   IntactRunningAudioFMOD1;                                 // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODAudioComponent*                                   DestroyedRunningAudioFMOD;                               // 0x0248(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODAudioComponent*                                   ImpactAudioFMOD;                                         // 0x0250(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UMaterialInterface*>                            IntactOnMaterials;                                       // 0x0258(0x0010) Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class UMaterialInterface*>                            IntactOffMaterials;                                      // 0x0268(0x0010) Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class UMaterialInterface*>                            DestroyedOnMaterials;                                    // 0x0278(0x0010) Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class UMaterialInterface*>                            DestroyedOffMaterials;                                   // 0x0288(0x0010) Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		class UStaticMeshComponent*                                  ItemMesh;                                                // 0x0298(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UStaticMesh*                                           PostDestructionMesh;                                     // 0x02A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystemComponent*                              ImpactParticle;                                          // 0x02A8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMaterialInterface*                                    PhysicsImpactDecal;                                      // 0x02B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        PhysicsImpactDecalScale;                                 // 0x02B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x02BC(0x0004) MISSED OFFSET (PADDING)

	public:
		void OnItemStateToggled();
		void OnItemDestroyed();
		void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		void Multicast_ItemStateToggle();
		void Multicast_DestroyItem();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.FlashLightTrackingPoint
	 * Size -> 0x0038 (FullSize[0x0258] - InheritedSize[0x0220])
	 */
	class AFlashLightTrackingPoint : public AActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bIsPrimary : 1;                                          // 0x0228(0x0001) BIT_FIELD Edit, BlueprintVisible, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x0229(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMeshComponent*                                  MeshComp;                                                // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAIPerceptionStimuliSourceComponent*                   PerceptionStimuliComp;                                   // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class ACyberneticController*>                         SensedByControllers;                                     // 0x0240(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x8];                                   // 0x0250(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CoverFireVolume
	 * Size -> 0x0030 (FullSize[0x0288] - InheritedSize[0x0258])
	 */
	class ACoverFireVolume : public AVolume
	{
	public:
		TArray<class AFirePointActor*>                               FirePoints;                                              // 0x0258(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class ASuspectCharacter*>                             BlacklistedSuspects;                                     // 0x0268(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class ASuspectCharacter*>                             CachedSuspects;                                          // 0x0278(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected

	public:
		void OnActorSpawned(class AActor* Actor);
		bool HasFreeFirePoint();
		class AFirePointActor* GetNextPushUpPoint(class AFirePointActor* CurrentFirePoint, const struct FVector& Location, const struct FVector& EnemyLocation, class ACyberneticController* Controller);
		TArray<class ASuspectCharacter*> GetNearestSuspects();
		class AFirePointActor* GetNearestFirePoint(const struct FVector& Location, class ACyberneticController* Controller);
		class AFirePointActor* GetFurtherestFirePoint(const struct FVector& Location, class ACyberneticController* Controller);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.EnvironmentVolume
	 * Size -> 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
	 */
	class AEnvironmentVolume : public AActor
	{
	public:
		class UBoxComponent*                                         Bounds;                                                  // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WetnessRate;                                             // 0x0228(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x022C(0x0004) MISSED OFFSET (PADDING)

	public:
		void OnOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.FormationActor
	 * Size -> 0x0028 (FullSize[0x0248] - InheritedSize[0x0220])
	 */
	class AFormationActor : public AActor
	{
	public:
		class AActor*                                                FollowActor;                                             // 0x0220(0x0008) Edit, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      MaxPositions;                                            // 0x0228(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MaxRange;                                                // 0x022C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCapsuleComponent*                                     AlphaCapsule;                                            // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UBillboardComponent*>                           Positions;                                               // 0x0238(0x0010) Edit, ExportObject, ZeroConstructor, d.e.o.tate, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.AnimTurnInPlaceLibrary
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UAnimTurnInPlaceLibrary : public UBlueprintFunctionLibrary
	{
	public:
		void UpdateTurnInPlace(float DeltaTime, bool bAllowTurnInPlace, bool bHoldYawOffset, bool bIsTurnTransitionStateRelevant, bool bClampYawOffset, float YawOffsetLimit, const struct FRotator& MeshWorldRotation, const struct FAnimTurnInPlaceAnimSet& AnimSet, struct FAnimTurnInPlaceState* TurnInPlaceState, float TurnInPlaceSpeedMultiplier);
		void PostProcessYawOffset(float DeltaSeconds, float* YawOffset, float* LastYawOffset, float* LastPostProcessedYawOffset, float* TurnAroundTimeToGo, float TurnAroundBlendTime);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PickupActor
	 * Size -> 0x0068 (FullSize[0x0288] - InheritedSize[0x0220])
	 */
	class APickupActor : public AActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnActorPickedUp;                                         // 0x0228(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xF];                                   // 0x0229(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnActorPickedUp_NoParam;                                 // 0x0238(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0xF];                                   // 0x0239(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnActorDropped;                                          // 0x0248(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0xF];                                   // 0x0249(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class FName                                                  PickupName;                                              // 0x0258(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USkeletalMeshComponent*                                SkeletalMesh;                                            // 0x0260(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UStaticMeshComponent*                                  StaticMesh;                                              // 0x0268(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UObjectiveMarkerComponent*                             ObjectiveMarkerComponent;                                // 0x0270(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractableComponent*                                InteractableComponent;                                   // 0x0278(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AActor*                                                PickupInstigator;                                        // 0x0280(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void ToggleObjectiveMarker();
		void ShowObjectiveMarker();
		void OnActorPickedUp_NoParam__DelegateSignature();
		void OnActorPickedUp__DelegateSignature(class AActor* PickedActor);
		void OnActorDropped__DelegateSignature(class AActor* DroppedActor);
		void HideObjectiveMarker();
		class AActor* GetPickupInstigator();
		void EnableOutline(EActorOutlineType OutlineType);
		void DisableOutline();
		bool CanPickUpNow(class APlayerCharacter* PickerUpper);
		void ActorPickedUp(class AActor* InPickupInstigator);
		void ActorDropped(class AActor* InDroppedInstigator);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CoverLandmark
	 * Size -> 0x0290 (FullSize[0x04B0] - InheritedSize[0x0220])
	 */
	class ACoverLandmark : public AActor
	{
	public:
		class USceneComponent*                                       SceneComponent;                                          // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bEnabled : 1;                                            // 0x0228(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0229(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                LandmarkName;                                            // 0x0230(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TSoftObjectPtr<class AStaticMeshActor>                       CoverObject;                                             // 0x0240(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x0264(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		bool                                                         bDisableCollision : 1;                                   // 0x0268(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x7];                                   // 0x0269(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ETeamType>                                            AllowedTeamsForCover;                                    // 0x0270(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<TSoftObjectPtr<class AStaticMeshActor>>               IgnoredMeshActors;                                       // 0x0280(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, UObjectWrapper, NativeAccessSpecifierPublic
		float                                                        CooldownAfterUse;                                        // 0x0290(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCharacterHiddenInWaitingState;                          // 0x0294(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0xB];                                   // 0x0295(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct PCoreUObject_FTransform                               ExitTriggerBoxTransform;                                 // 0x02A0(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                  ExitTriggerBoxExtent;                                    // 0x02D0(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x4];                                   // 0x02DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct PCoreUObject_FTransform                               IdleTriggerBoxTransform;                                 // 0x02E0(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                  IdleTriggerBoxExtent;                                    // 0x0310(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x4];                                   // 0x031C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCoverLandmarkAnimData                                Entry;                                                   // 0x0320(0x0058) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FCoverLandmarkAnimData                                Loop;                                                    // 0x0378(0x0058) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FCoverLandmarkAnimData                                Exit;                                                    // 0x03D0(0x0058) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                         bAllowAbruptExit : 1;                                    // 0x0428(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x7];                                   // 0x0429(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ACoverLandmarkProxy*>                           EntryPoints;                                             // 0x0430(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, NativeAccessSpecifierPublic
		TArray<class ACoverLandmarkProxy*>                           ExitPoints;                                              // 0x0440(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, NativeAccessSpecifierPublic
		class ACoverLandmarkProxy*                                   IdlePoint;                                               // 0x0450(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AController*                                           OccupiedByController;                                    // 0x0458(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class AController*, float>                              CooldownMap;                                             // 0x0460(0x0050) Protected, NativeAccessSpecifierProtected

	public:
		void ToggleLandmarkEnabled(bool bEnable);
		void PreviewIdleAnim();
		void PreviewExitAnim();
		void PreviewEntryAnim();
		bool IsCooldownActiveFor(class AController* InController);
		void EnableLandmark();
		void DisableLandmark();
		void AddCooldownFor(class AController* InController, float InCooldownTime);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.FlankingCombatMove
	 * Size -> 0x0048 (FullSize[0x0260] - InheritedSize[0x0218])
	 */
	class UFlankingCombatMove : public UBaseCombatMoveActivity
	{
	public:
		class AReadyOrNotCharacter*                                  FlankingAgainstCharacter;                                // 0x0218(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AFlankingAvoidanceVolume*                              FlankingAvoidanceVolume;                                 // 0x0220(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x38];                                  // 0x0228(0x0038) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CustomDoorBreachActivity
	 * Size -> 0x0000 (FullSize[0x0228] - InheritedSize[0x0228])
	 */
	class UCustomDoorBreachActivity : public UDoorBreachActivity
	{
	public:
		void TickBreachDoor(float DeltaTime);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CoverLandmarkProxy
	 * Size -> 0x0018 (FullSize[0x0238] - InheritedSize[0x0220])
	 */
	class ACoverLandmarkProxy : public AActor
	{
	public:
		class ACoverLandmark*                                        LandmarkOwner;                                           // 0x0220(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECoverLandmarkAnimDirection                                  EntryDirection;                                          // 0x0228(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECoverLandmarkAnimDirection                                  ExitDirection;                                           // 0x0229(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x6];                                   // 0x022A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                       SceneComponent;                                          // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void OnProxyUse(bool bIsActive);
		void OnProxyEnd(bool bSuccess);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ArmourResourceComponent
	 * Size -> 0x0010 (FullSize[0x0118] - InheritedSize[0x0108])
	 */
	class UArmourResourceComponent : public UResourceComponent
	{
	public:
		int32_t                                                      MaxTickets;                                              // 0x0108(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        Resistance;                                              // 0x010C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                      RemainingTickets;                                        // 0x0110(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x0114(0x0004) MISSED OFFSET (PADDING)

	public:
		void SetResistance(float NewResistancePercentage);
		void SetMaxTickets(int32_t NewMax);
		float GetResistancePercentage();
		int32_t GetRemainingTickets();
		int32_t GetMaxTickets();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CyberneticCharacter
	 * Size -> 0x0C10 (FullSize[0x1FC0] - InheritedSize[0x13B0])
	 */
	class ACyberneticCharacter : public AReadyOrNotCharacter
	{
	public:
		class APawn*                                                 ClosestPawn;                                             // 0x13B0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x13B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class URoNMoveStyleComponent*                                MoveStyle;                                               // 0x13C8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x1C];                                  // 0x13D0(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        ForceComplianceStrength;                                 // 0x13EC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECoverDirection                                              ActiveCoverDirection;                                    // 0x13F0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECoverAimType                                                ActiveCoverAimType;                                      // 0x13F1(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECoverFireType                                               ActiveCoverFireType;                                     // 0x13F2(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x5];                                   // 0x13F3(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                         ActiveCoverFirePose;                                     // 0x13F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                         ActiveCoverIdlePose;                                     // 0x1400(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ACoverLandmark*                                        CurrentCoverLandmarkInUse;                               // 0x1408(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ACoverLandmark*                                        LastCoverLandmarkUsed;                                   // 0x1410(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AWallHoleTraversal*                                    CurrentWallHoleTraversalInUse;                           // 0x1418(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AWallHoleTraversal*                                    LastWallHoleTraversalUsed;                               // 0x1420(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x8];                                   // 0x1428(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            VoiceLineEventMask;                                      // 0x1430(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x8];                                   // 0x1438(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UStaticMeshComponent*>                          SimulatingAttachedStaticMeshes;                          // 0x1440(0x0010) ExportObject, Net, ZeroConstructor, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<struct FAttachedMeshData>                             AttachedMeshData;                                        // 0x1450(0x0010) Net, ZeroConstructor, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<struct FAttachedSkeletalMeshData>                     AttachedSkeletalMeshData;                                // 0x1460(0x0010) Net, ZeroConstructor, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                         bIsMoving;                                               // 0x1470(0x0001) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x17];                                  // 0x1471(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ABaseItem*                                             LastEquippedBreachItem;                                  // 0x1488(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               OnSpottedEnemy;                                          // 0x1490(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0xF];                                   // 0x1491(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnSpottedFriendly;                                       // 0x14A0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0xF];                                   // 0x14A1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnSpottedNeutral;                                        // 0x14B0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0008[0xF];                                   // 0x14B1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnSensedActor;                                           // 0x14C0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0009[0xF];                                   // 0x14C1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnSensedCharacter;                                       // 0x14D0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0010[0xF];                                   // 0x14D1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnAIFinishSpawning;                                      // 0x14E0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0011[0xF];                                   // 0x14E1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0012[0x10];                                  // 0x14F0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTextRenderComponent*                                  NoBuenoTextRender;                                       // 0x1500(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      AbuseCount;                                              // 0x1508(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0013[0x4];                                   // 0x150C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                        ReasonsToSprint;                                         // 0x1510(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FString>                                        ReasonsToStandStill;                                     // 0x1520(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FString>                                        ReasonsToWalk;                                           // 0x1530(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                        ShootingYellCoolDownDuration;                            // 0x1540(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0014[0x4];                                   // 0x1544(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCoverAnimStateMachineData                            Rep_CoverAnimState;                                      // 0x1548(0x0018) BlueprintVisible, Net, NoDestructor, NativeAccessSpecifierPublic
		struct FHidingAnimStateMachineData                           Rep_HidingAnimState;                                     // 0x1560(0x0010) BlueprintVisible, Net, NoDestructor, NativeAccessSpecifierPublic
		struct FHoleTraversalAnimStateMachineData                    Rep_HoleTraversalAnimState;                              // 0x1570(0x0010) BlueprintVisible, Net, NoDestructor, NativeAccessSpecifierPublic
		struct FVector2D                                AimOffset;                                               // 0x1580(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0015[0x10];                                  // 0x1588(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class AReadyOrNotCharacter*, int32_t>                   MeleeCountMap;                                           // 0x1598(0x0050) NativeAccessSpecifierPublic
		TArray<class UWorldBuildingActivity*>                        CivilianCowerActivities;                                 // 0x15E8(0x0010) Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		float                                                        CivilianCowerActivityDuration;                           // 0x15F8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0016[0x14];                                  // 0x15FC(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AAIFactionManager*                                     FactionManager;                                          // 0x1610(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0017[0xE0];                                  // 0x1618(0x00E0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ECombatState                                                 CombatState;                                             // 0x16F8(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0018[0x7];                                   // 0x16F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReadyOrNotCharacter*                                  RecentMeleeVictim;                                       // 0x1700(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHasEverShot;                                            // 0x1708(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0019[0x7];                                   // 0x1709(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnWeaponForceFire_FromAnimNotify;                        // 0x1710(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0020[0xF];                                   // 0x1711(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnDoorShotgunBreach_FromAnimNotify;                      // 0x1720(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0021[0xF];                                   // 0x1721(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnDoorKickBreach_FromAnimNotify;                         // 0x1730(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0022[0xF];                                   // 0x1731(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnPendingItemThrown_FromAnimNotify;                      // 0x1740(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0023[0xF];                                   // 0x1741(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class ABaseItem*                                             PendingThrownItem;                                       // 0x1750(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               OnAIFire;                                                // 0x1758(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0024[0xF];                                   // 0x1759(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnCollectPendingEvidenceBegin_FromAnimNotify;            // 0x1768(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0025[0xF];                                   // 0x1769(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnCollectPendingEvidenceEnd_FromAnimNotify;              // 0x1778(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0026[0xF];                                   // 0x1779(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0027[0x8];                                   // 0x1788(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnHeardOfficerYell;                                      // 0x1790(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0028[0xF];                                   // 0x1791(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnExitedSurrender;                                       // 0x17A0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0029[0xF];                                   // 0x17A1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0030[0x4];                                   // 0x17B0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        SuppressionAmount;                                       // 0x17B4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ACyberneticCharacter*                                  BeingRestrainedBy;                                       // 0x17B8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UScoringComponent*                                     ScoringComponent;                                        // 0x17C0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAIDataLookupTable                                    AssignedAIData;                                          // 0x17C8(0x0380) BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic
		class AAISpawn*                                              SpawnedFromSpawner;                                      // 0x1B48(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  SpawnLocation;                                           // 0x1B50(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0031[0x4];                                   // 0x1B5C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAIArchetypeData*                                      DefaultSuspectArchetype;                                 // 0x1B60(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAIArchetypeData*                                      DefaultCivilianArchetype;                                // 0x1B68(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FActivityRouteCollection                              ActivityRouteCollection;                                 // 0x1B70(0x0030) Edit, d.e.o.tate, EditConst, NativeAccessSpecifierPublic
		struct FVector                                  Rep_AimOffsetFocalPoint;                                 // 0x1BA0(0x000C) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  Rep_FocalPoint;                                          // 0x1BAC(0x000C) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  Rep_HeadFocalPoint;                                      // 0x1BB8(0x000C) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0032[0x4];                                   // 0x1BC4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                                Rep_FocalActor;                                          // 0x1BC8(0x0008) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHeardYellFromOfficer : 1;                               // 0x1BD0(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0033[0x3];                                   // 0x1BD1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        TimeSinceHeardOfficerYell;                               // 0x1BD4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0034[0x4];                                   // 0x1BD8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        ArrestedTime;                                            // 0x1BDC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bFemale;                                                 // 0x1BE0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bChild;                                                  // 0x1BE1(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0035[0x6];                                   // 0x1BE2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                          LastGetUpMontage;                                        // 0x1BE8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRecoveringFromRagdoll : 1;                              // 0x1BF0(0x0001) BIT_FIELD Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsKnockedOut : 1;                                       // 0x1BF0(0x0001) BIT_FIELD Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsPlayingDead : 1;                                      // 0x1BF0(0x0001) BIT_FIELD Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0036[0xF];                                   // 0x1BF1(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UReadyOrNotCharacterAnimData*                          Unarmed_Calm_AD;                                         // 0x1C00(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReadyOrNotCharacterAnimData*                          Unarmed_Sr_AD;                                           // 0x1C08(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReadyOrNotCharacterAnimData*                          Unarmed_Ar_AD;                                           // 0x1C10(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReadyOrNotCharacterAnimData*                          Unarmed_Ar_Crouch_AD;                                    // 0x1C18(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReadyOrNotCharacterAnimData*                          Unarmed_Alert_AD;                                        // 0x1C20(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReadyOrNotCharacterAnimData*                          Rifle_AD;                                                // 0x1C28(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReadyOrNotCharacterAnimData*                          Pistol_AD;                                               // 0x1C30(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReadyOrNotCharacterAnimData*                          Pistol_OneHanded_AD;                                     // 0x1C38(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAIMoveDataBlock                                      MoveDataOverride;                                        // 0x1C40(0x0098) NativeAccessSpecifierPublic
		struct FAIMoveDataBlock                                      CurMoveDataBlock;                                        // 0x1CD8(0x0098) Edit, NativeAccessSpecifierPublic
		struct FAIMovementStyleData                                  MovementStyleData;                                       // 0x1D70(0x0040) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                  MoveStyleOverrideName;                                   // 0x1DB0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        Stress;                                                  // 0x1DB8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        StartingStress;                                          // 0x1DBC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TimeSinceLastShot;                                       // 0x1DC0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TimeSinceArrest;                                         // 0x1DC4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHasPlayedSurrenderAnim;                                 // 0x1DC8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsFakeSurrender;                                        // 0x1DC9(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHasEverFakeSurrendered;                                 // 0x1DCA(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bFinishedEquippingLoadout;                               // 0x1DCB(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bFinishedEquippingArmour;                                // 0x1DCC(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bForceFiringEnabled;                                     // 0x1DCD(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0037[0x2];                                   // 0x1DCE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCharacterMesh                                        CharacterMeshData;                                       // 0x1DD0(0x0070) Net, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0038[0x8];                                   // 0x1E40(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnAimedAt;                                               // 0x1E48(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0039[0xF];                                   // 0x1E49(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0040[0x4];                                   // 0x1E58(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bHitScannedFriendly : 1;                                 // 0x1E5C(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHasDamagedSWATTeam : 1;                                 // 0x1E5C(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDrawingWeapon : 1;                                      // 0x1E5C(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bPickingUpWeapon : 1;                                    // 0x1E5C(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsFleeing : 1;                                          // 0x1E5C(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHasEverAimedAtTarget : 1;                               // 0x1E5C(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAimingAtTarget : 1;                                     // 0x1E5C(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsExitingLandmark : 1;                                  // 0x1E5C(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDiedWhilstTraversingHole : 1;                           // 0x1E5D(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDiedWhilstHiding : 1;                                   // 0x1E5D(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsRaisingWeapon : 1;                                    // 0x1E5D(0x0001) BIT_FIELD Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsLoweringWeapon : 1;                                   // 0x1E5D(0x0001) BIT_FIELD Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0041[0x2];                                   // 0x1E5E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        DrawingWeaponTime;                                       // 0x1E60(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        PickingUpWeaponTime;                                     // 0x1E64(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RaisingWeaponTime;                                       // 0x1E68(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LoweringWeaponTime;                                      // 0x1E6C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FHitResult                                            CachedHitScanResult;                                     // 0x1E70(0x0088) BlueprintVisible, BlueprintReadOnly, Net, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FWorldBuildingAnimState                               Rep_WorldBuildingAnimState;                              // 0x1EF8(0x0010) BlueprintVisible, Net, NoDestructor, NativeAccessSpecifierPublic
		struct FTakeHostageAnimState                                 Rep_TakeHostageAnimState;                                // 0x1F08(0x0018) BlueprintVisible, Net, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0042[0x8];                                   // 0x1F20(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                         HostageMasterIdleLoop;                                   // 0x1F28(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                         HostageSlaveIdleLoop;                                    // 0x1F30(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ACyberneticCharacter*                                  TakenHostageBy;                                          // 0x1F38(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0043[0x14];                                  // 0x1F40(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        TimeSurrendered;                                         // 0x1F54(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bIsWaiting : 1;                                          // 0x1F58(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bIsComplying : 1;                                        // 0x1F58(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0044[0x3];                                   // 0x1F59(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        PepperSprayAbuseLevel;                                   // 0x1F5C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        TimeSinceLastTasered;                                    // 0x1F60(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                      TimesTasered;                                            // 0x1F64(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                  RagdollMeshLocation;                                     // 0x1F68(0x000C) Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FRotator                                 RagdollMeshRotation;                                     // 0x1F74(0x000C) Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0045[0x30];                                  // 0x1F80(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        FocalPointInterpSpeed;                                   // 0x1FB0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ActorRotationInterpStandingSpeed;                        // 0x1FB4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ActorRotationInterpMovingSpeed;                          // 0x1FB8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        AimOffsetInterpSpeed;                                    // 0x1FBC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		bool WasRecentlyYelledAt(float Seconds);
		void UpdateDefaultMoveStyle();
		bool SurrenderExit(ESurrenderExitType ExitType, const struct FVector& FocalPoint);
		void Surrender();
		void StopPlayingDead();
		void PlayShootingWeaponConversation();
		bool PlayMontageWithFocalPoint(class UAnimMontage* Montage, const struct FVector& FocalPoint);
		class UAnimMontage* PlayMontageFromTableWithIndexWithFocalPoint(const class FString& Animation, int32_t Index, const struct FVector& FocalPoint);
		class UAnimMontage* PlayMontageFromTableWithFocalPoint(const class FString& Animation, const struct FVector& FocalPoint);
		void PlayDead(float Duration, bool bPlayVO);
		void PlayBarkOrStartConversation(const class FString& SpeechRow, bool bHasSharedCooldown, float Cooldown);
		void OnWeaponForceFireNotifyEvent__DelegateSignature();
		void OnSpottedCharacter__DelegateSignature(class ACyberneticCharacter* Spotter, class AReadyOrNotCharacter* Character);
		void OnSensedCharacter__DelegateSignature(class AReadyOrNotCharacter* Character);
		void OnSensedActor__DelegateSignature(class AActor* Actor);
		void OnRep_SimulatingAttachedStaticMeshes();
		void OnRep_CharacterMeshData();
		void OnRep_AttachedSkeletalMeshData();
		void OnRep_AttachedMeshData();
		void OnOfficerShouted(class AReadyOrNotCharacter* Shouter, bool bLOS);
		void OnHeardOfficerYellSignature__DelegateSignature(class AReadyOrNotCharacter* Shouter, bool bLOS);
		void OnGetupAfterRagdollComplete();
		void OnExitedSurrender__DelegateSignature(ESurrenderExitType ExitType);
		void OnDoorBreachNotifyEvent__DelegateSignature();
		void OnCollectPendingEvidenceNotify__DelegateSignature();
		void OnAimedAt__DelegateSignature(class ACyberneticCharacter* Character, class AReadyOrNotCharacter* Target);
		void OnAIFire__DelegateSignature(class ACyberneticCharacter* AICharacter, class ABaseMagazineWeapon* MagazineWeapon, const struct FVector& fireDirection);
		void Multicast_SendCharacterMeshData(const struct FCharacterMesh& RPC_CharacterMeshData);
		void Multicast_PlayArmourHitEffects(class ABaseArmour* Armour, const struct FHitResult& Hit);
		void Knockout(float Duration, bool bPlayVO);
		bool IsWearingHeadArmor();
		bool IsWearingExplosiveVest();
		bool IsUnjustifiedUseOfForce(class AReadyOrNotCharacter* Aggressor, class ABaseItem* ForceWeapon, class UDamageType* ForceUsed);
		bool IsTakingHostage();
		bool IsTakingCoverAtLandmark();
		bool IsTakingCover();
		bool IsRaisingWeapon();
		bool IsPlayingStunAnimation();
		bool IsPlayingDead();
		bool IsMovingToLandmarkCover();
		bool IsMovingToCover();
		bool IsLoweringWeapon();
		bool IsHesitatingFor(float Seconds);
		bool IsHesitating();
		bool IsFiringFromCover();
		bool IsExitingSurrender();
		bool IsEndingHostageTake();
		bool IsDamagedByLethal();
		bool IsDamagedByLessLethal();
		bool IsBeingTakenHostage();
		bool IsBeginningHostageTake();
		bool IsArrestCapable(class APlayerCharacter* PlayerCharacter);
		bool IsActiveForCombat();
		void IncreaseStress(float Amount);
		bool HasDamagedSWAT();
		float GetVisibleSWATPercentage();
		float GetHesitationTime();
		struct FVector GetFocalPoint();
		class ABaseMagazineWeapon* GetEquippedWeapon();
		TArray<struct FDebugData> GetDebugInfoOnROE();
		class ACyberneticController* GetCyberneticsController();
		class ABaseArmour* GetArmour();
		class UAIArchetypeData* GetAIArchetype();
		void ForceFireGun(float Chance);
		void FakeSurrender();
		void DrawWeapon();
		ESurrenderExitType DetermineSurrenderExitType();
		void DecreaseStress(float Amount);
		bool CanExitSurrender();
		struct FVector CalculateGetupPosition();
		void AIFinishedSpawningDelegate__DelegateSignature();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CoverQueryResultInterface
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class ICoverQueryResultInterface : public IInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.EvidenceActor
	 * Size -> 0x0038 (FullSize[0x02C0] - InheritedSize[0x0288])
	 */
	class AEvidenceActor : public APickupActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x0288(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UScoringComponent*                                     ScoringComponent;                                        // 0x0298(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FString                                                EvidenceName;                                            // 0x02A0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bEvidenceExtracted : 1;                                  // 0x02B0(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EEvidenceActorState                                          PreviousEvidenceState;                                   // 0x02B1(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EEvidenceActorState                                          EvidenceState;                                           // 0x02B2(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bIsBeingCollected;                                       // 0x02B3(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        CurrentCollectionTime;                                   // 0x02B4(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MaxCollectionTime;                                       // 0x02B8(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bInteractHeld : 1;                                       // 0x02BC(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x02BD(0x0003) MISSED OFFSET (PADDING)

	public:
		void UpdateEvidenceCollection_COOP(float DeltaTime);
		void StartExtractingEvidence();
		void OnRep_EvidenceStateChanged();
		class FString GetEvidenceName();
		void FinishExtractingEvidence();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.FreeArrestedActivity
	 * Size -> 0x0010 (FullSize[0x0208] - InheritedSize[0x01F8])
	 */
	class UFreeArrestedActivity : public UBaseActivity
	{
	public:
		class APlayerCharacter*                                      Target;                                                  // 0x01F8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0200(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DynamicWorldActor
	 * Size -> 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
	 */
	class ADynamicWorldActor : public AActor
	{
	public:
		class FName                                                  DynamicLabel;                                            // 0x0220(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bReplicateSpawn;                                         // 0x0228(0x0001) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0229(0x0007) MISSED OFFSET (PADDING)

	public:
		void SetDynamicSpawn(bool bShouldSpawn);
		void OnRep_ReplicateSpawn();
		void OnDynamicallySpawned();
		void CheckDynamicSpawn();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DoorNavLink
	 * Size -> 0x0000 (FullSize[0x0190] - InheritedSize[0x0190])
	 */
	class UDoorNavLink : public UNavLinkCustomComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.EvidenceExtractionDevice
	 * Size -> 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
	 */
	class AEvidenceExtractionDevice : public AActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMeshComponent*                                  StaticMeshComponent;                                     // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractableComponent*                                InteractableComponent;                                   // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        EvidenceExtractionTime;                                  // 0x0238(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x023C(0x0004) MISSED OFFSET (PADDING)

	public:
		void TryExtractEvidence(class APlayerCharacter* EvidencePossessor);
		bool IsExtracting();
		bool HasEvidenceToExtract();
		bool CanStartExtraction();
		bool CanCollectEvidence();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CivilianCharacter
	 * Size -> 0x0000 (FullSize[0x1FC0] - InheritedSize[0x1FC0])
	 */
	class ACivilianCharacter : public ACyberneticCharacter
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DoorwayComponent
	 * Size -> 0x0008 (FullSize[0x0480] - InheritedSize[0x0478])
	 */
	class UDoorwayComponent : public UBoxComponent
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0478(0x0008) Fix Super Size

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.EvidenceExtractionDevice_Incrim
	 * Size -> 0x0028 (FullSize[0x0268] - InheritedSize[0x0240])
	 */
	class AEvidenceExtractionDevice_Incrim : public AEvidenceExtractionDevice
	{
	public:
		class UObjectiveMarkerComponent*                             ObjectiveMarkerComponent;                                // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UObjectiveMarkerComponent*                             ObjectiveMarkerComponent_WayPoint;                       // 0x0248(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMapActorComponent*                                    MapActorComponent;                                       // 0x0250(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FString                                                MapSectionName;                                          // 0x0258(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.FleeingCombatMove
	 * Size -> 0x0040 (FullSize[0x0258] - InheritedSize[0x0218])
	 */
	class UFleeingCombatMove : public UBaseCombatMoveActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0218(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AThreatAwarenessActor*>                         UsedFleePoints;                                          // 0x0220(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class AThreatAwarenessActor*>                         LastExitPoints;                                          // 0x0230(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		class AThreatAwarenessActor*                                 LastFleePoint;                                           // 0x0240(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x10];                                  // 0x0248(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.GibComponent
	 * Size -> 0x0070 (FullSize[0x0120] - InheritedSize[0x00B0])
	 */
	class UGibComponent : public UActorComponent
	{
	public:
		unsigned char                                                UnknownData_0000[0x18];                                  // 0x00B0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EGibAreas>                                            GibbedAreas;                                             // 0x00C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, Protected, NativeAccessSpecifierProtected
		class UBloodData*                                            BloodData;                                               // 0x00D8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USkeletalMeshComponent*                                BodyMesh;                                                // 0x00E0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USkeletalMeshComponent*                                FaceMesh;                                                // 0x00E8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UStaticMesh*                                           GibHead;                                                 // 0x00F0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UStaticMesh*                                           GibArms;                                                 // 0x00F8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UStaticMesh*                                           GibLegs;                                                 // 0x0100(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UStaticMesh*                                           BoneHead;                                                // 0x0108(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UStaticMesh*                                           BoneArms;                                                // 0x0110(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UStaticMesh*                                           BoneLegs;                                                // 0x0118(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.FlashbangDamageType
	 * Size -> 0x0000 (FullSize[0x0620] - InheritedSize[0x0620])
	 */
	class UFlashbangDamageType : public UStunDamage
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.FreeMode
	 * Size -> 0x0010 (FullSize[0x0760] - InheritedSize[0x0750])
	 */
	class AFreeMode : public AReadyOrNotGameMode
	{
	public:
		float                                                        RespawnTime;                                             // 0x0750(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xC];                                   // 0x0754(0x000C) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CivilianCombatActivity
	 * Size -> 0x0008 (FullSize[0x02F8] - InheritedSize[0x02F0])
	 */
	class UCivilianCombatActivity : public UBaseCombatActivity
	{
	public:
		class UCivilianFleeCombatMove*                               CivilianFleeCombatMove;                                  // 0x02F0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Headwear
	 * Size -> 0x0B30 (FullSize[0x1468] - InheritedSize[0x0938])
	 */
	class AHeadwear : public ABaseArmour
	{
	public:
		unsigned char                                                UnknownData_0006[0x4];                                   // 0x0938(0x0004) Fix Super Size
		float                                                        DamageReduction;                                         // 0x093C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RicochetChance;                                          // 0x0940(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x0944(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            RicochetEvent;                                           // 0x0948(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bProtectsAgainstInstantKnockout;                         // 0x0950(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bUseMaskVoiceFilter;                                     // 0x0951(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x6];                                   // 0x0952(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            VoiceLineEventOverrideSpatalized;                        // 0x0958(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODEvent*                                            VoiceLineEventOverrideLocal;                             // 0x0960(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUserWidget*                                           MaskOverlay;                                             // 0x0968(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bEnablePostProcess;                                      // 0x0970(0x0001) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0xF];                                   // 0x0971(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPostProcessSettings                                  MaskPostProcess;                                         // 0x0980(0x0560) Edit, d.e.o.i, Protected, NativeAccessSpecifierProtected
		struct FPostProcessSettings                                  MaskSupressionPostProcess;                               // 0x0EE0(0x0560) Edit, d.e.o.i, Protected, NativeAccessSpecifierProtected
		bool                                                         bOverrideBreathingSound;                                 // 0x1440(0x0001) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0003[0x7];                                   // 0x1441(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class USoundCue*>                                     OverriddenBreathingSounds;                               // 0x1448(0x0010) Edit, ZeroConstructor, d.e.o.i, Protected, NativeAccessSpecifierProtected
		float                                                        GapBetweenBreaths;                                       // 0x1458(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bSpawnedOverlay;                                         // 0x145C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0004[0x3];                                   // 0x145D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UUserWidget*                                           SpawnedMaskOverlay;                                      // 0x1460(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DynamicReportable
	 * Size -> 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
	 */
	class ADynamicReportable : public ADynamicWorldActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                DesiredTocReport;                                        // 0x0238(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bReportedToToc;                                          // 0x0248(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x0249(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.EvidenceSpawnPoint
	 * Size -> 0x0018 (FullSize[0x0250] - InheritedSize[0x0238])
	 */
	class AEvidenceSpawnPoint : public AActorSpawnPoint
	{
	public:
		class AEvidenceActor*                                        EvidenceActorClass;                                      // 0x0238(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ASplineTrigger_Incrimination*                          EvidenceSearchArea;                                      // 0x0240(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ABuildingTrigger_Incrimination*                        EvidenceBuilding;                                        // 0x0248(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.FriendsList
	 * Size -> 0x0040 (FullSize[0x02A0] - InheritedSize[0x0260])
	 */
	class UFriendsList : public UUserWidget
	{
	public:
		class UMulticastInlineDelegate                               OnSuccess;                                               // 0x0260(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xF];                                   // 0x0261(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnFailure;                                               // 0x0270(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xF];                                   // 0x0271(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TArray<struct FFriend>                                       FriendsList;                                             // 0x0280(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x10];                                  // 0x0290(0x0010) MISSED OFFSET (PADDING)

	public:
		void OnFriendsListUpdated__DelegateSignature();
		void GetFriendsList();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DoorPointComponent
	 * Size -> 0x0010 (FullSize[0x0480] - InheritedSize[0x0470])
	 */
	class UDoorPointComponent : public UBillboardComponent
	{
	public:
		bool                                                         bFront;                                                  // 0x0470(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bPIEMidLocation;                                         // 0x0471(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bPIEEndLocation;                                         // 0x0472(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bStackUp;                                                // 0x0473(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bClear;                                                  // 0x0474(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bMidpoint;                                               // 0x0475(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x2];                                   // 0x0476(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      Position;                                                // 0x0478(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAlternate;                                              // 0x047C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bGrenadeLauncher;                                        // 0x047D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bGrenadeThrow;                                           // 0x047E(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDoorInteractionPoint;                                   // 0x047F(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.GameplayConfig
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UGameplayConfig : public UObject
	{
	public:
		void ReloadConfig();
		struct FVector2D GetVector2D(const class FString& ConfigKey, const struct FVector2D& FallbackValue);
		struct FVector GetVector(const class FString& ConfigKey, const struct FVector& FallbackValue);
		TArray<class FString> GetStringArray_SingleLine(const class FString& ConfigKey, TArray<class FString> FallbackValue);
		TArray<class FString> GetStringArray(const class FString& ConfigKey, TArray<class FString> FallbackValue);
		class FString GetString(const class FString& ConfigKey, const class FString& FallbackValue);
		int32_t GetInt(const class FString& ConfigKey, int32_t FallbackValue);
		float GetFloat(const class FString& ConfigKey, float FallbackValue);
		bool GetBool(const class FString& ConfigKey, bool FallbackValue);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.IncriminationGM
	 * Size -> 0x0020 (FullSize[0x07D0] - InheritedSize[0x07B0])
	 */
	class AIncriminationGM : public AReadyOrNotGameMode_PVP
	{
	public:
		uint8_t                                                      MaxCluesToFind;                                          // 0x07B0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x07B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASpawnGenerator*                                       ChosenSpawnGroup_BlueTeam;                               // 0x07B8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ASpawnGenerator*                                       ChosenSpawnGroup_RedTeam;                                // 0x07C0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x07C8(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnEvidencePickedUp(class AActor* PickupActor);
		void OnEvidenceDropped(class AActor* DropActor);
		void OnClueFound(class AIncriminationClue* ClueActor, class AActor* ClueFounder);
		bool HasVisitedAllEvidenceSpawns();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.HealthStatusWidget
	 * Size -> 0x0140 (FullSize[0x03A0] - InheritedSize[0x0260])
	 */
	class UHealthStatusWidget : public UUserWidget
	{
	public:
		class UImage*                                                Icon_Image;                                              // 0x0260(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                            Percentage_Text;                                         // 0x0268(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FSlateBrush                                           HealthIconBrush;                                         // 0x0270(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected
		struct FSlateBrush                                           EmptyHealthIconBrush;                                    // 0x02F8(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected
		struct FLinearColor                                          ZeroPercentColor;                                        // 0x0380(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          OneHundredPercentColor;                                  // 0x0390(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void UpdateIconColor(float CurrentValue, float MinValue, float MaxValue);
		void UpdateHealthPercentage(float CurrentValue, float MaxValue);
		void AutoDetermineIconImage();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PVPTriggerBox
	 * Size -> 0x0068 (FullSize[0x0290] - InheritedSize[0x0228])
	 */
	class APVPTriggerBox : public ATriggerBox
	{
	public:
		class UTextRenderComponent*                                  TextRender;                                              // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UObjectiveMarkerComponent*                             ObjectiveMarkerComponent;                                // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class APlayerCharacter*>                              CharactersInTriggerBox;                                  // 0x0238(0x0010) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected
		float                                                        TimeElapsed;                                             // 0x0248(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        PreviousTimeElapsed;                                     // 0x024C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bEntered : 1;                                            // 0x0250(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x0251(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        TimeNeededToStay_Editor;                                 // 0x0254(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        TimeNeededToStay;                                        // 0x0258(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        TimeNeededToStay_Active;                                 // 0x025C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<ETeamType>                                            OnlyAcceptTeams;                                         // 0x0260(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class FName>                                          OnlyAcceptActorsWithTags;                                // 0x0270(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		bool                                                         bLogDebugInfo : 1;                                       // 0x0280(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x0281(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                          TH_TimerEventExpiry;                                     // 0x0288(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void ToggleObjectiveMarker();
		void StartTimerEvent();
		void ShowObjectiveMarker();
		void ResumeTimerEvent();
		void PauseTimerEvent();
		void OnTimerExpired();
		void OnRep_CharactersInTriggerBoxUpdated();
		void OnEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
		void OnBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
		bool IsPlayerOnAcceptedTeam(class APlayerCharacter* Player);
		bool IsActorInTriggerBox(class AActor* InActor);
		void HideObjectiveMarker();
		float GetLastElapsedTime();
		float GetCurrentElapsedTime();
		bool DoesActorHaveAnyAcceptedTags(class AActor* OtherActor);
		void CancelTimerEvent();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.UnmannedVehicle
	 * Size -> 0x0048 (FullSize[0x02C8] - InheritedSize[0x0280])
	 */
	class AUnmannedVehicle : public APawn
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0280(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerCharacter*                                      Pilot;                                                   // 0x0288(0x0008) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        Health;                                                  // 0x0290(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bDead;                                                   // 0x0294(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x0295(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MaxHealth;                                               // 0x0298(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x029C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                  VehicleTabletName;                                       // 0x02A0(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class AHUD*                                                  PreviousHUD;                                             // 0x02B8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AHUD*                                                  VehicleHUD;                                              // 0x02C0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		float TakeDamage(float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
		void Server_StopPiloting(class AReadyOrNotPlayerController* CallingController);
		void Server_StartPiloting(class AReadyOrNotPlayerController* NewController);
		void OnDeath(class AController* EventInstigator, class AActor* DamageCauser);
		bool IsAlive();
		void HideActorsForTabletView(class USceneCaptureComponent2D* Component);
		ETeamType GetTabletViewTeamColor();
		class USceneComponent* GetTabletViewComponent();
		class FText GetTabletNameText();
		class APlayerCharacter* GetPilot();
		float GetHealth();
		void Die(class AController* EventInstigator, class AActor* DamageCauser);
		bool CanTabletViewMe(class APlayerCharacter* TabletOwner, class AReadyOrNotGameState* GameState);
		bool CanControlWithTablet(class APlayerCharacter* TabletOwner);
		void AssumeTabletControl(class APlayerCharacter* TabletOwner);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DoorRam
	 * Size -> 0x00C8 (FullSize[0x0990] - InheritedSize[0x08C8])
	 */
	class ADoorRam : public ABaseDeployableGear
	{
	public:
		TArray<class AActor*>                                        AcceptableHitWhitelist;                                  // 0x08C8(0x0010) Edit, ZeroConstructor, d.e.o.i, UObjectWrapper, NativeAccessSpecifierPublic
		float                                                        MaxHitDistance;                                          // 0x08D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x08DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDamageType*                                           RamDamageTypeDefault;                                    // 0x08E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDamageType*                                           RamDamageTypeCrumble;                                    // 0x08E8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDamageType*                                           RamDamageTypePlayer;                                     // 0x08F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        StrikePlayerDamage;                                      // 0x08F8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FHitResult                                            LastGoodHit;                                             // 0x08FC(0x0088) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0xC];                                   // 0x0984(0x000C) MISSED OFFSET (PADDING)

	public:
		struct FHitResult TryGetHitPosition();
		void Server_StrikePlayer(class APlayerCharacter* TargetPlayer);
		void Server_StrikeDoor(class ADoor* TargetDoor);
		void OnBatteringRamHit();
		bool CanHitActor(const struct FHitResult& TestHit);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.HesitateActivity
	 * Size -> 0x0008 (FullSize[0x0200] - InheritedSize[0x01F8])
	 */
	class UHesitateActivity : public UBaseActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x01F8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.GameplayManager
	 * Size -> 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
	 */
	class AGameplayManager : public AActor
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ExplosionGibs
	 * Size -> 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
	 */
	class AExplosionGibs : public AActor
	{
	public:
		class UBloodData*                                            BloodData;                                               // 0x0220(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void SpawnBloodDecal(const struct FHitResult& Hit);
		void SetupGibsForSkeletalMesh(class USkeletalMeshComponent* Mesh);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.GatherDebugInterface
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IGatherDebugInterface : public IInterface
	{
	public:
		void GatherDebugText(class FString* OutText);
		void GatherDebugData(TArray<struct FDebugData>* OutDebugData);
		void DrawVisualDebug();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DynamicWorldItem
	 * Size -> 0x0038 (FullSize[0x0258] - InheritedSize[0x0220])
	 */
	class ADynamicWorldItem : public AActor
	{
	public:
		class UStaticMeshComponent*                                  ItemMesh;                                                // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystemComponent*                              ImpactParticle;                                          // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODAudioComponent*                                   ImpactAudioFMOD;                                         // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UStaticMesh*                                           PostImpactMesh;                                          // 0x0238(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMaterialInterface*                                    PostImpactMaterial;                                      // 0x0240(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMaterialInterface*                                    PhysicsImpactDecal;                                      // 0x0248(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        PhysicsImpactDecalScale;                                 // 0x0250(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bItemDestroyed;                                          // 0x0254(0x0001) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x0255(0x0003) MISSED OFFSET (PADDING)

	public:
		void OnRep_ItemDestroyed();
		void OnItemDestroyed();
		void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		void Multicast_DestroyItem();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.GetFriendlyName
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IGetFriendlyName : public IInterface
	{
	public:
		class FString GetFriendlyName();
		class UTexture2D* GetFriendlyIcon();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.FMODAudioPropagationComponent
	 * Size -> 0x0040 (FullSize[0x03B0] - InheritedSize[0x0370])
	 */
	class UFMODAudioPropagationComponent : public UFMODAudioComponent
	{
	public:
		unsigned char                                                UnknownData_0000[0x18];                                  // 0x0370(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                  AudioPlayLocation;                                       // 0x0388(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        volumeToSet;                                             // 0x0394(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        silentDistance;                                          // 0x0398(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        OcclusionAmount;                                         // 0x039C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        tickRate;                                                // 0x03A0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MinDistance;                                             // 0x03A4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bPlayPropagation;                                        // 0x03A8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x03A9(0x0007) MISSED OFFSET (PADDING)

	public:
		bool UpdateAudioPropagation();
		void PlayEventAttached(class UFMODEvent* EventToPlay, class USceneComponent* CompToAttach, const class FName& AttachPoint, TArray<struct FMODParam> Params);
		void PlayEvent(class UFMODEvent* EventToPlay, const struct FVector& Origin, TArray<struct FMODParam> Params);
		void CheckOcclusion();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.IncriminationGS
	 * Size -> 0x00D8 (FullSize[0x0AB0] - InheritedSize[0x09D8])
	 */
	class AIncriminationGS : public AReadyOrNotGameState
	{
	public:
		class UMulticastInlineDelegate                               OnIntelStateChanged;                                     // 0x09D8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xF];                                   // 0x09D9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnIntelSearchAreaChosen;                                 // 0x09E8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xF];                                   // 0x09E9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnIntelBuildingChosen;                                   // 0x09F8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0xF];                                   // 0x09F9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnActiveClueChanged;                                     // 0x0A08(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0xF];                                   // 0x0A09(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnPreviousActiveClueChanged;                             // 0x0A18(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0xF];                                   // 0x0A19(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnCluesChanged;                                          // 0x0A28(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0xF];                                   // 0x0A29(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class AEvidenceSpawnPoint*                                   ChosenEvidenceSpawn;                                     // 0x0A38(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AEvidenceActor*                                        ChosenEvidenceActor;                                     // 0x0A40(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AEvidenceExtractionDevice_Incrim*                      ChosenExtractionDevice;                                  // 0x0A48(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AIncriminationClue*>                            Clues;                                                   // 0x0A50(0x0010) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic
		TArray<class AIncriminationClueSpawnPoint*>                  ClueSpawnPoints;                                         // 0x0A60(0x0010) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NativeAccessSpecifierPublic
		class AIncriminationClue*                                    ActiveClue;                                              // 0x0A70(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AIncriminationClue*                                    PreviousActiveClue;                                      // 0x0A78(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ASplineTrigger_Incrimination*                          ChosenEvidenceSearchArea;                                // 0x0A80(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ABuildingTrigger_Incrimination*                        ChosenEvidenceBuilding;                                  // 0x0A88(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ASplineTrigger_Incrimination*>                  NonMainIntelSearchZones;                                 // 0x0A90(0x0010) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NativeAccessSpecifierPublic
		class AEvidenceExtractionDevice*                             CurrentExtractionDevice;                                 // 0x0AA0(0x0008) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETeamType                                                    PickupTeam;                                              // 0x0AA8(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEvidenceActorState                                          IntelState;                                              // 0x0AA9(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIntelExtracted;                                         // 0x0AAA(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x5];                                   // 0x0AAB(0x0005) MISSED OFFSET (PADDING)

	public:
		void OnRep_OnPreviousActiveClueChanged();
		void OnRep_OnIntelStateChanged();
		void OnRep_OnIntelSearchAreaChosen();
		void OnRep_OnIntelBuildingChosen();
		void OnRep_OnCluesChanged();
		void OnRep_OnActiveClueChanged();
		void OnEvidenceSearchAreaChosen__DelegateSignature(class ASplineTrigger_Incrimination* EvidenceSearchArea);
		void OnEvidenceBuildingChosen__DelegateSignature(class ABuildingTrigger_Incrimination* EvidenceSearchArea);
		void OnEvidenceActorStateChanged__DelegateSignature(class AEvidenceActor* EvidenceActor, EEvidenceActorState NewEvidenceState, bool bExtracted);
		void OnCluesChanged__DelegateSignature(TArray<class AIncriminationClue*> Clues);
		void OnActiveClueChanged__DelegateSignature(class AIncriminationClue* ActiveClue);
		class AIncriminationClue* GetClue(int32_t ClueNumber, bool* bSuccess, bool bMustBeFound);
		TArray<class AIncriminationClue*> GetAllCluesOfNumber(int32_t ClueNumber);
		bool DoesPlayerPossessAnyClue(class APlayerCharacter* PlayerCharacter);
		bool AnyLowerCluesFound(int32_t ClueNumber);
		bool AnyHigherCluesFound(int32_t ClueNumber);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Drone
	 * Size -> 0x02E8 (FullSize[0x05B0] - InheritedSize[0x02C8])
	 */
	class ADrone : public AUnmannedVehicle
	{
	public:
		class UUserWidget*                                           DroneWidgetClass;                                        // 0x02C8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCurveFloat*                                           FPCameraRotationCurve;                                   // 0x02D0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FPCameraRotationResetSpeed;                              // 0x02D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x02DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveVector*                                          FPDamageCurve;                                           // 0x02E0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FPDamageSpeed;                                           // 0x02E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MaxPitchTilt;                                            // 0x02EC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MaxRollTilt;                                             // 0x02F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MaxRPM;                                                  // 0x02F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        IdleRPM;                                                 // 0x02F8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        RPMThrottleMultiplier;                                   // 0x02FC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        ThrottleInterpSpeed;                                     // 0x0300(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        RotationInterpSpeed;                                     // 0x0304(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        TurnSpeed;                                               // 0x0308(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        RotationInterpSpeedWhenSteady;                           // 0x030C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        TurnSpeedWhenSteady;                                     // 0x0310(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MinSpeed;                                                // 0x0314(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MaxSpeed;                                                // 0x0318(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        SpeedIncrementRate;                                      // 0x031C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TMap<EDroneDamageSpeed, float>                               DroneSpeedToDamageValues;                                // 0x0320(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		float                                                        InvincibilityTimeAfterDamageApplied;                     // 0x0370(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FRotator                                 RotorRotation;                                           // 0x0374(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		float                                                        RPM;                                                     // 0x0380(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        CurrentAltitude;                                         // 0x0384(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        CurrentPilotDistance;                                    // 0x0388(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x038C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct PCoreUObject_FTransform                               DroneTransform;                                          // 0x0390(0x0030) BlueprintVisible, BlueprintReadOnly, Net, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FRotator                                 TargetRotation;                                          // 0x03C0(0x000C) Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FRotator                                 TargetSteadyCameraRotation;                              // 0x03CC(0x000C) Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		bool                                                         bApplyingInput;                                          // 0x03D8(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bSteadyDrone;                                            // 0x03D9(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bDroneThirdPerson;                                       // 0x03DA(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x5];                                   // 0x03DB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWorld*                                                World;                                                   // 0x03E0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AReadyOrNotPlayerController*                           DroneController;                                         // 0x03E8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AReadyOrNotPlayerController*                           OriginalController;                                      // 0x03F0(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0003[0x20];                                  // 0x03F8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBoxComponent*                                         FlightBox;                                               // 0x0418(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USkeletalMeshComponent*                                Mesh;                                                    // 0x0420(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USphereComponent*                                      DetectionSphere;                                         // 0x0428(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UFloatingPawnMovement*                                 FloatingMovementComponent;                               // 0x0430(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USpringArmComponent*                                   TPCameraArm;                                             // 0x0438(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCameraComponent*                                      TPCamera;                                                // 0x0440(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAudioComponent*                                       Audio;                                                   // 0x0448(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCameraComponent*                                      FPCamera;                                                // 0x0450(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UUserWidget*                                           DroneWidgetHUD;                                          // 0x0458(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0004[0x150];                                 // 0x0460(0x0150) MISSED OFFSET (PADDING)

	public:
		void UpdatePilotingInfo();
		void ToggleThirdPerson();
		void Tick_CameraReset();
		void Tick_CameraDamage();
		void SteadyDrone();
		void Server_UpdateDrone(const struct PCoreUObject_FTransform& NewTransform, float InRPM);
		void RetrieveLastHitDamageInfo(EDroneDamageSpeed* InDroneDamageSpeed, float* InDamageAmount);
		void QuickTurn();
		void OnDroneHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		void OnDetectionSphereOverlapped(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		bool IsStabilized();
		bool IsSpeedThresholdMet(float InSpeedAsPercentage);
		bool IsMovingRight();
		bool IsMovingLeft();
		bool IsMovingForward();
		bool IsMovingBackward();
		bool IsMoving();
		bool IsInvincible();
		bool IsInThirdPersonMode();
		bool IsApplyingInput();
		void IncrementSpeed(float Value);
		bool HasPilot();
		float GetMinSpeed();
		float GetMaxSpeed();
		float GetMaxRPM();
		float GetIdleRPM();
		class AReadyOrNotPlayerController* GetDroneController();
		float GetDistanceToPilot();
		float GetCurrentSpeedAsPercentage();
		float GetCurrentRPM();
		struct FVector GetCurrentMovementDirection();
		float GetAltitude();
		void Finished_CameraDamage();
		void ExitDrone();
		void Client_UpdateDrone(const struct PCoreUObject_FTransform& NewTransform, float InRPM);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.FootstepComponent
	 * Size -> 0x00A0 (FullSize[0x0150] - InheritedSize[0x00B0])
	 */
	class UFootstepComponent : public UActorComponent
	{
	public:
		TArray<class FName>                                          FootNames;                                               // 0x00B0(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                         bDebugFootstepTrace;                                     // 0x00C0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x00C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        VelocityToMinVolume;                                     // 0x00C4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        VelocityMaxVolume;                                       // 0x00C8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShouldRattle;                                           // 0x00CC(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x00CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        FootstepVolumeMultiplier;                                // 0x00D0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x00D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USoundCue*                                             DefaultFootstepSound;                                    // 0x00D8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundAttenuation*                                     FootstepAttenuation;                                     // 0x00E0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundConcurrency*                                     FootstepConcurency;                                      // 0x00E8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAutoFootRotation;                                       // 0x00F0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bUseFootstepParticles;                                   // 0x00F1(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bUseFootstepSounds;                                      // 0x00F2(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x1];                                   // 0x00F3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        FootstepTraceLength;                                     // 0x00F4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FootstepThresholdTraceLength;                            // 0x00F8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bFootTraceComplex;                                       // 0x00FC(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x3];                                   // 0x00FD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        FootstepMinCycleInterval;                                // 0x0100(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FootstepTraceLengthThreshold;                            // 0x0104(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FootstepParticleScale;                                   // 0x0108(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x1C];                                  // 0x010C(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAudioComponent*                                       FootstepSoundComponent;                                  // 0x0128(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x20];                                  // 0x0130(0x0020) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.HidingCombatMove
	 * Size -> 0x0000 (FullSize[0x0218] - InheritedSize[0x0218])
	 */
	class UHidingCombatMove : public UBaseCombatMoveActivity
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Elevator
	 * Size -> 0x0068 (FullSize[0x0288] - InheritedSize[0x0220])
	 */
	class AElevator : public AActor
	{
	public:
		class USplineComponent*                                      ElevatorPath;                                            // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bMoveElevator;                                           // 0x0228(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCloseDoors;                                             // 0x0229(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x6];                                   // 0x022A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkeletalMeshComponent*                                ElevatorMesh;                                            // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODAudioComponent*                                   DestinationReachedSound;                                 // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODAudioComponent*                                   FloorReachedSound;                                       // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODAudioComponent*                                   DoorOpenSoundFMOD;                                       // 0x0248(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODAudioComponent*                                   DoorCloseSoundFMOD;                                      // 0x0250(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  DefaultElevatorLoc;                                      // 0x0258(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      Floors;                                                  // 0x0264(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ElevatorSpeed;                                           // 0x0268(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      CurrentFloor;                                            // 0x026C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MoveElevatorDelay;                                       // 0x0270(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x0274(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                          MoveElevatorDelay_Handle;                                // 0x0278(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      SelectedFloor;                                           // 0x0280(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x0284(0x0004) MISSED OFFSET (PADDING)

	public:
		void StartMovingElevator();
		void SetSelectedFloor(int32_t Floor);
		void Server_SetSelectedFloor(int32_t Floor);
		void Server_OpenCloseDoors(bool bShouldCloseDoors);
		void Multicast_PlayFloorReachedSound();
		void Multicast_PlayDoorOpenSound();
		void Multicast_PlayDoorCloseSound();
		void Multicast_PlayDestinationReachedSound();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.FootstepFoleyComponent
	 * Size -> 0x0018 (FullSize[0x0490] - InheritedSize[0x0478])
	 */
	class UFootstepFoleyComponent : public UBoxComponent
	{
	public:
		class UFMODEvent*                                            SetEventTo;                                              // 0x0478(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            SetEventToRemote;                                        // 0x0480(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bPlayOnPlayer;                                           // 0x0488(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bPlayEveryStep;                                          // 0x0489(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x6];                                   // 0x048A(0x0006) MISSED OFFSET (PADDING)

	public:
		void StoppedOverlapping(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void StartedOverlapping(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.IncriminationTriggerBox
	 * Size -> 0x0000 (FullSize[0x0290] - InheritedSize[0x0290])
	 */
	class AIncriminationTriggerBox : public APVPTriggerBox
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.HighgroundVolume
	 * Size -> 0x0070 (FullSize[0x0290] - InheritedSize[0x0220])
	 */
	class AHighgroundVolume : public AActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        AudioDebounce;                                           // 0x0228(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x022C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBoxComponent*                                         Bounds;                                                  // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAudioComponent*                                       AudioComp;                                               // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bWatching;                                               // 0x0240(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x3];                                   // 0x0241(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      SierraDesignation;                                       // 0x0244(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  VolumeLabel;                                             // 0x0248(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class USoundBase*>                                    ContactEnteredVolumeAudio;                               // 0x0250(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class USoundBase*>                                    ContactExitedVolumeAudio;                                // 0x0260(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class USoundBase*>                                    SwatEnteredVolumeAudio;                                  // 0x0270(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class USoundBase*>                                    SwatExitedVolumeAudio;                                   // 0x0280(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		void OnOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		void OnAudioFinished();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ExplosiveContainer
	 * Size -> 0x0058 (FullSize[0x0278] - InheritedSize[0x0220])
	 */
	class AExplosiveContainer : public AActor
	{
	public:
		class UStaticMeshComponent*                                  BaseMesh;                                                // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                              FireEffectParticle;                                      // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                              ExplosionEffectParticle;                                 // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODAudioComponent*                                   FMODFireAudioComponent;                                  // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x2];                                   // 0x0240(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bHideMeshAfterDetonation;                                // 0x0242(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x5];                                   // 0x0243(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialInterface*                                    ScorchDecal;                                             // 0x0248(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            FMODExplosionAudio;                                      // 0x0250(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStunDamage*                                           StunDamageType;                                          // 0x0258(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMatineeCameraShake*                                   ExplosionScreenShake;                                    // 0x0260(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AController*                                           ExplosionInstigator;                                     // 0x0268(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TimerUntilExplosionOnceTriggered;                        // 0x0270(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MinDamageToTrigger;                                      // 0x0274(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void Multicast_TriggerExplosive();
		void Multicast_PlayExplosionEffects();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.FootstepFoleyVolume
	 * Size -> 0x0018 (FullSize[0x0270] - InheritedSize[0x0258])
	 */
	class AFootstepFoleyVolume : public AVolume
	{
	public:
		class UFMODEvent*                                            FootstepFoleyEvent;                                      // 0x0258(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            FootstepFoleyEventFirstPerson;                           // 0x0260(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bNPCsTriggerFootstepFoley;                               // 0x0268(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0269(0x0007) MISSED OFFSET (PADDING)

	public:
		void OnOverlapEnd(class AActor* OverlappedActor, class AActor* OtherActor);
		void OnOverlapBegin(class AActor* OverlappedActor, class AActor* OtherActor);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DroneVehicle
	 * Size -> 0x0148 (FullSize[0x0410] - InheritedSize[0x02C8])
	 */
	class ADroneVehicle : public AUnmannedVehicle
	{
	public:
		class UBoxComponent*                                         FlightBox;                                               // 0x02C8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USkeletalMeshComponent*                                Mesh;                                                    // 0x02D0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAudioComponent*                                       Audio;                                                   // 0x02D8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCameraComponent*                                      FirstPersonCamera;                                       // 0x02E0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USpringArmComponent*                                   ThirdPersonSpringArm;                                    // 0x02E8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCameraComponent*                                      ThirdPersonCamera;                                       // 0x02F0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFloatingPawnMovement*                                 FloatingMovementComponent;                               // 0x02F8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MaxTilt;                                                 // 0x0300(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MaxRPM;                                                  // 0x0304(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        IdleRPM;                                                 // 0x0308(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RPMForceScale;                                           // 0x030C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RPMThrottleMultiplier;                                   // 0x0310(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ThrottleInterpSpeed;                                     // 0x0314(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RotationInterpSpeed;                                     // 0x0318(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TurnSpeed;                                               // 0x031C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RotationInterpSpeedWhenSteady;                           // 0x0320(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TurnSpeedWhenSteady;                                     // 0x0324(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MinSpeed;                                                // 0x0328(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MaxSpeed;                                                // 0x032C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SpeedIncrementRate;                                      // 0x0330(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        InvincibilityTimeAfterDamageApplied;                     // 0x0334(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RPM;                                                     // 0x0338(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                 RotorRotation;                                           // 0x033C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                        CurrentAltitude;                                         // 0x0348(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CurrentPilotDistance;                                    // 0x034C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct PCoreUObject_FTransform                               DroneTransform;                                          // 0x0350(0x0030) BlueprintVisible, BlueprintReadOnly, Net, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                 TargetRotation;                                          // 0x0380(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x34];                                  // 0x038C(0x0034) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bApplyingInput;                                          // 0x03C0(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSteadyDrone;                                            // 0x03C1(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x26];                                  // 0x03C2(0x0026) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerCharacter*                                      DroneOwner;                                              // 0x03E8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWorld*                                                World;                                                   // 0x03F0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x18];                                  // 0x03F8(0x0018) MISSED OFFSET (PADDING)

	public:
		void UpdatePilotingInfo();
		void Server_UpdateDroneTransform(const struct PCoreUObject_FTransform& NewTransform);
		void OnRep_DroneMovement();
		void OnDroneHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		void Drone_Yaw(float Val);
		void Drone_ToggleThirdPerson();
		void Drone_Throttle(float Val);
		void Drone_Steady();
		void Drone_Right(float Val);
		void Drone_QuickTurn();
		void Drone_MoveForward(float Val);
		void Drone_Exit();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.HoldActivity
	 * Size -> 0x0010 (FullSize[0x0238] - InheritedSize[0x0228])
	 */
	class UHoldActivity : public UTeamBaseActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x0228(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.InGameLogSubsystem
	 * Size -> 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
	 */
	class UInGameLogSubsystem : public UWorldSubsystem
	{
	public:
		class UMulticastInlineDelegate                               OnLogMessageEnqueued;                                    // 0x0030(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xF];                                   // 0x0031(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnLogMessageDequeued;                                    // 0x0040(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xF];                                   // 0x0041(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0002[0x20];                                  // 0x0050(0x0020) MISSED OFFSET (PADDING)

	public:
		void OnLogMessageEnqueued__DelegateSignature();
		void OnLogMessageDequeued__DelegateSignature();
		bool GetNextLogMessage_PVP(struct FInGameLogMessage_PVP* OutLogMessage);
		bool GetNextLogMessage(struct FInGameLogMessage* OutLogMessage);
		void EnqueuePVPMessages(TArray<struct FInGameLogMessage_PVP> InLogMessages);
		void EnqueuePVPMessage(const struct FInGameLogMessage_PVP& InLogMessage);
		void EnqueueLogMessages(TArray<struct FInGameLogMessage> InLogMessages);
		void EnqueueLogMessage(const struct FInGameLogMessage& InLogMessage);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.HostMigrationManager
	 * Size -> 0x0100 (FullSize[0x0128] - InheritedSize[0x0028])
	 */
	class UHostMigrationManager : public UObject
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x0028(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FHm_PlayerInformation>                         PlayerInformations;                                      // 0x0038(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<struct FHm_CyberneticsInformation>                    CyberneticsInformations;                                 // 0x0048(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<struct FHm_DoorInformation>                           DoorInformations;                                        // 0x0058(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<struct FHm_BombInformation>                           BombInformations;                                        // 0x0068(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<struct FHm_BaggedEvidence>                            BaggedEvidenceInformations;                              // 0x0078(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<struct FHm_DroppedEvidence>                           DroppedEvidenceInformations;                             // 0x0088(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<struct FHm_Objectives>                                ObjectiveInformations;                                   // 0x0098(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<class FString>                                        ActiveEvidence;                                          // 0x00A8(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x10];                                  // 0x00B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerState*                                          NextHost;                                                // 0x00C8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                                MigrationGUID;                                           // 0x00D0(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0002[0x8];                                   // 0x00E0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                MapName;                                                 // 0x00E8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                                ModeName;                                                // 0x00F8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0003[0x8];                                   // 0x0108(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                NextHostName;                                            // 0x0110(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      ExpectedPlayerCount;                                     // 0x0120(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x4];                                   // 0x0124(0x0004) MISSED OFFSET (PADDING)

	public:
		void SaveState();
		void ReturnToMainMenu();
		void OnMigrationSessionFoundSuccess(TArray<struct FBlueprintSessionResult> Results);
		void OnMigrationSessionFoundFailed(TArray<struct FBlueprintSessionResult> Results);
		void OnLobbySuccess();
		void FindMigrationSession();
		void CreateMigrationSession();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SuspectArmour
	 * Size -> 0x0088 (FullSize[0x09C0] - InheritedSize[0x0938])
	 */
	class ASuspectArmour : public ABaseArmour
	{
	public:
		struct FSuspectArmourData                                    ArmourData;                                              // 0x0938(0x0070) Net, RepNotify, NativeAccessSpecifierPrivate
		float                                                        Durability;                                              // 0x09A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x09AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            BlockedSoundEvent;                                       // 0x09B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            PenetratedSoundEvent;                                    // 0x09B8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void OnRep_ArmourData();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.HotkeysWidget
	 * Size -> 0x0050 (FullSize[0x02C8] - InheritedSize[0x0278])
	 */
	class UHotkeysWidget : public UBaseWidget
	{
	public:
		class UOverlay*                                              Hotkeys_Overlay;                                         // 0x0278(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHorizontalBox*                                        Hotkeys_Container;                                       // 0x0280(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHotkeyWidget*                                         Hotkey_Grenade;                                          // 0x0288(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHotkeyWidget*                                         Hotkey_Chemlight;                                        // 0x0290(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHotkeyWidget*                                         Hotkey_NVG;                                              // 0x0298(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHotkeyWidget*                                         Hotkey_Scope;                                            // 0x02A0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetSwitcher*                                       IlluminatorAttachment_Switcher;                          // 0x02A8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHotkeyWidget*                                         Hotkey_Laser;                                            // 0x02B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHotkeyWidget*                                         Hotkey_Flashlight;                                       // 0x02B8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class APlayerCharacter*                                      PlayerCharacter;                                         // 0x02C0(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void SetHotkeyVisibility(class UWidget* Widget, bool bCondition);
		void RefreshHotkeyInput();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.InvertedScrollBox
	 * Size -> 0x0000 (FullSize[0x0880] - InheritedSize[0x0880])
	 */
	class UInvertedScrollBox : public UScrollBox
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ExplosiveVest
	 * Size -> 0x0090 (FullSize[0x0A50] - InheritedSize[0x09C0])
	 */
	class AExplosiveVest : public ASuspectArmour
	{
	public:
		unsigned char                                                UnknownData_0000[0x18];                                  // 0x09C0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bShouldExplodeOnHit;                                     // 0x09D8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShouldExplodeOnDeath;                                   // 0x09D9(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x6];                                   // 0x09DA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDamageType*                                           ExplosionDamageType;                                     // 0x09E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MaxDamageOnDetonation;                                   // 0x09E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MinDamageOnDetonation;                                   // 0x09EC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DamageInnerRadius;                                       // 0x09F0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DamageOuterRadius;                                       // 0x09F4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ExplosionEffectDelay;                                    // 0x09F8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ExplosionEffectRandomDelay;                              // 0x09FC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ExplosionDamageDelay;                                    // 0x0A00(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x0A04(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                DetonationMontage;                                       // 0x0A08(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  ExplosiveVestSocket;                                     // 0x0A18(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                       ExplosionParticle;                                       // 0x0A20(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            ExplosionEvent;                                          // 0x0A28(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            DetonationEvent;                                         // 0x0A30(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMatineeCameraShake*                                   ExplosionScreenShake;                                    // 0x0A38(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ExplosionScreenShakeRadius;                              // 0x0A40(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0xC];                                   // 0x0A44(0x000C) MISSED OFFSET (PADDING)

	public:
		void Multicast_PlayPreExplosionEffects();
		void Multicast_PlayExplosionEffects();
		void ExplodeVest();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ItemVisualizationComponent
	 * Size -> 0x0048 (FullSize[0x0F10] - InheritedSize[0x0EC8])
	 */
	class UItemVisualizationComponent : public USkeletalMeshComponent
	{
	public:
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x0EC8(0x0008) Fix Super Size
		class ABaseItem*                                             BasedOfItem;                                             // 0x0ED0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UStaticMeshComponent*                                  MagazineComp;                                            // 0x0ED8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USkeletalMeshComponent*                                ScopeAttachment;                                         // 0x0EE0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USkeletalMeshComponent*                                MuzzleAttachment;                                        // 0x0EE8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USkeletalMeshComponent*                                UnderbarrelAttachment;                                   // 0x0EF0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USkeletalMeshComponent*                                OverbarrelAttachment;                                    // 0x0EF8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x0F00(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DoorJam
	 * Size -> 0x0048 (FullSize[0x0910] - InheritedSize[0x08C8])
	 */
	class ADoorJam : public ABaseItem
	{
	public:
		unsigned char                                                UnknownData_0002[0x8];                                   // 0x08C8(0x0008) Fix Super Size
		bool                                                         bSet : 1;                                                // 0x08D0(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x08D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReadyOrNotCharacter*                                  PlacedBy;                                                // 0x08D8(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ADoor*                                                 PendingPlacement;                                        // 0x08E0(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ADoor*                                                 JammedDoor;                                              // 0x08E8(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  DoorJamSocket;                                           // 0x08F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USkeletalMesh*                                         PlacedMesh;                                              // 0x08F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        PlacementTimer;                                          // 0x0900(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WedgeRemovalTime;                                        // 0x0904(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x0908(0x0008) MISSED OFFSET (PADDING)

	public:
		void Server_StartDoorjamPlacement(class ADoor* PendingDoor);
		void Server_FinishDoorjamPlacement(class ADoor* PendingDoor);
		void OnRep_DoorjamSet();
		void Multicast_StartPlacement();
		void JamDoor(class ADoor* Door);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.FirefightGM
	 * Size -> 0x0060 (FullSize[0x0810] - InheritedSize[0x07B0])
	 */
	class AFirefightGM : public AReadyOrNotGameMode_PVP
	{
	public:
		bool                                                         bSuddenDeath;                                            // 0x07B0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x07B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            TeamKilledSound_SERT_RED;                                // 0x07B8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            TeamKilledSound_SERT_BLUE;                               // 0x07C0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            MatchLoopMusic;                                          // 0x07C8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            MatchStartMusic;                                         // 0x07D0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            MatchEndMusic;                                           // 0x07D8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSavedLoadout>                                 RandomLoadouts;                                          // 0x07E0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FSavedLoadout>                                 GeneratedLoadouts;                                       // 0x07F0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                      NumRedSpawned;                                           // 0x0800(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      NumBlueSpawned;                                          // 0x0804(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x0808(0x0008) MISSED OFFSET (PADDING)

	public:
		void RegenerateRandomLoadouts();
		int32_t GetNumberOfActivePlayersOnTeam(ETeamType Team);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.KingOfTheHillGM
	 * Size -> 0x0040 (FullSize[0x07F0] - InheritedSize[0x07B0])
	 */
	class AKingOfTheHillGM : public AReadyOrNotGameMode_PVP
	{
	public:
		TArray<class APlayerCharacter*>                              ArrestedBlueCharacters;                                  // 0x07B0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class APlayerCharacter*>                              ArrestedRedCharacters;                                   // 0x07C0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class UFMODEvent*                                            TOWVictorySound;                                         // 0x07D0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            MatchLoopMusic;                                          // 0x07D8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            MatchStartMusic;                                         // 0x07E0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            MatchEndMusic;                                           // 0x07E8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.FirefightGS
	 * Size -> 0x0018 (FullSize[0x09F0] - InheritedSize[0x09D8])
	 */
	class AFirefightGS : public AReadyOrNotGameState
	{
	public:
		class FText                                                  FreeTextLocalized;                                       // 0x09D8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.WorldBuildingActivity
	 * Size -> 0x00A0 (FullSize[0x0298] - InheritedSize[0x01F8])
	 */
	class UWorldBuildingActivity : public UBaseActivity
	{
	public:
		bool                                                         bShouldHolsterWeapon;                                    // 0x01F8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShouldSurrenderFromActivity;                            // 0x01F9(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAbortDueToAggressiveNoise;                              // 0x01FA(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRequireRotationMatch;                                   // 0x01FB(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x24];                                  // 0x01FC(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRotator                                 FinalRotationOffset;                                     // 0x0220(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		bool                                                         bOneShotAnimationDataTable;                              // 0x022C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x022D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                TableMontageName;                                        // 0x0230(0x0010) Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimSequence*                                         Loop;                                                    // 0x0240(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimMontage*                                          MontageStart;                                            // 0x0248(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimMontage*                                          MontageEnd;                                              // 0x0250(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimMontage*                                          MontageAbruptEnd;                                        // 0x0258(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FString                                                StartActivitySpeech;                                     // 0x0260(0x0010) Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FString                                                FinishActivitySpeech;                                    // 0x0270(0x0010) Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimMontage*                                          TableMontageAnim;                                        // 0x0280(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x10];                                  // 0x0288(0x0010) MISSED OFFSET (PADDING)

	public:
		void TickMoveToState(float DeltaTime, float Uptime);
		void TickLoopState(float DeltaTime, float Uptime);
		bool ShouldStart();
		bool ShouldLoop();
		bool ShouldEndAbruptly();
		bool ShouldEnd();
		bool ShouldComplete();
		void SetRotation(const struct FRotator& NewRotator);
		void SetActivityData(class UWorldBuildingActivityData* Data);
		bool IsSetupCorrectly();
		struct FRotator GetRotationOffset();
		void EnterStartState();
		void EnterMoveToState();
		void EnterLoopState();
		void EnterEndState();
		void EnterCompleteState();
		void EnterAbruptEndState();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.FootstepNativeAnimNotify
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UFootstepNativeAnimNotify : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.FireOnDroppedAnimNotify
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UFireOnDroppedAnimNotify : public UAnimNotify
	{
	public:
		float                                                        ChanceToFire;                                            // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerCharacter*                                      PlayerCharacter;                                         // 0x0040(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.LastKnownPositionActor
	 * Size -> 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
	 */
	class ALastKnownPositionActor : public AActor
	{
	public:
		class USceneComponent*                                       SceneRoot;                                               // 0x0220(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x18];                                  // 0x0228(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.KillHostageChanceAnimNotify
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UKillHostageChanceAnimNotify : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ListenForEvidenceMarked
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IListenForEvidenceMarked : public IInterface
	{
	public:
		void OnEvidenceMarked(class ABaseItem* MarkedEvidence, bool bMark);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.InteractableComponent
	 * Size -> 0x04A0 (FullSize[0x0A40] - InheritedSize[0x05A0])
	 */
	class UInteractableComponent : public UWidgetComponent
	{
	public:
		bool                                                         bEnabled : 1;                                            // 0x05A0(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x05A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                  AnimatedIconName;                                        // 0x05A4(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowIconWhenActionsLocked : 1;                          // 0x05AC(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x05AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerActionPromptSlot                               ActionSlot1;                                             // 0x05B0(0x0090) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FPlayerActionPromptSlot                               ActionSlot2;                                             // 0x0640(0x0090) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FPlayerActionPromptSlot                               ActionSlot3;                                             // 0x06D0(0x0090) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FPlayerActionPromptSlot                               ActionSlot4;                                             // 0x0760(0x0090) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		float                                                        MinShowPromptAtDistance;                                 // 0x07F0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ShowPromptAtDistance;                                    // 0x07F4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RequiredLookAtPercentage;                                // 0x07F8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        InteractCircleSize;                                      // 0x07FC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        InteractIconSize;                                        // 0x0800(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bImprintIconOnHUDUponInteraction : 1;                    // 0x0804(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHideUponInteraction : 1;                                // 0x0804(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHideUponPlayerMovement : 1;                             // 0x0804(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bMustBeLookingAt : 1;                                    // 0x0804(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDistanceFadeIcon : 1;                                   // 0x0804(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x3];                                   // 0x0805(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class APlayerController*>                             DisallowedPlayerControllers;                             // 0x0808(0x0010) Edit, BlueprintVisible, ZeroConstructor, d.e.o.tate, EditConst, NativeAccessSpecifierPublic
		TArray<class AActor*>                                        IgnoreInteractionBlockingActors;                         // 0x0818(0x0010) Edit, BlueprintVisible, ZeroConstructor, d.e.o.tate, NativeAccessSpecifierPublic
		float                                                        CurrentProgress;                                         // 0x0828(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x4];                                   // 0x082C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAnimatedIcon                                         AnimatedIcon;                                            // 0x0830(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class AActor*                                                UseActor;                                                // 0x0848(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bClientInteract;                                         // 0x0850(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x7];                                   // 0x0851(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class APlayerCharacter*>                              PlayersFocusing;                                         // 0x0858(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		class UUserWidget*                                           CachedWidgetClass;                                       // 0x0868(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAnimatedIconWidget*                                   IconWidget;                                              // 0x0870(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UUserWidget*                                           ImprintIconWidgetClass;                                  // 0x0878(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAnimatedIconWidget_Imprint*                           IconWidget_Imprint;                                      // 0x0880(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TMap<class FName, struct FAnimatedIcon>                      AnimatedIconMap;                                         // 0x0888(0x0050) NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0005[0x168];                                 // 0x08D8(0x0168) MISSED OFFSET (PADDING)

	public:
		void UpdateTickRate();
		void UpdateLOSForDistanceFade();
		void SetInteractionIconState(bool bValid);
		void SetInteractionIconSize(float InInteractCircleSize, float InInteractIconSize);
		void SetAnimatedIconName(const class FName& NewIconName);
		void ResetToOriginalLocation();
		void OnInteract(class APlayerCharacter* InteractInstigator);
		bool IsInteractionEnabledForController(class APlayerController* InController);
		bool IsInteractionEnabledFor(class APlayerCharacter* InCharacter);
		bool IsIconVisible();
		bool IsFocused();
		bool IsBeingLookedAt(class APlayerController* InPlayerController, float MaxRange, float LookatThreshold, bool bUseActorLocation);
		bool InputActionNameMatchesAnyValidSlot(const class FName& InInputActionName);
		bool InputActionNameMatchesAnySlot(const class FName& InInputActionName);
		class AActor* GetUseActor();
		TArray<class APlayerCharacter*> GetPlayersFocusing();
		struct FVector GetOriginalLocation_Relative();
		struct FVector GetOriginalLocation();
		class FName GetOriginalIconName();
		float GetDistanceFromPlayer();
		void EnableInteractionFor(class APlayerCharacter* InCharacter);
		void EnableInteractable();
		void DisableInteractionFor(class APlayerCharacter* InCharacter);
		void DisableInteractable();
		bool CanInteract(bool bLog);
		bool AnyActionSlotValid();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.LensFlare
	 * Size -> 0x02D8 (FullSize[0x04F8] - InheritedSize[0x0220])
	 */
	class ALensFlare : public AActor
	{
	public:
		class USceneComponent*                                       Scene;                                                   // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UMaterialBillboardComponent*                           LensFlare;                                               // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AReadyOrNotCharacter*                                  OwningCharacter;                                         // 0x0230(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMaterialInterface*                                    FlareMat;                                                // 0x0238(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector2D                                BaseSize;                                                // 0x0240(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MinimumRotationDeltaToBeVisible;                         // 0x0248(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x024C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialInstanceDynamic*                              FlareMatInstance;                                        // 0x0250(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x0258(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        GlobalBrightness;                                        // 0x025C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        GhostsBrightness;                                        // 0x0260(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FlickerIntensity;                                        // 0x0264(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FlickerTime;                                             // 0x0268(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          GlobalColor;                                             // 0x026C(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FadeDistance;                                            // 0x027C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bUseFadeDistance;                                        // 0x0280(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x3];                                   // 0x0281(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        IncreasingBloomByDistance;                               // 0x0284(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bUseDistanceBloom;                                       // 0x0288(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0003[0x3];                                   // 0x0289(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        HaloOpacity;                                             // 0x028C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        HaloInnerRadius;                                         // 0x0290(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        HaloBrightness;                                          // 0x0294(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          HaloOuterColor;                                          // 0x0298(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          HaloInnerColor;                                          // 0x02A8(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture*                                              HaloTexture;                                             // 0x02B8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        HaloTextureSize;                                         // 0x02C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        HaloContrast;                                            // 0x02C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        CentreFlareBrightness;                                   // 0x02C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0004[0x4];                                   // 0x02CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture*                                              CentreFlareTexture;                                      // 0x02D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          CentreFlareColor;                                        // 0x02D8(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        CentreFlareSize;                                         // 0x02E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        CentreFlareContrast;                                     // 0x02EC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MainFlareBrightness;                                     // 0x02F0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0005[0x4];                                   // 0x02F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture*                                              MainFlare;                                               // 0x02F8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MainFlareInnerRadius;                                    // 0x0300(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          MainOuterColor;                                          // 0x0304(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          MainLensInnerColor;                                      // 0x0314(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MainFlareSize;                                           // 0x0324(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MainFlareContrast;                                       // 0x0328(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        ReflectionSize;                                          // 0x032C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture*                                              ReflectionCentreTexture;                                 // 0x0330(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          ReflectionColor;                                         // 0x0338(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        ReflectionBrightness;                                    // 0x0348(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        ReflectionContrast;                                      // 0x034C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        OppositeFlaresAxisProjection;                            // 0x0350(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FlareOppositeSize01;                                     // 0x0354(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FlareOppositeSize02;                                     // 0x0358(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          FlareOppositeColor01;                                    // 0x035C(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          FlareOppositeColor02;                                    // 0x036C(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FlareOppositeBrightness01;                               // 0x037C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FlareOppositeBrightness02;                               // 0x0380(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FlareOppositeContrast01;                                 // 0x0384(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FlareOppositeContrast02;                                 // 0x0388(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0006[0x4];                                   // 0x038C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture*                                              FlareOpposite01;                                         // 0x0390(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture*                                              FlareOpposite02;                                         // 0x0398(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FrontFlaresAxisProjection;                               // 0x03A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FlareFrontSize01;                                        // 0x03A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FlareFrontSize02;                                        // 0x03A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          FlareFrontColor01;                                       // 0x03AC(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          FlareFrontColor02;                                       // 0x03BC(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FlareFrontProximityCentre01;                             // 0x03CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FlareFrontProximityCentre02;                             // 0x03D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0007[0x4];                                   // 0x03D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture*                                              FlareFront01;                                            // 0x03D8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture*                                              FlareFront02;                                            // 0x03E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FlareFrontContrast01;                                    // 0x03E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FlareFrontContrast02;                                    // 0x03EC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FlareFrontBrightness01;                                  // 0x03F0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FlareFrontBrightness02;                                  // 0x03F4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        ReflectedFlareSize01;                                    // 0x03F8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        ReflectedFlareSize02;                                    // 0x03FC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        ReflectedFlareProximityCentre01;                         // 0x0400(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        ReflectedFlareProximityCentre02;                         // 0x0404(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture*                                              ReflectedFlare01;                                        // 0x0408(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture*                                              ReflectedFlare02;                                        // 0x0410(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          ReflectedFlareColor01;                                   // 0x0418(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          ReflectedFlareColor02;                                   // 0x0428(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        ReflectedFlareContrast01;                                // 0x0438(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        ReflectedFlareContrast02;                                // 0x043C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        ReflectedFlareBrightness01;                              // 0x0440(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        ReflectedFlareBrightness02;                              // 0x0444(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MinorFlareProximityCentre01;                             // 0x0448(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MinorFlareSize01;                                        // 0x044C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MinorFlareSizeRandom01;                                  // 0x0450(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0008[0x4];                                   // 0x0454(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture*                                              MinorFlare01;                                            // 0x0458(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          MinorFlareColor01;                                       // 0x0460(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MinorFlareContrast01;                                    // 0x0470(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MinorFlareBrightness01;                                  // 0x0474(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          MinorFlareColor02;                                       // 0x0478(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MinorFlareContrast02;                                    // 0x0488(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MinorFlareBrightness02;                                  // 0x048C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MinorFlareProximityCentre02;                             // 0x0490(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MinorFlareSize02;                                        // 0x0494(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MinorFlareSizeRandom02;                                  // 0x0498(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0009[0x4];                                   // 0x049C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture*                                              MinorFlare02;                                            // 0x04A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture*                                              Iris;                                                    // 0x04A8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        IrisSize;                                                // 0x04B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        IrisProximityCentre;                                     // 0x04B4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        IrisBrightness;                                          // 0x04B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        IrisContrast;                                            // 0x04BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          IrisColor;                                               // 0x04C0(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture*                                              AdditionalFlare;                                         // 0x04D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        AdditionalFlareSize;                                     // 0x04D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        AdditionalFlareContrast;                                 // 0x04DC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        AdditionalFlareBrightness;                               // 0x04E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          AdditionalFlareColor;                                    // 0x04E4(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0010[0x4];                                   // 0x04F4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.FirePointActor
	 * Size -> 0x0028 (FullSize[0x0248] - InheritedSize[0x0220])
	 */
	class AFirePointActor : public AActor
	{
	public:
		TArray<class FString>                                        CustomFireArray;                                         // 0x0220(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		ECoverFireType_FirePoint                                     CoverType;                                               // 0x0230(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsCrouchCover : 1;                                      // 0x0231(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x6];                                   // 0x0232(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ACyberneticController*                                 InUseByController;                                       // 0x0238(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USceneComponent*                                       DefaultScene;                                            // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void PlayPreviewAnimation();
		bool IsInUse(class ACyberneticController* MyController);
		class FString GetRandomFireMontage();
		class ACoverFireVolume* GetParentVolume();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.InvestigateActivity
	 * Size -> 0x0000 (FullSize[0x0298] - InheritedSize[0x0298])
	 */
	class UInvestigateActivity : public UWorldBuildingActivity
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.HotkeyWidget
	 * Size -> 0x00C8 (FullSize[0x0328] - InheritedSize[0x0260])
	 */
	class UHotkeyWidget : public UUserWidget
	{
	public:
		class UTextBlock*                                            Hotkey_Text;                                             // 0x0260(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Hotkey_Image;                                            // 0x0268(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                HotkeyDivider_Image;                                     // 0x0270(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                            RemainingUses_Text;                                      // 0x0278(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetAnimation*                                      Anim_Pressed;                                            // 0x0280(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetAnimation*                                      Anim_Released;                                           // 0x0288(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                  InputName;                                               // 0x0290(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FSlateBrush                                           Icon;                                                    // 0x0298(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		bool                                                         bCustomAnimation : 1;                                    // 0x0320(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bShowRemainingUses : 1;                                  // 0x0320(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0321(0x0007) MISSED OFFSET (PADDING)

	public:
		void SetHotkeyRemainingUses(int32_t InRemainingUses);
		void SetHotkeyImage(const struct FSlateBrush& Brush);
		void RefreshHotkey();
		void PlayReleasedAnimation();
		void PlayPressedAnimation();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.InteractionActor
	 * Size -> 0x0058 (FullSize[0x0278] - InheritedSize[0x0220])
	 */
	class AInteractionActor : public AActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                       SceneRoot;                                               // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USphereComponent*                                      UseIconRadius;                                           // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                  Mesh_Static;                                             // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USkeletalMeshComponent*                                Mesh_Skeletal;                                           // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCanUseNow;                                              // 0x0248(0x0001) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAvailableForUse;                                        // 0x0249(0x0001) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCompleteIcon;                                           // 0x024A(0x0001) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bButtonPushAnimation;                                    // 0x024B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHoldButtonPrompt;                                       // 0x024C(0x0001) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bOverrideButtonPrompt;                                   // 0x024D(0x0001) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x2];                                   // 0x024E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                  OverrideButtonPromptText;                                // 0x0250(0x0018) Edit, BlueprintVisible, Net, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x10];                                  // 0x0268(0x0010) MISSED OFFSET (PADDING)

	public:
		void Server_TryUse(class AActor* User);
		void Server_EndUse(class AActor* User);
		void OnActorUsedEnd(class AActor* User);
		void OnActorUsed(class AActor* User);
		bool CanBeUsedNow(class AActor* PotentialUser);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.FlankingAvoidanceVolume
	 * Size -> 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
	 */
	class AFlankingAvoidanceVolume : public AActor
	{
	public:
		class UBoxComponent*                                         Bounds;                                                  // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UNavModifierComponent*                                 NavModifierComponent;                                    // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ListenForReport
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IListenForReport : public IInterface
	{
	public:
		void OnTargetReported(class AReadyOrNotCharacter* Reporter, class UObject* ReportedCharacter);
		void OnTargetBecameReportable(class UObject* Target);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.InvestigateStimulusActivity
	 * Size -> 0x0068 (FullSize[0x0260] - InheritedSize[0x01F8])
	 */
	class UInvestigateStimulusActivity : public UBaseActivity
	{
	public:
		struct FAIStimulus                                           Stimulus;                                                // 0x01F8(0x003C) BlueprintVisible, BlueprintReadOnly, NoDestructor, ExposeOnSpawn, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x0234(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReadyOrNotCharacter*                                  Instigator;                                              // 0x0238(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x20];                                  // 0x0240(0x0020) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.InteractionsData
	 * Size -> 0x0078 (FullSize[0x00A8] - InheritedSize[0x0030])
	 */
	class UInteractionsData : public UDataAsset
	{
	public:
		class FName                                                  InteractionName;                                         // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLooping : 1;                                            // 0x0038(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAllowDeadDriverInteraction : 1;                         // 0x0038(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAllowDeadSlaveInteraction : 1;                          // 0x0038(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAllowAimOffsetDuringInteraction : 1;                    // 0x0038(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bApplyRelativeOffsetBeforePlaying : 1;                   // 0x0038(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bUseSyncBone : 1;                                        // 0x0038(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDoNotApplyRelativeOffset : 1;                           // 0x0038(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                  RelativePosOffsetToDriver;                               // 0x003C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                 RelativeRotOffsetToDriver;                               // 0x0048(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                        CancelDurationLength;                                    // 0x0054(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bUseDriverFPMotion : 1;                                  // 0x0058(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIndependentFinishes : 1;                                // 0x0058(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bUpdateSlaveTransform : 1;                               // 0x0058(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bUpdateTransformsInstantly : 1;                          // 0x0058(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bInstantHolster : 1;                                     // 0x0058(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHolsterItemBeforePlaying : 1;                           // 0x0058(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bEquipLastItemAfterPlaying : 1;                          // 0x0058(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                          DriverMontage;                                           // 0x0060(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          DriverMontage_FP;                                        // 0x0068(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TriggerTolerance;                                        // 0x0070(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DriverBlendDuration;                                     // 0x0074(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bUseSlaveFPMotion : 1;                                   // 0x0078(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                          SlaveMontage;                                            // 0x0080(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          SlaveMontage_FP;                                         // 0x0088(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bMatchDriverYaw : 1;                                     // 0x0090(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x3];                                   // 0x0091(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MatchedYawOffset;                                        // 0x0094(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHasSharedItemAnim : 1;                                  // 0x0098(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x7];                                   // 0x0099(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                          SharedItemMontage;                                       // 0x00A0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		class APairedInteractionDriver* PlayPairedInteraction(class AActor* Driver, class AActor* Slave, class ABaseItem* OptionalItem);
		class APairedInteractionDriver* IsPairedInteractionPlayingOn(class AActor* Target);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.IssueCommandQuestNode
	 * Size -> 0x0010 (FullSize[0x0280] - InheritedSize[0x0270])
	 */
	class UIssueCommandQuestNode : public UBaseTeamQuestNode
	{
	public:
		ESwatCommand                                                 SwatCommand;                                             // 0x0270(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ETeamType                                                    TeamType;                                                // 0x0271(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bHasIssueCommand;                                        // 0x0272(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0xD];                                   // 0x0273(0x000D) MISSED OFFSET (PADDING)

	public:
		void OnIssuedCommand(ESwatCommand Command, ETeamType Team);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ListenForGameEnd
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IListenForGameEnd : public IInterface
	{
	public:
		void OnGameEnded();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ListenForRoundEnded
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IListenForRoundEnded : public IInterface
	{
	public:
		void OnRoundEnded();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ItemData
	 * Size -> 0x0170 (FullSize[0x01A0] - InheritedSize[0x0030])
	 */
	class UItemData : public UDataAsset
	{
	public:
		TArray<struct FWeaponData>                                   PrimaryWeapons;                                          // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FWeaponData>                                   BluePVPUniquePrimaryWeapons;                             // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FWeaponData>                                   RedPVPUniquePrimaryWeapons;                              // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FWeaponData>                                   SecondaryWeapons;                                        // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class ABaseItem*                                             NullItem;                                                // 0x0070(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponAttachment*                                     NullPrimaryScopeAttachment;                              // 0x0078(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponAttachment*                                     NullMuzzleAttachment;                                    // 0x0080(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponAttachment*                                     NullOverbarrelAttachment;                                // 0x0088(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponAttachment*                                     NullUnderbarrelAttachment;                               // 0x0090(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponAttachment*                                     NullStockAttachment;                                     // 0x0098(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponAttachment*                                     NullGripAttachment;                                      // 0x00A0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponAttachment*                                     NullIlluminatorAttachment;                               // 0x00A8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponAttachment*                                     NullAmmunitionAttachment;                                // 0x00B0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ABaseItem*>                                     DefaultItemsGivenToPlayer;                               // 0x00B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		class USkinComponent*                                        FactorySkin;                                             // 0x00C8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSavedLoadout>                                 DefaultLoadouts;                                         // 0x00D0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FDeviceData>                                   LongTacticalItems;                                       // 0x00E0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FDeviceData>                                   TacticalItems;                                           // 0x00F0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FArmourData>                                   BodySelection;                                           // 0x0100(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FArmourData>                                   HeadSelection;                                           // 0x0110(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<TSoftObjectPtr<class UArmourMaterial>>                ArmourMaterials;                                         // 0x0120(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<class USkinComponent*>                                UniformSelection;                                        // 0x0130(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<struct FCharacterData>                                CharacterSelection;                                      // 0x0140(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TSoftObjectPtr<class UTexture2D>                             DefaultItemImage;                                        // 0x0150(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x0174(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TArray<class FText>                                          PersonnelNames;                                          // 0x0178(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FText>                                          PersonnelDescriptions;                                   // 0x0188(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                      AttachmentPointsBase;                                    // 0x0198(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x019C(0x0004) MISSED OFFSET (PADDING)

	public:
		int32_t GetDeviceAmount(class ABaseItem* Item);
		TArray<class USkinComponent*> GetAvailableSkinsForWeapon(class UItemData* ItemData, class ABaseItem* Item, struct FWeaponData* WeaponData);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ListenForUncuffed
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IListenForUncuffed : public IInterface
	{
	public:
		void OnCharacterUncuffed(class AReadyOrNotCharacter* ArrestedCharacter, class AReadyOrNotCharacter* Uncuffer);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MagMaskingAnimNotify
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UMagMaskingAnimNotify : public UAnimNotify
	{
	public:
		bool                                                         bIsFirstPerson;                                          // 0x0038(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EMaskMag                                                     MaskMag;                                                 // 0x0039(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EMaskMagState                                                MagState;                                                // 0x003A(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                         bDummyCopyMag02;                                         // 0x003B(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ListenForWeaponClearing
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IListenForWeaponClearing : public IInterface
	{
	public:
		void OnWeaponCleared(class ABaseItem* WeaponActor);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ListenForGamePreStart
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IListenForGamePreStart : public IInterface
	{
	public:
		void OnGamePreStarted();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ListenForSpawn
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IListenForSpawn : public IInterface
	{
	public:
		void OnCharacterSpawned(class AReadyOrNotCharacter* SpawnedCharacter);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ListenForYell
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IListenForYell : public IInterface
	{
	public:
		void OnCharacterYelled(class AReadyOrNotCharacter* Yeller);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MainMenu
	 * Size -> 0x0128 (FullSize[0x0388] - InheritedSize[0x0260])
	 */
	class UMainMenu : public UUserWidget
	{
	public:
		class FString                                                VersionPrefix;                                           // 0x0260(0x0010) Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TMap<ELoginState, class FText>                               BackendConnectionStatus;                                 // 0x0270(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		TMap<ELoginState, struct FSlateColor>                        BackendConnectionStatusColor;                            // 0x02C0(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class UCanvasPanel*                                          BackgroundCanvas;                                        // 0x0310(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUserWidget*                                           PlayBtn;                                                 // 0x0318(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUserWidget*                                           FindCOOPSessionBtn;                                      // 0x0320(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUserWidget*                                           FindCOOPSessionCancelBtn;                                // 0x0328(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUserWidget*                                           FindPVPSessionBtn;                                       // 0x0330(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUserWidget*                                           FindPVPSessionCancelBtn;                                 // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUserWidget*                                           OptionsBtn;                                              // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUserWidget*                                           BugsBtn;                                                 // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUserWidget*                                           QuitBtn;                                                 // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUserWidget*                                           PlaySinglePlayerBtn;                                     // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUserWidget*                                           PlayPublicLobbyBtn;                                      // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUserWidget*                                           PlayFriendsOnlyBtn;                                      // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                            Txt_BackEndConnection;                                   // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                            Txt_PublicLobbyCooldown;                                 // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bEnableFindSessionCOOPButton : 1;                        // 0x0380(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bEnableFindSessionPVPButton : 1;                         // 0x0380(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0381(0x0007) MISSED OFFSET (PADDING)

	public:
		bool IsLoggedIn();
		class FText GetVersion();
		class FText GetPublicLobbyCooldown();
		class FText GetBackEndConnectionStatus(ELoginState LoginState);
		bool CanPlayPublicLobby();
		bool CanFindSession(bool bCOOP);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.LevelData
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class ULevelData : public UDataAsset
	{
	public:
		bool IsPvPSupported(const struct FLevelDataLookupTable& LevelData);
		bool IsCOOPSupported(const struct FLevelDataLookupTable& LevelData);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.LoadingScreen
	 * Size -> 0x0078 (FullSize[0x02D8] - InheritedSize[0x0260])
	 */
	class ULoadingScreen : public UUserWidget
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0260(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULevelStreaming*                                       StreamedLevel;                                           // 0x0268(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x68];                                  // 0x0270(0x0068) MISSED OFFSET (PADDING)

	public:
		void UpdateTip(class UTextBlock* TipBlock);
		void SetLoadingScreen(const class FString& InMap, const class FString& InMode, const class FString& InSessionName, bool bSeamlessTravel);
		class FString GetMapName();
		void GetLoadingScreenDetails(class FString* OutMap, class FString* OutMode, class FString* OutSessionName);
		float GetLoadingPercentage();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ForceAimAtActivity
	 * Size -> 0x0020 (FullSize[0x0218] - InheritedSize[0x01F8])
	 */
	class UForceAimAtActivity : public UBaseActivity
	{
	public:
		bool                                                         bForceNoShoot;                                           // 0x01F8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bForceAimAt;                                             // 0x01F9(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bForceNoMove;                                            // 0x01FA(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x5];                                   // 0x01FB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerCharacter*                                      ForcedTarget;                                            // 0x0200(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCanFinishActivity;                                      // 0x0208(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xF];                                   // 0x0209(0x000F) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ListenForGameStart
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IListenForGameStart : public IInterface
	{
	public:
		void OnGameStarted();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.LoadoutPortal
	 * Size -> 0x0078 (FullSize[0x0298] - InheritedSize[0x0220])
	 */
	class ALoadoutPortal : public AActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBillboardComponent*                                   BillboardComponent;                                      // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UInteractableComponent*                                InteractableComponent;                                   // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class UStaticMeshComponent*>                          CompsToOutline;                                          // 0x0238(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<class ULightComponent*>                               LightsToEnable;                                          // 0x0248(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
		class FName                                                  LightActorsOfTag;                                        // 0x0258(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                         bIsWeaponCustomizationOnly;                              // 0x0260(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x0261(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ACameraActor*                                          WeaponCustomizationCamera;                               // 0x0268(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0002[0x18];                                  // 0x0270(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULevelStreaming*                                       PreMissionStreamedLevel;                                 // 0x0288(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0003[0x8];                                   // 0x0290(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MainMenuGM
	 * Size -> 0x0098 (FullSize[0x0358] - InheritedSize[0x02C0])
	 */
	class AMainMenuGM : public AGameModeBase
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x02C0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            MainMenuMusic;                                           // 0x02D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            MainMenuAmbience;                                        // 0x02D8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x38];                                  // 0x02E0(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnUpdateSessionSearch;                                   // 0x0318(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0xF];                                   // 0x0319(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0003[0x18];                                  // 0x0328(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UUserWidget*                                           AuthenticationMenu;                                      // 0x0340(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x8];                                   // 0x0348(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UUserWidget*                                           MainMenu;                                                // 0x0350(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void ShowMainMenuMsg();
		void OnUpdateSessionSearch__DelegateSignature(bool bComplete, const class FText& OutMessage, bool bPVPSearch);
		void OnLobbySuccess();
		void OnLobbyFailed();
		void OnFindSessionSuccess(TArray<struct FBlueprintSessionResult> Results);
		void OnFindSessionFailed(TArray<struct FBlueprintSessionResult> Results);
		void OnDestroySessionBeforeStartingLobby();
		void OnBanStatusChecked(const class FString& SteamId, bool bIsBanned, const class FString& BanReason, bool bIsMySteamId);
		void GoToLobby(bool bOnlineMode, bool bFriendsOnly);
		void FindOnlineSession(bool bNewSearch, bool bPVPSession);
		void FindNextSessionList();
		void CreateRestartWidget();
		void CancelSessionSearch();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.InventoryComponent
	 * Size -> 0x0328 (FullSize[0x03D8] - InheritedSize[0x00B0])
	 */
	class UInventoryComponent : public UActorComponent
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x00B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnEquippedItemChanged;                                   // 0x00B8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xF];                                   // 0x00B9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnClientItemAddedToInventory;                            // 0x00C8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0xF];                                   // 0x00C9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnItemAddedToInventory;                                  // 0x00D8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0xF];                                   // 0x00D9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnItemRemovedFromInventory;                              // 0x00E8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0xF];                                   // 0x00E9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnItemEquipped;                                          // 0x00F8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0xF];                                   // 0x00F9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnItemHolstered;                                         // 0x0108(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0xF];                                   // 0x0109(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0007[0x8];                                   // 0x0118(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FItemChangeRequest                                    LatestItemChangeRequest;                                 // 0x0120(0x0028) Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FItemChangeRequest                                    LastReceivedItemChangeRequest;                           // 0x0148(0x0028) NoDestructor, Protected, NativeAccessSpecifierProtected
		class ABaseItem*                                             QueuedItemSwap;                                          // 0x0170(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ABaseItem*                                             LastEquippedItem;                                        // 0x0178(0x0008) Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ABaseWeapon*                                           LastEquippedWeapon;                                      // 0x0180(0x0008) Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class ABaseItem*>                                     InventoryItems;                                          // 0x0188(0x0010) Edit, Net, ZeroConstructor, EditConst, RepNotify, Protected, NativeAccessSpecifierProtected
		TArray<class ABaseItem*>                                     RemovedInventoryItems;                                   // 0x0198(0x0010) Edit, Net, ZeroConstructor, EditConst, RepNotify, Protected, NativeAccessSpecifierProtected
		struct FSpawnedGear                                          SpawnedGear;                                             // 0x01A8(0x0078) BlueprintVisible, Net, RepNotify, Protected, NativeAccessSpecifierProtected
		struct FSavedLoadout                                         LastEquippedLoadout;                                     // 0x0220(0x0178) Net, Protected, NativeAccessSpecifierProtected
		class ABaseItem*                                             SelectedDevice;                                          // 0x0398(0x0008) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0008[0x28];                                  // 0x03A0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FItemSelectionGroup>                           ItemSelectionGroups;                                     // 0x03C8(0x0010) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, NativeAccessSpecifierPublic

	public:
		void ThrowSpecificItem(class ABaseItem* Item);
		void ThrowEquippedItem();
		void ThrowAllWeapons();
		void ThrowAllItems();
		void Server_PlayTPHolster(const struct FItemChangeRequest& ItemChangeRequest);
		void Server_ChangeEquippedItem(const struct FItemChangeRequest& ItemChangeRequest);
		void Server_AttemptEquipNewLoadout(const struct FSavedLoadout& Loadout);
		bool RemoveInventoryItem(class ABaseItem* Item, bool bNullOwner);
		bool PutItemInHands(class ABaseItem* Item, bool bInstant, bool bForce);
		void PlayTPDraw(const struct FItemChangeRequest& ItemChangeRequest);
		void PlayLocalHolster(const struct FItemChangeRequest& ItemChangeRequest);
		void PlayLocalDraw(const struct FItemChangeRequest& ItemChangeRequest);
		void OnRep_SpawnedGear();
		void OnRep_ItemChangeRequest();
		void OnRep_InventoryItemsChanged();
		void OnPlayerItemChanged__DelegateSignature(class ABaseItem* Item);
		void OnItemRemoved__DelegateSignature(class ABaseItem* Item);
		void OnItemEquipped__DelegateSignature(class ABaseItem* Item);
		void OnEquippedItemChanged__DelegateSignature();
		void OnActorRelevancyChanged(class AActor* Actor, bool bIsRelevant);
		void Multicast_NotifyInventoryItemsChanged();
		bool IsWearingHeadArmour();
		bool IsWearingExplosiveVest();
		bool IsWearingArmour();
		bool IsWearingAntiFlashGoggles();
		bool IsItemEquipped_Class(class ABaseItem* ItemClass);
		bool IsItemEquipped(EItemCategory ItemCategory);
		bool IsEquippingSpecificItem(class ABaseItem* Item);
		bool IsEquippingItemOfType(EItemCategory ItemCategory);
		bool IsEquippingItemOfClass(class UObject* ClassType);
		bool IsEquippingItem();
		bool IsEquippedWithShield(class ABaseItem* Item);
		bool IsAnyItemAttachedToHands();
		bool IsAnyItemAttachedToBody();
		bool IsAnyBlockingAnimationPlaying();
		bool HolsterEquippedItem(bool bInstant);
		bool Holster(class ABaseItem* Item, bool bInstant);
		bool HasInventoryItem(class ABaseItem* Item);
		bool HasAnyInventoryItemsOfType(EItemCategory ItemCategory);
		bool HasAnyInventoryItemsOfClass(class ABaseItem* ItemClass);
		bool HasAnyInventoryItems();
		TArray<class ABaseItem*> GetRemovedInventoryItems();
		struct FSavedLoadout GetLastEquippedLoadout();
		TArray<class ABaseItem*> GetInventoryItemsOfType(EItemCategory ItemCategory);
		TArray<class ABaseItem*> GetInventoryItems();
		class ABaseItem* GetInventoryItemOfType(EItemCategory ItemCategory);
		class ABaseItem* GetInventoryItemOfClassType(EItemClass ItemClass);
		class ABaseItem* GetInventoryItemOfClass(class UObject* Class, bool bCanEquipCheck);
		class ABaseItem* GetHolsteredItem();
		class AHeadwear* GetHeadwear();
		class AHeadwear* GetHeadArmour();
		class ABaseItem* GetEquippedItem();
		class ABaseArmour* GetArmour();
		void EquipLoadout(const struct FLoadout& Loadout);
		void EquipLastEquippedWeapon(bool bInstant, bool bForce);
		void EquipLastEquippedItem(bool bInstant, bool bForce);
		class ABaseItem* EquipItemOfType(EItemCategory ItemCategory, bool bInstant);
		class ABaseItem* EquipItemOfClass(class UObject* ClassType, bool bInstant);
		class ABaseItem* EquipItemFromGroup_Name(const class FName& GroupName, int32_t ItemCategoryIndex);
		class ABaseItem* EquipItemFromGroup_Index(int32_t GroupIndex, int32_t ItemCategoryIndex);
		bool EquipHolsteredItem(bool bInstant);
		void EquipDefaultItems(bool bItemReplicates, bool bEquipToHands);
		bool DestroyInventoryItem(class ABaseItem* Item);
		void DestroyAllEquippedItems();
		int32_t CountInventoryItemType(EItemCategory ItemCategory);
		void ClientOnItemAddedToInventory__DelegateSignature(class ABaseItem* Item);
		void Client_NotifyInventorySpawned();
		void Client_NotifyInventoryItemsDestroyed();
		void Client_NotifyInventoryItemsChanged();
		bool CanEquip(class ABaseItem* Item);
		bool AddInventoryItem(class ABaseItem* Item);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MirrorZoneComponent
	 * Size -> 0x0028 (FullSize[0x04A0] - InheritedSize[0x0478])
	 */
	class UMirrorZoneComponent : public UBoxComponent
	{
	public:
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x0478(0x0008) Fix Super Size
		class FText                                                  ButtonPromptText;                                        // 0x0480(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0498(0x0008) MISSED OFFSET (PADDING)

	public:
		class UMirrorPortalComponent* GetFurthestMirrorPortalFrom(class AActor* Actor);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MirrorPortalComponent
	 * Size -> 0x0000 (FullSize[0x0470] - InheritedSize[0x0470])
	 */
	class UMirrorPortalComponent : public UArrowComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MapActorComponent
	 * Size -> 0x00E8 (FullSize[0x02E0] - InheritedSize[0x01F8])
	 */
	class UMapActorComponent : public USceneComponent
	{
	public:
		unsigned char                                                UnknownData_0002[0x8];                                   // 0x01F8(0x0008) Fix Super Size
		class UMapActorWidget*                                       MapActorWidgetClass;                                     // 0x0200(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FText                                                  IconText;                                                // 0x0208(0x0018) Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected
		struct FLinearColor                                          IconTextColor;                                           // 0x0220(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FSlateBrush                                           IconBrush;                                               // 0x0230(0x0088) Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected
		struct FLinearColor                                          IconColor;                                               // 0x02B8(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bUseActorRotation : 1;                                   // 0x02C8(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x02C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        RotationOffset;                                          // 0x02CC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bAddedToMap;                                             // 0x02D0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x02D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMapActorIconWidget*                                   MapIconWidget;                                           // 0x02D8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void SetIconTextColor(const struct FLinearColor& InIconTextColor);
		void SetIconText(const class FText& InIconText);
		void SetIconColor(const struct FLinearColor& InIconColor);
		bool IsUsingActorRotation();
		class FText GetIconText();
		void EnableMapActor();
		void DisableMapActor();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ModProgressWidget
	 * Size -> 0x0018 (FullSize[0x0278] - InheritedSize[0x0260])
	 */
	class UModProgressWidget : public UUserWidget
	{
	public:
		unsigned char                                                UnknownData_0000[0x18];                                  // 0x0260(0x0018) MISSED OFFSET (PADDING)

	public:
		void OnQueueProgressUpdated(int32_t CompletedMods, int32_t TotalMods);
		void OnModNameUpdated(const class FString& ModName);
		void OnDownloadProgressUpdated(float DownloadPercent, float ExtractionPercent, const class FText& PercentText, const class FText& RemainingText);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ListenForGrenades
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IListenForGrenades : public IInterface
	{
	public:
		void OnGrenadeDetonated(const struct FHitResult& Hit, class ABaseGrenade* Grenade, class AReadyOrNotCharacter* Owner);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MapActorWidget
	 * Size -> 0x0038 (FullSize[0x02B0] - InheritedSize[0x0278])
	 */
	class UMapActorWidget : public UBaseWidget
	{
	public:
		class UTextBlock*                                            MapActor_Text;                                           // 0x0278(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AActor*                                                ActorToTrack;                                            // 0x0280(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bUseActorRotation;                                       // 0x0288(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bUseLocation;                                            // 0x0289(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x2];                                   // 0x028A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                  LocationToTrack;                                         // 0x028C(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        RotationOffset;                                          // 0x0298(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MapSize;                                                 // 0x029C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MapTextureSize;                                          // 0x02A0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector2D                                MapOrigin;                                               // 0x02A4(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x02AC(0x0004) MISSED OFFSET (PADDING)

	public:
		void SetMapActorTextColor(const struct FLinearColor& InTextColor);
		void SetMapActorText(const class FText& InText);
		void InitializeWidget(class AActor* InActorToTrack, bool bInUseActorRotation, bool bInUseLocation, const struct FVector& InLocationToTrack, float InRotationOffset);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotTriggerVolume
	 * Size -> 0x0028 (FullSize[0x0250] - InheritedSize[0x0228])
	 */
	class AReadyOrNotTriggerVolume : public ATriggerBox
	{
	public:
		TArray<class AActor*>                                        OverlappingClasses;                                      // 0x0228(0x0010) Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected
		TArray<class AActor*>                                        TestActors;                                              // 0x0238(0x0010) Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0248(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnActorSpawned(class AActor* Actor);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.HudWidget
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IHudWidget : public IInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MirrorUnderDoorActivity
	 * Size -> 0x0018 (FullSize[0x0230] - InheritedSize[0x0218])
	 */
	class UMirrorUnderDoorActivity : public UDoorInteractionActivity
	{
	public:
		EMirrorContactType                                           MirrorContactType;                                       // 0x0218(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0219(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ACyberneticCharacter*>                          SpottedCharacters;                                       // 0x0220(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected

	public:
		void MirrorForCustom();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.LobbyFiringRangeArea
	 * Size -> 0x0000 (FullSize[0x0250] - InheritedSize[0x0250])
	 */
	class ALobbyFiringRangeArea : public AReadyOrNotTriggerVolume
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MoraleComponent
	 * Size -> 0x0018 (FullSize[0x00C8] - InheritedSize[0x00B0])
	 */
	class UMoraleComponent : public UActorComponent
	{
	public:
		float                                                        Morale;                                                  // 0x00B0(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        StartingMorale;                                          // 0x00B4(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TimeSinceLastYelledAt;                                   // 0x00B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bTriggeredYellAt;                                        // 0x00BC(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHasBeenYelledAt;                                        // 0x00BD(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x2];                                   // 0x00BE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ACyberneticCharacter*                                  OwnerCharacter;                                          // 0x00C0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		bool WillGiveUp(class AReadyOrNotCharacter* Yeller);
		void ResetMoraleOnCharacter(class ACyberneticCharacter* Character);
		void LowerMoraleOnCharacter(class ACyberneticCharacter* Character, float MoraleValue);
		void IncreaseMoraleOnCharacter(class ACyberneticCharacter* Character, float MoraleValue);
		bool HasBeenYelledAt();
		float GetTimeSinceLastYelledAt();
		float GetMorale();
		void ChangeMoraleOnCharacter(class ACyberneticCharacter* Character, float MoraleValue);
		void ChangeMoraleInArea(const struct FVector& Location, float MoraleValue, float Range, bool bLOSOnly, TArray<ETeamType> Teams);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.HumanCharacterHUD_V2
	 * Size -> 0x00A0 (FullSize[0x0318] - InheritedSize[0x0278])
	 */
	class UHumanCharacterHUD_V2 : public UBaseWidget
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0278(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCanvasPanel*                                          CanvasPanel_Main;                                        // 0x0280(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class URetainerBox*                                          RetainerBox_SwayableElements;                            // 0x0288(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPlayerActionPromptWidget*                             PlayerActionText_Slot_2;                                 // 0x0290(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPlayerActionPromptWidget*                             PlayerActionText_Slot_3;                                 // 0x0298(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPlayerActionPromptWidget*                             PlayerActionText_Slot_4;                                 // 0x02A0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPlayerActionPromptWidget*                             PlayerActionText_Slot_5;                                 // 0x02A8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPlayerActionPromptWidget*                             PlayerActionText_Slot_Reserved_2;                        // 0x02B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPlayerActionPromptWidget*                             PlayerActionText_Slot_Reserved_3;                        // 0x02B8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EHUDStyle                                                    HUDStyle;                                                // 0x02C0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x02C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                          ObjectiveMarker_WidgetFadeZones;                         // 0x02C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		bool                                                         bEnableHUDSway : 1;                                      // 0x02D8(0x0001) BIT_FIELD Edit, BlueprintVisible, d.e.o.i, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x3];                                   // 0x02D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                MaxHUDSwayMovement;                                      // 0x02DC(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector2D                                SwayStrength;                                            // 0x02E4(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector2D                                SwaySpeed;                                               // 0x02EC(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bEnableCurvedHUD : 1;                                    // 0x02F4(0x0001) BIT_FIELD Edit, BlueprintVisible, d.e.o.i, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0003[0x3];                                   // 0x02F5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        CurvedHUDStrength;                                       // 0x02F8(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0004[0x4];                                   // 0x02FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerCharacter*                                      PlayerCharacter;                                         // 0x0300(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AReadyOrNotPlayerController*                           PlayerController;                                        // 0x0308(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector2D                                AccumulatedMouseDelta;                                   // 0x0310(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void UpdateMapFloors(TArray<struct FBuildingFloor> Floors);
		void TeamChatPressed();
		void ShowTutorialPrompt(const class FString& MessageID, bool bFirstShowing, const class FText& MessageTitle, TArray<class FText> MessageContent);
		void ShowTutorialOverview(const class FString& MessageID, const class FText& MessageTitle, TArray<class FText> MessageContent);
		void ShowHUD();
		void RemovePlayerActionPrompt_Reserved(int32_t InSlot);
		void RemovePlayerActionPrompt(int32_t InSlot);
		void RemoveMapActor(class UMapActorComponent* MapActorComponent);
		void ReflectHUDSettings();
		void OnInventoryItemsChanged();
		bool IsActionSlotInUse_Reserved(int32_t InSlot);
		bool IsActionSlotInUse(int32_t InSlot);
		void HideTutorialPrompt(const class FString& MessageID);
		void HideTutorialOverview(const class FString& MessageID);
		void HideHUD();
		void ClearAllPlayerActionPrompts();
		void ChatPressed();
		int32_t AssignPlayerActionPromptToFreeSlot_Reserved(const struct FKey& InputKey, EInputEvent InputEvent, const class FText& InActionText, const class FString& InColorLabel, bool bAnimate, bool bLoopAnimation);
		void AssignPlayerActionPromptToFreeSlot(const struct FKey& InputKey, EInputEvent InputEvent, const class FText& InActionText, const class FString& InColorLabel, bool bAnimate, bool bLoopAnimation);
		void AssignPlayerActionPrompt_Reserved(int32_t InSlot, const struct FKey& InputKey, EInputEvent InputEvent, const class FText& InActionText, const class FString& InColorLabel, bool bAnimate, bool bLoopAnimation);
		void AssignPlayerActionPrompt_Custom(int32_t InSlot, const class FText& InCustomPromptText, bool bAnimate, bool bLoopAnimation);
		void AssignPlayerActionPrompt(int32_t InSlot, const struct FKey& InputKey, EInputEvent InputEvent, const class FText& InActionText, const class FString& InColorLabel, bool bAnimate, bool bLoopAnimation);
		void AddScorePopup(const class FText& ScoreText, int32_t ScoreValue, bool bGive);
		class UMapActorWidget* AddMapActor(class UMapActorComponent* MapActorComponent, class UMapActorWidget* MapActorIconWidgetClass, const struct FSlateBrush& IconBrush, const struct FLinearColor& IconColor, const struct FLinearColor& IconTextColor, float RotationOffset);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ListenForIncapacitation
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IListenForIncapacitation : public IInterface
	{
	public:
		void OnCharacterIncapacitated(class AReadyOrNotCharacter* Victim, class AReadyOrNotCharacter* Killer, class AActor* Inflictor);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.LobbyGM
	 * Size -> 0x0020 (FullSize[0x0770] - InheritedSize[0x0750])
	 */
	class ALobbyGM : public AReadyOrNotGameMode
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0750(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AReadyOrNotPlayerController*>                   InitalizedPlayerControllers;                             // 0x0758(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x0768(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.IconWidget
	 * Size -> 0x0010 (FullSize[0x0270] - InheritedSize[0x0260])
	 */
	class UIconWidget : public UUserWidget
	{
	public:
		class UImage*                                                MainImage;                                               // 0x0260(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractableComponent*                                ParentComponent;                                         // 0x0268(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		class FString GetAttachedObjectName();
		class UTexture2D* GetAttachedObjectIcon();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MissionPlanWidget
	 * Size -> 0x0030 (FullSize[0x0290] - InheritedSize[0x0260])
	 */
	class UMissionPlanWidget : public UUserWidget
	{
	public:
		float                                                        LineThickness;                                           // 0x0260(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FadeTime;                                                // 0x0264(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                          LineColor;                                               // 0x0268(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                          ActiveLineColor;                                         // 0x0278(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0288(0x0008) MISSED OFFSET (PADDING)

	public:
		void RemoveMarker(int32_t ID);
		void RemoveLine(int32_t ID);
		void OnMarkerRemoved(int32_t ID);
		void OnMarkerAdded(int32_t ID, const struct FPlanningMarker& Marker);
		void OnLineRemoved(int32_t ID);
		void OnLineAdded(int32_t ID, const struct FPlanningLine& Line);
		void AddMarker(const struct FPlanningMarker& Marker);
		void AddLine(const struct FPlanningLine& Line);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.LobbyGS
	 * Size -> 0x0018 (FullSize[0x09F0] - InheritedSize[0x09D8])
	 */
	class ALobbyGS : public AReadyOrNotGameState
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x09D8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            LobbyMusicEvent;                                         // 0x09E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x09E8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MapActorIconWidget
	 * Size -> 0x0010 (FullSize[0x02C0] - InheritedSize[0x02B0])
	 */
	class UMapActorIconWidget : public UMapActorWidget
	{
	public:
		class UImage*                                                Icon_Image;                                              // 0x02B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Icon_Image_BG;                                           // 0x02B8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void SetIconColor(const struct FLinearColor& InIconColor);
		void SetIconBrushStyle(const struct FSlateBrush& InIconBrush, const struct FLinearColor& InIconColor);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ImpactEffect
	 * Size -> 0x0AF8 (FullSize[0x0D18] - InheritedSize[0x0220])
	 */
	class AImpactEffect : public AActor
	{
	public:
		TArray<class UParticleSystemComponent*>                      SpawnedParticles;                                        // 0x0220(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x110];                                 // 0x0230(0x0110) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bPlayDefaultIfNull;                                      // 0x0340(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x0341(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        DecalScale;                                              // 0x0344(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x8];                                   // 0x0348(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        DecalMinSize;                                            // 0x0350(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DecalMaxSize;                                            // 0x0354(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ParticleScale;                                           // 0x0358(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x4];                                   // 0x035C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            FMODSoundFx;                                             // 0x0360(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            FMODHitmarker;                                           // 0x0368(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DecalMeshScaleMultiplier;                                // 0x0370(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bBulletGoneThroughPlayer;                                // 0x0374(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bArmorImpact;                                            // 0x0375(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSpawnParticle;                                          // 0x0376(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x1];                                   // 0x0377(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UMaterialInterface*>                            BloodExitDecals;                                         // 0x0378(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             DefaultImpactFx;                                         // 0x0388(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Aluminium;                                           // 0x03B8(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Asphalt;                                             // 0x03E8(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Brick;                                               // 0x0418(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_CarbonFibre;                                         // 0x0448(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Cardboard;                                           // 0x0478(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Ceramic;                                             // 0x04A8(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_ConcreteSoft;                                        // 0x04D8(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_ConcreteStrong;                                      // 0x0508(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Dirt;                                                // 0x0538(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Drywall;                                             // 0x0568(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Electrical;                                          // 0x0598(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_EnergyShield;                                        // 0x05C8(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Fabric_Carpet;                                       // 0x05F8(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Fabric_Stuffing;                                     // 0x0628(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Fabric_Thin;                                         // 0x0658(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Flesh;                                               // 0x0688(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Galvanized;                                          // 0x06B8(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Glass_Plate;                                         // 0x06E8(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Glass_Windshield;                                    // 0x0718(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Grass;                                               // 0x0748(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Gravel;                                              // 0x0778(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Ice;                                                 // 0x07A8(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Lava;                                                // 0x07D8(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Lead;                                                // 0x0808(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Leaves;                                              // 0x0838(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Limestone;                                           // 0x0868(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Mahogany;                                            // 0x0898(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Marble_Coated;                                       // 0x08C8(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Marble_Thick;                                        // 0x08F8(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Mud;                                                 // 0x0928(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Oil;                                                 // 0x0958(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Paper;                                               // 0x0988(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Pine;                                                // 0x09B8(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Plaster;                                             // 0x09E8(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Plastic;                                             // 0x0A18(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Plywood;                                             // 0x0A48(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Polystyrene;                                         // 0x0A78(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Powder;                                              // 0x0AA8(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Rock;                                                // 0x0AD8(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Rubber;                                              // 0x0B08(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Sand;                                                // 0x0B38(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Snow;                                                // 0x0B68(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Soil;                                                // 0x0B98(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Steel;                                               // 0x0BC8(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Tin;                                                 // 0x0BF8(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Treewood;                                            // 0x0C28(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Wallpaper;                                           // 0x0C58(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Water;                                               // 0x0C88(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Vehicle;                                             // 0x0CB8(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactFx                                             RON_Bulletproof_Glass;                                   // 0x0CE8(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.LockPickDoorActivity
	 * Size -> 0x0000 (FullSize[0x0218] - InheritedSize[0x0218])
	 */
	class ULockPickDoorActivity : public UDoorInteractionActivity
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MoveActivity
	 * Size -> 0x00B0 (FullSize[0x02D8] - InheritedSize[0x0228])
	 */
	class UMoveActivity : public UTeamBaseActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0xB0];                                  // 0x0228(0x00B0) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MusicSequencerBase
	 * Size -> 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
	 */
	class AMusicSequencerBase : public AActor
	{
	public:
		class USceneComponent*                                       Scene;                                                   // 0x0220(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void OnStoppedAudio();
		void OnStartedTransitioningToState(EMusicState NewState);
		void OnAudioReset();
		void Multicast_StopAudio();
		void Multicast_StartTransitioningToState(EMusicState NewState);
		void Multicast_ResetAudio();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MusicSequencerUnreal
	 * Size -> 0x0030 (FullSize[0x0258] - InheritedSize[0x0228])
	 */
	class AMusicSequencerUnreal : public AMusicSequencerBase
	{
	public:
		unsigned char                                                UnknownData_0000[0x20];                                  // 0x0228(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAudioComponent*                                       AudioPlayer;                                             // 0x0248(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMusicState                                                  CurrentState;                                            // 0x0250(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMusicState                                                  NextState;                                               // 0x0251(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMusicState                                                  NextScriptedState;                                       // 0x0252(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x5];                                   // 0x0253(0x0005) MISSED OFFSET (PADDING)

	public:
		void PlayScriptedMusic(class USoundCue* Music, EMusicState NewScriptedState, bool bImmediately);
		void OnAudioPlaybackPercent(class USoundWave* PlayingSoundWave, float PlaybackPercent);
		void OnAudioFinished();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MissionPortal
	 * Size -> 0x00A0 (FullSize[0x02F0] - InheritedSize[0x0250])
	 */
	class AMissionPortal : public AReadyOrNotTriggerVolume
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0250(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInteractableComponent*                                InteractableComponent;                                   // 0x0258(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class AReadyOrNotGameMode*>                           SelectableGameModes;                                     // 0x0260(0x0010) Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate
		class UReadyOrNotProfile*                                    Profile;                                                 // 0x0270(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UTextRenderComponent*                                  WhiteboardText;                                          // 0x0278(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x5];                                   // 0x0280(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bUseCountdown;                                           // 0x0285(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x2];                                   // 0x0286(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        LobbyAutoStartCountdown;                                 // 0x0288(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MinPlayersForAutostart;                                  // 0x028C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                                MissionURL;                                              // 0x0290(0x0010) Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                                ModeURL;                                                 // 0x02A0(0x0010) Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UStaticMeshComponent*>                          CompsToOutline;                                          // 0x02B0(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		TArray<class ULightComponent*>                               LightsToEnable;                                          // 0x02C0(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		TArray<class UStaticMeshComponent*>                          CompsToOutlineMissionSelected;                           // 0x02D0(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		TArray<class ULightComponent*>                               LightsToEnableMissionSelected;                           // 0x02E0(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected

	public:
		void SetSelectedMode(const class FName& InMode);
		void SetSelectedMission(const class FString& InMissionURL);
		void OnRep_MissionURL();
		bool IsMissionStarting(bool* bStarting, float* Countdown);
		bool IsLevelUnlocked(const class FString& InUrl, bool* OutbUnlocked, float* OutScoreRequired, class FString* OutLockedURl);
		bool IsGameModeSelectable(ECOOPMode InMode);
		bool GetSelectedModeName(class FString* OutName);
		bool GetSelectedMode(class FString* OutMode);
		void GetSelectedMission(class FString* OutMissionURL);
		bool GetPlayersReady(int32_t* Ready, int32_t* Total);
		bool GetAutostartCountdown(float* Countdown);
		bool DoesLevelExistInBuild(const class FString& InUrl);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavSphereObstacle
	 * Size -> 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
	 */
	class ANavSphereObstacle : public AActor
	{
	public:
		class USphereComponent*                                      NavObstacleSphereComponent;                              // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MoveAndClearQuestNode
	 * Size -> 0x0060 (FullSize[0x02D0] - InheritedSize[0x0270])
	 */
	class UMoveAndClearQuestNode : public UBaseTeamQuestNode
	{
	public:
		int32_t                                                      SWATNeededToPass;                                        // 0x0270(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x0274(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReadyOrNotTriggerVolume*                              ClearTriggerVolume;                                      // 0x0278(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TSet<class ASWATCharacter*>                                  SWATCleared;                                             // 0x0280(0x0050) Edit, EditConst, Protected, NativeAccessSpecifierProtected

	public:
		void OnSWATBeginOverlap(class AActor* VolumeActor, class AActor* OverlappingActor);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.IncapacitatedHuman
	 * Size -> 0x00A0 (FullSize[0x02C0] - InheritedSize[0x0220])
	 */
	class AIncapacitatedHuman : public AActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x18];                                  // 0x0220(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                       DefaultScene;                                            // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USkeletalMeshComponent*                                HumanMesh;                                               // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USkeletalMeshComponent*                                HumanMeshFace;                                           // 0x0248(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInteractableComponent*                                ReportInteractableComponent;                             // 0x0250(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UScoringComponent*                                     ScoringComponent;                                        // 0x0258(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODAudioComponent*                                   IncapacitatedAudioComponent;                             // 0x0260(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPhysicsAsset*                                         RagdollPhysicsAsset;                                     // 0x0268(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimMontage*                                          DyingMontage;                                            // 0x0270(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODEvent*                                            FMODEventLoop;                                           // 0x0278(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystem*                                       ShotParticleEffect;                                      // 0x0280(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bStartDead;                                              // 0x0288(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bCanEverDieByTime;                                       // 0x0289(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x2];                                   // 0x028A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        TimeRemainingUntilDead;                                  // 0x028C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bIsInGroup;                                              // 0x0290(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bIsMasterOfGroup;                                        // 0x0291(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x6];                                   // 0x0292(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AIncapacitatedHuman*>                           IncapacitatedHumansInGroup;                              // 0x0298(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		class AIncapacitatedHuman*                                   MasterHumanInGroup;                                      // 0x02A8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bAttachReportInteractableToMesh;                         // 0x02B0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0003[0x3];                                   // 0x02B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                  SocketToAttach;                                          // 0x02B4(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ETeamType                                                    Team;                                                    // 0x02BC(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bIsDead;                                                 // 0x02BD(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bHasBeenReported;                                        // 0x02BE(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0004[0x1];                                   // 0x02BF(0x0001) MISSED OFFSET (PADDING)

	public:
		void SelectAllInGroup();
		void MakeMasterInGroup();
		bool HasBeenReported();
		void EnableOutline(EActorOutlineType OutlineType);
		void DisableOutline();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavSplinePathRenderingComponent
	 * Size -> 0x00B0 (FullSize[0x0500] - InheritedSize[0x0450])
	 */
	class UNavSplinePathRenderingComponent : public UPrimitiveComponent
	{
	public:
		unsigned char                                                UnknownData_0000[0xB0];                                  // 0x0450(0x00B0) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Referendum
	 * Size -> 0x0088 (FullSize[0x02A8] - InheritedSize[0x0220])
	 */
	class AReferendum : public AActor
	{
	public:
		class FText                                                  ReferendumName;                                          // 0x0220(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                  ReferendumDescription;                                   // 0x0238(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		float                                                        ReferendumTime;                                          // 0x0250(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ReferendumHoldingTime;                                   // 0x0254(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      YesVotes;                                                // 0x0258(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      NoVotes;                                                 // 0x025C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ReferendumTimeRemaining;                                 // 0x0260(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ReferendumHoldingTimeRemaining;                          // 0x0264(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bReferendumRunning;                                      // 0x0268(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bReferendumWaitingToTakeEffect;                          // 0x0269(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x6];                                   // 0x026A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReadyOrNotPlayerState*                                ReferendumCaller;                                        // 0x0270(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AReadyOrNotPlayerController*>                   YesVoters;                                               // 0x0278(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class AReadyOrNotPlayerController*>                   NoVoters;                                                // 0x0288(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class AReadyOrNotPlayerController*>                   EligibleVoters;                                          // 0x0298(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		void OnReferendumPassed();
		void OnAnnounceYesVote(class AReadyOrNotPlayerState* Voter);
		void OnAnnounceVoteStarted(class AReadyOrNotPlayerState* CallingVoter);
		void OnAnnounceVotePassed();
		void OnAnnounceVoteFailed();
		void OnAnnounceNoVote(class AReadyOrNotPlayerState* Voter);
		void Multicast_AnnounceYesVote(class AReadyOrNotPlayerState* Voter);
		void Multicast_AnnounceVoteStarted(class AReadyOrNotPlayerState* CallingVoter);
		void Multicast_AnnounceVotePassed();
		void Multicast_AnnounceVoteFailed();
		void Multicast_AnnounceNoVote(class AReadyOrNotPlayerState* Voter);
		class FText GetHudDescription();
		void CastedYesVote(class AReadyOrNotPlayerController* Voter);
		void CastedNoVote(class AReadyOrNotPlayerController* Voter);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MoveIntoLOSActivity
	 * Size -> 0x0008 (FullSize[0x0200] - InheritedSize[0x01F8])
	 */
	class UMoveIntoLOSActivity : public UBaseActivity
	{
	public:
		class AActor*                                                LOSActor;                                                // 0x01F8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ListenForInjury
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IListenForInjury : public IInterface
	{
	public:
		void OnCharacterInjured(class AReadyOrNotCharacter* Victim, float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.LicenseSave
	 * Size -> 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
	 */
	class ULicenseSave : public USaveGame
	{
	public:
		bool                                                         bAcceptedAlphaNonDisclosureAgreement;                    // 0x0028(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)

	public:
		void AcceptAlphaNDA();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.IncriminationClue
	 * Size -> 0x0070 (FullSize[0x02F8] - InheritedSize[0x0288])
	 */
	class AIncriminationClue : public APickupActor
	{
	public:
		class UMulticastInlineDelegate                               Delegate_OnClueFound;                                    // 0x0288(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xF];                                   // 0x0289(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMapActorComponent*                                    MapActorComponent;                                       // 0x0298(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint8_t                                                      ClueNumber;                                              // 0x02A0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x02A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        ShowObjectiveMarkerIn;                                   // 0x02A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AIncriminationClue*                                    NextClue;                                                // 0x02A8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FText                                                  ClueName;                                                // 0x02B0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, Net, Protected, NativeAccessSpecifierProtected
		class FText                                                  ClueFoundMessage;                                        // 0x02C8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, Net, Protected, NativeAccessSpecifierProtected
		class AIncriminationClueSpawnPoint*                          SpawnPointOwner;                                         // 0x02E0(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bClueFound : 1;                                          // 0x02E8(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bClueTimerExpired : 1;                                   // 0x02E8(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EClueState                                                   ClueState;                                               // 0x02E9(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0xE];                                   // 0x02EA(0x000E) MISSED OFFSET (PADDING)

	public:
		void RevealNextClue();
		void OnRep_OnClueStateChanged();
		void OnRep_OnClueFound();
		void OnClueFound__DelegateSignature(class AIncriminationClue* ClueActor, class AActor* ClueFounder);
		void OnClueFound();
		bool IsClueFound();
		void Init(class AIncriminationClueSpawnPoint* OwningSpawn, uint8_t InClueNumber, const class FText& InClueName, const class FText& InClueFoundMessage, float InShowObjectiveMarkerIn);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavigationSplinePathPreview
	 * Size -> 0x0080 (FullSize[0x02A0] - InheritedSize[0x0220])
	 */
	class ANavigationSplinePathPreview : public AActor
	{
	public:
		float                                                        PathPointDistanceThreshold;                              // 0x0220(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                      PathPointSubStep;                                        // 0x0224(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bDrawRawPath : 1;                                        // 0x0228(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bDrawRawPathPoints : 1;                                  // 0x0228(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bDrawSmoothedPath : 1;                                   // 0x0228(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bDrawSmoothedPathPoints : 1;                             // 0x0228(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bDrawSmoothedPathPointsDetail : 1;                       // 0x0228(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x0229(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        PathLineThickness;                                       // 0x022C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x70];                                  // 0x0230(0x0070) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.WeaponAttachment
	 * Size -> 0x0130 (FullSize[0x0FF8] - InheritedSize[0x0EC8])
	 */
	class UWeaponAttachment : public USkeletalMeshComponent
	{
	public:
		TArray<class UMaterialInstanceDynamic*>                      SkinMaterials;                                           // 0x0EC8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		EWeaponAttachmentType                                        WeaponAttachmentType;                                    // 0x0ED8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0ED9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EWeaponAttachmentType>                                RemovesWeaponAttachmentTypes;                            // 0x0EE0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		EWeaponUnderbarrelAnimationType                              UnderbarrelAnimationType;                                // 0x0EF0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bNeedNotAttach;                                          // 0x0EF1(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bNullAttachmentOnly;                                     // 0x0EF2(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x1];                                   // 0x0EF3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                  SocketAttachment;                                        // 0x0EF4(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x0EFC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                  ItemName;                                                // 0x0F00(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		int32_t                                                      PointCost;                                               // 0x0F18(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x4];                                   // 0x0F1C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAttachmentUIElements                                 UIElements;                                              // 0x0F20(0x0078) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<EItemAttachment>                                      AdditionalAttachments;                                   // 0x0F98(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                        AttachmentWeight;                                        // 0x0FA8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        VerticalRecoilMultiplier;                                // 0x0FAC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        HorizontalRecoilMultiplier;                              // 0x0FB0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SpreadMultiplier;                                        // 0x0FB4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DeadzoneMultiplier;                                      // 0x0FB8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MuzzleVelocityMultiplier;                                // 0x0FBC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LowReadyLengthMultiplier;                                // 0x0FC0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShouldSupressWeapon;                                    // 0x0FC4(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHidesMuzzleFlash;                                       // 0x0FC5(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bOverrideMuzzleFlash;                                    // 0x0FC6(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x1];                                   // 0x0FC7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                       MuzzleFlashParticle;                                     // 0x0FC8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                       MuzzleSmokeParticle;                                     // 0x0FD0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x4];                                   // 0x0FD8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      MagazineAmmoIncrease;                                    // 0x0FDC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  HideBoneOnMesh;                                          // 0x0FE0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CameraBobAdditionFactor;                                 // 0x0FE8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ADS_Speed_Multiplier;                                    // 0x0FEC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            ToggleSound;                                             // 0x0FF0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void PlayToggleSound();
		void ApplyWetness(float Wetness, float RainAmount);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.LightAttachment
	 * Size -> 0x0108 (FullSize[0x1100] - InheritedSize[0x0FF8])
	 */
	class ULightAttachment : public UWeaponAttachment
	{
	public:
		class USpotLightComponent*                                   SpotLightComponent;                                      // 0x0FF8(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPointLightComponent*                                  PointLightComponent;                                     // 0x1000(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRepOn;                                                  // 0x1008(0x0001) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x1009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        Intensity;                                               // 0x1010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        BouncedIntensity;                                        // 0x1014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        Attenuation;                                             // 0x1018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        InnerConeAngle;                                          // 0x101C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        OuterConeAngle;                                          // 0x1020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                          LightColor;                                              // 0x1024(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x1034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialInterface*                                    LightFunctionMaterial;                                   // 0x1038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  LightFunctionScale;                                      // 0x1040(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x104C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ALensFlare*                                            LensFlareClass;                                          // 0x1050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ALensFlare*                                            SpawnedLensFlare;                                        // 0x1058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      NumOfFlashLightTrackingPoints;                           // 0x1060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x4];                                   // 0x1064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AFlashLightTrackingPoint*>                      FlashLightTrackingPoints;                                // 0x1068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		class AFlashLightTrackingPoint*                              PrimaryTrackingPoint;                                    // 0x1078(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x70];                                  // 0x1080(0x0070) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bLightOffDueToNotBeingEquipped;                          // 0x10F0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0xF];                                   // 0x10F1(0x000F) MISSED OFFSET (PADDING)

	public:
		void ToggleLight(bool bOn);
		void OnRep_On();
		bool IsLightOn();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Tool
	 * Size -> 0x0018 (FullSize[0x08E0] - InheritedSize[0x08C8])
	 */
	class ATool : public ABaseItem
	{
	public:
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x08C8(0x0004) Fix Super Size
		float                                                        CurrentOperatingTime;                                    // 0x08CC(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bOperating : 1;                                          // 0x08D0(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x08D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                                TargetActor;                                             // 0x08D8(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void StopUsingTool(class AActor* Target);
		void StartUsingTool(class AActor* Target);
		void Server_ToolComplete();
		void Server_StopUsingTool(class AActor* Target);
		void Server_StartUsingTool(class AActor* Target);
		bool IsOperating();
		float GetMaxOperatingTime();
		float GetCurrentOperatingTime();
		void Client_StopToolAnimation();
		void Client_FinishedToolUse(class AActor* Target, class APlayerCharacter* PC);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NeutralizeSuspectByTag
	 * Size -> 0x0010 (FullSize[0x0280] - InheritedSize[0x0270])
	 */
	class ANeutralizeSuspectByTag : public AObjective
	{
	public:
		class FName                                                  SuspectTag;                                              // 0x0270(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRequireArrest;                                          // 0x0278(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAllowIncapacitation;                                    // 0x0279(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x6];                                   // 0x027A(0x0006) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MoveToPlayerSpawn
	 * Size -> 0x0008 (FullSize[0x0220] - InheritedSize[0x0218])
	 */
	class UMoveToPlayerSpawn : public UBaseCombatMoveActivity
	{
	public:
		bool                                                         bBeArrestedOnceReachedLocation;                          // 0x0218(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0219(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.IncriminationClueSpawnPoint
	 * Size -> 0x0058 (FullSize[0x0290] - InheritedSize[0x0238])
	 */
	class AIncriminationClueSpawnPoint : public AActorSpawnPoint
	{
	public:
		class AIncriminationClue*                                    IncriminationClueClass;                                  // 0x0238(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                                ClueFlareClass;                                          // 0x0240(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint8_t                                                      ClueNumber;                                              // 0x0248(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x0249(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        ShowObjectiveMarkerIn;                                   // 0x024C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                  ClueName;                                                // 0x0250(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                  ClueFoundMessage;                                        // 0x0268(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x10];                                  // 0x0280(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.LightningGenerator
	 * Size -> 0x00A8 (FullSize[0x02C8] - InheritedSize[0x0220])
	 */
	class ALightningGenerator : public AActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                       SceneRoot;                                               // 0x0230(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAudioComponent*                                       Thunder;                                                 // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                              ParticleComponent;                                       // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ParticleSpawnChance;                                     // 0x0248(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x024C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UParticleSystem*>                               ParticleTemplates;                                       // 0x0250(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class USoundBase*>                                    ThunderSounds;                                           // 0x0260(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class UDirectionalLightComponent*                            Lightning;                                               // 0x0270(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ThunderDelayMin;                                         // 0x0278(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ThunderDelayMax;                                         // 0x027C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                          LightningColorMin;                                       // 0x0280(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                          LightningColorMax;                                       // 0x0290(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LightningDelayMin;                                       // 0x02A0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LightningDelayMax;                                       // 0x02A4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LightningIntensityMin;                                   // 0x02A8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LightningIntensityMax;                                   // 0x02AC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LightningIntensityDecay;                                 // 0x02B0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LightningIntensityJitterMin;                             // 0x02B4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LightningIntensityJitterMax;                             // 0x02B8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LightningIntensityJitterTimeMin;                         // 0x02BC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LightningIntensityJitterTimeMax;                         // 0x02C0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LightningJitterTimeRemaining;                            // 0x02C4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void PlayThunder();
		void PlayLightning();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Multitool
	 * Size -> 0x0090 (FullSize[0x0970] - InheritedSize[0x08E0])
	 */
	class AMultitool : public ATool
	{
	public:
		TMap<EMultitoolFunctions, class UReadyOrNotWeaponAnimData*>  MultitoolAnimData;                                       // 0x08E0(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UInteractionsData*                                     PvPFreeInteraction;                                      // 0x0930(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMultitoolFunctions                                          CurrentToolKit;                                          // 0x0938(0x0001) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAudioBasedProgress : 1;                                 // 0x0939(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x6];                                   // 0x093A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            FMODLockpickingSound;                                    // 0x0940(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            FMODKnifeSound;                                          // 0x0948(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            FMODWirecutterSound;                                     // 0x0950(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            FMODFreeingSound;                                        // 0x0958(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APlayerCharacter*                                      PendingFreeCharacter;                                    // 0x0960(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x0968(0x0008) MISSED OFFSET (PADDING)

	public:
		float GetMultitoolOperatingTimeFromToolkit(EMultitoolFunctions MultitoolFunction);
		float GetMultitoolOperatingTimeFromAudioLength(class UFMODEvent* Event);
		float GetMultitoolOperatingTimeFromActiveToolkit();
		void Client_StopMultitoolAudio();
		void Client_PlayMultitoolAudio();
		void Client_ChangeToolkit(EMultitoolFunctions MultitoolFunction, bool bPlayAnimation);
		void ChangeToolkit(EMultitoolFunctions MultitoolFunction, bool bPlayAnimation);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.LockpickGun
	 * Size -> 0x0000 (FullSize[0x08E0] - InheritedSize[0x08E0])
	 */
	class ALockpickGun : public ATool
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ListenForPickup
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IListenForPickup : public IInterface
	{
	public:
		void OnEvidencePickedUpByPlayer(class ABaseItem* EvidenceActor);
		void OnEvidenceDropped(class ABaseItem* EvidenceActor);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ListenForArrest
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IListenForArrest : public IInterface
	{
	public:
		void OnCharacterArrested(class AReadyOrNotCharacter* ArrestedCharacter, class AReadyOrNotCharacter* Arrester);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MusicData
	 * Size -> 0x0088 (FullSize[0x00B8] - InheritedSize[0x0030])
	 */
	class UMusicData : public UDataAsset
	{
	public:
		struct FMusicTrack                                           PreplanningTrack;                                        // 0x0030(0x0028) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FMusicTrack                                           AmbientTrack;                                            // 0x0058(0x0028) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FMusicTrack                                           ActionTrack;                                             // 0x0080(0x0028) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FMusicTrackFMOD                                       FMODTracks;                                              // 0x00A8(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.LookupData
	 * Size -> 0x00C8 (FullSize[0x00F8] - InheritedSize[0x0030])
	 */
	class ULookupData : public UDataAsset
	{
	public:
		bool                                                         bToggleToDoAssetUpdate;                                  // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<TSoftClassPtr<class ABaseItem>>                       Items;                                                   // 0x0038(0x0010) Edit, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPrivate
		TArray<TSoftClassPtr<class ABaseWeapon>>                     Weapons;                                                 // 0x0048(0x0010) Edit, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPrivate
		TArray<TSoftClassPtr<class ABaseArmour>>                     Armour;                                                  // 0x0058(0x0010) Edit, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPrivate
		TArray<TSoftClassPtr<class ABaseGrenade>>                    Grenades;                                                // 0x0068(0x0010) Edit, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPrivate
		TArray<TSoftClassPtr<class ABaseShell>>                      Shells;                                                  // 0x0078(0x0010) Edit, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPrivate
		TArray<TSoftClassPtr<class AProjectile>>                     Projectiles;                                             // 0x0088(0x0010) Edit, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPrivate
		TArray<TSoftClassPtr<class APlayerCharacter>>                Characters;                                              // 0x0098(0x0010) Edit, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPrivate
		TArray<TSoftClassPtr<class ACyberneticCharacter>>            AI;                                                      // 0x00A8(0x0010) Edit, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPrivate
		bool                                                         bAddSelectedBlueprintToItemData;                         // 0x00B8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x00B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ABaseItem*>                                     biClassArray;                                            // 0x00C0(0x0010) Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate
		class UDataTable*                                            ItemDataLookupTable;                                     // 0x00D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                         bToggleForceLevelDataTable;                              // 0x00D8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0002[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDataTable*                                            LevelDataLookupTable;                                    // 0x00E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                         bToggleForceAIData;                                      // 0x00E8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0003[0x7];                                   // 0x00E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDataTable*                                            AIDataLookupTable;                                       // 0x00F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void EmptyData();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NinebangDamageType
	 * Size -> 0x0000 (FullSize[0x0620] - InheritedSize[0x0620])
	 */
	class UNinebangDamageType : public UStunDamage
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ListenForDeath
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IListenForDeath : public IInterface
	{
	public:
		void OnCharacterDied(class AReadyOrNotCharacter* Victim, class AReadyOrNotCharacter* Killer, class AActor* Inflictor);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NightvisionGoggles
	 * Size -> 0x05B8 (FullSize[0x1A20] - InheritedSize[0x1468])
	 */
	class ANightvisionGoggles : public AHeadwear
	{
	public:
		class UUserWidget*                                           SpawnedWidget;                                           // 0x1468(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture2D*                                            Green_LUT;                                               // 0x1470(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                            White_LUT;                                               // 0x1478(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialParameterCollection*                          GlobalMaterialParameters;                                // 0x1480(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  NVGGlobalParameterName;                                  // 0x1488(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUserWidget*                                           NightVisionFirstPersonWidget;                            // 0x1490(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x1498(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPostProcessSettings                                  NightVisionPostProcess;                                  // 0x14A0(0x0560) Edit, d.e.o.i, NativeAccessSpecifierPublic
		bool                                                         bNVGOn;                                                  // 0x1A00(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bTogglingNVG;                                            // 0x1A01(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x6];                                   // 0x1A02(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UDamageType*>                                   BlockDamageTypesWhileActive;                             // 0x1A08(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x8];                                   // 0x1A18(0x0008) MISSED OFFSET (PADDING)

	public:
		void SpawnNightvisionWidget();
		void Server_SetTogglingNVG(bool bNewTogglingNVG);
		void OnNightvisionDeactivated();
		void OnNightvisionActivated();
		void DestroyNightvisionWidget();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.LoudnessMeterWidget
	 * Size -> 0x0018 (FullSize[0x0290] - InheritedSize[0x0278])
	 */
	class ULoudnessMeterWidget : public UBaseWidget
	{
	public:
		class UWidgetSwitcher*                                       MovementSound_WidgetSwitcher;                            // 0x0278(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class APlayerCharacter*                                      PlayerCharacter;                                         // 0x0280(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0288(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MusicManager
	 * Size -> 0x0018 (FullSize[0x0238] - InheritedSize[0x0220])
	 */
	class AMusicManager : public AInfo
	{
	public:
		class UFMODEvent*                                            MusicEvent;                                              // 0x0220(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FFMODEventInstance                                    MusicEventInst;                                          // 0x0228(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FTimerHandle                                          TH_UpdateMusicParameters;                                // 0x0230(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void UpdateMusicParameters();
		void StopTheMusic(bool bGoHome);
		void StopMusicParametersUpdate();
		void StartMusicParametersUpdate();
		void SetMusicParameterValue(const class FString& paramName, float ParamValue);
		void ResumeMusicParametersUpdate();
		void PauseMusicParametersUpdate();
		TArray<class FString> GetMusicParameters();
		class AMusicManager* Get();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MagazineAttachment
	 * Size -> 0x0018 (FullSize[0x1010] - InheritedSize[0x0FF8])
	 */
	class UMagazineAttachment : public UWeaponAttachment
	{
	public:
		class UStaticMesh*                                           MagazineStaticMesh;                                      // 0x0FF8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  Socket_01;                                               // 0x1000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  Socket_02;                                               // 0x1008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ModData
	 * Size -> 0x01D0 (FullSize[0x01F8] - InheritedSize[0x0028])
	 */
	class UModData : public UObject
	{
	public:
		unsigned char                                                UnknownData_0000[0x1D0];                                 // 0x0028(0x01D0) MISSED OFFSET (PADDING)

	public:
		bool IsSubscribed();
		bool IsInstalled();
		int32_t GetTotalRatings();
		int32_t GetSubscriptions();
		class FString GetResourceID();
		class FString GetRatingDisplayText();
		int32_t GetPositiveRatings();
		int32_t GetPositiveRatingPercent();
		int32_t GetPopularityRank();
		int32_t GetNegativeRatings();
		class FString GetModURL();
		class FString GetModName();
		class FString GetModAuthor();
		struct PCoreUObject_FDateTime GetLastUpdated();
		int32_t GetGalleryImageCount();
		int32_t GetDownloadSize();
		int32_t GetDownloads();
		class FText GetDescription();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ObjectivePoint
	 * Size -> 0x0018 (FullSize[0x0238] - InheritedSize[0x0220])
	 */
	class AObjectivePoint : public AActor
	{
	public:
		class AActor*                                                TiedToActor;                                             // 0x0220(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObjectiveMarkerComponent*                             ObjectiveMarkerComponent;                                // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMapActorComponent*                                    MapActorComponent;                                       // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void ToggleObjectiveMarkerVisibility();
		void ShowObjectiveMarker();
		void InitSettings(const struct FSlateBrush& Icon, const class FText& Text, float ShowMarkerAtDistance);
		void HideObjectiveMarker();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlayDeadActivity
	 * Size -> 0x0020 (FullSize[0x0218] - InheritedSize[0x01F8])
	 */
	class UPlayDeadActivity : public UBaseActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x20];                                  // 0x01F8(0x0020) MISSED OFFSET (PADDING)

	public:
		void OnStunned(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
		void OnHeardYell(class AReadyOrNotCharacter* Shouter, bool bLOS);
		void OnDamaged(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ObituaryData
	 * Size -> 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
	 */
	class UObituaryData : public UDataAsset
	{
	public:
		TMap<class FName, struct FObituaryForBone>                   PointDeathMessages;                                      // 0x0030(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<class FText>                                          DefaultBulletDeathText;                                  // 0x0080(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.OcclusionTestActor
	 * Size -> 0x0048 (FullSize[0x0268] - InheritedSize[0x0220])
	 */
	class AOcclusionTestActor : public AActor
	{
	public:
		float                                                        OcclusionMultiplier;                                     // 0x0220(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FullOcclusionDepth;                                      // 0x0224(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TickInterval;                                            // 0x0228(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         GunshotOrFootstep;                                       // 0x022C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x022D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            GunshotSound;                                            // 0x0230(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsOutside;                                              // 0x0238(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x0239(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            FootstepSound;                                           // 0x0240(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            FoleySound;                                              // 0x0248(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHeavyArmor;                                             // 0x0250(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsCrouching;                                            // 0x0251(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x6];                                   // 0x0252(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODAudioPropagationComponent*                        FMODAudioPropagationComp;                                // 0x0258(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODAudioComponent*                                   AudioComponent;                                          // 0x0260(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlayerActionPromptWidget
	 * Size -> 0x0030 (FullSize[0x02A8] - InheritedSize[0x0278])
	 */
	class UPlayerActionPromptWidget : public UBaseWidget
	{
	public:
		class FText                                                  ActionText;                                              // 0x0278(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected
		class URichTextBlock*                                        Action_RichText;                                         // 0x0290(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetAnimation*                                      Anim_OnShow;                                             // 0x0298(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bInUse : 1;                                              // 0x02A0(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x02A1(0x0007) MISSED OFFSET (PADDING)

	public:
		void UpdateText(const class FText& InText, bool bAnimate, bool bLoopAnimation);
		bool IsInUse();
		void ClearText();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ModCardWidget
	 * Size -> 0x0010 (FullSize[0x0270] - InheritedSize[0x0260])
	 */
	class UModCardWidget : public UUserWidget
	{
	public:
		class UModData*                                              ModData;                                                 // 0x0260(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UModManagerWidget*                                     ManagerWidget;                                           // 0x0268(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void SetupMod(class UModData* InModData, class UModManagerWidget* Parent);
		bool RequestSubscription(bool bSubscribe);
		void RequestRatingReset();
		void RequestPositiveRating();
		void RequestNegativeRating();
		void RequestImage();
		void RequestGallery();
		void RequestFullSizeGalleryImage(int32_t Index);
		void OnThumbnailLoaded(class UTexture2DDynamic* Image);
		void OnRatingSubmitted();
		void OnModStateUpdated();
		void OnModSet();
		void OnLoadingStarted();
		void OnLoadingFinished(bool bSubscribed);
		void OnGalleryImageLoaded(class UTexture2DDynamic* Image, int32_t Index);
		void OnFullSizeGalleryImageLoaded(class UTexture2DDynamic* Image, int32_t Index);
		class UModData* GetModData();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlayDeadSpot
	 * Size -> 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
	 */
	class APlayDeadSpot : public AActor
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MagazineDisplayComponent
	 * Size -> 0x0030 (FullSize[0x0510] - InheritedSize[0x04E0])
	 */
	class UMagazineDisplayComponent : public UStaticMeshComponent
	{
	public:
		class ABaseMagazineWeapon*                                   FoundWeapon;                                             // 0x04E0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x04E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class USkeletalMesh*>                                 RequireMeshs;                                            // 0x04F0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		EItemCategory                                                ItemCategory;                                            // 0x0500(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x0501(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      MinimumMagazineCountToDisplay;                           // 0x0504(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  Socket;                                                  // 0x0508(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ModioAuthenticatorWidget
	 * Size -> 0x0010 (FullSize[0x0270] - InheritedSize[0x0260])
	 */
	class UModioAuthenticatorWidget : public UUserWidget
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x0260(0x0010) MISSED OFFSET (PADDING)

	public:
		void SubmitSecurityCode(const class FString& SecurityCode);
		void SubmitEmail(const class FString& EmailAddress);
		void SetupAuthenticator(class UModManagerWidget* Parent);
		void RequestSteamAuthentication();
		void OnTermsOfUseAcceptanceRequested(const class FString& Terms, const struct FTermsOfUse& Localization);
		void OnSecurityCodeRequested();
		void OnErrorSet(const class FString& ErrorMessage);
		void OnEmailRequested();
		void AcceptTermsOfUse();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ObjectiveMarkerComponent
	 * Size -> 0x0120 (FullSize[0x06C0] - InheritedSize[0x05A0])
	 */
	class UObjectiveMarkerComponent : public UWidgetComponent
	{
	public:
		bool                                                         bEnabled : 1;                                            // 0x05A0(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bStartHidden : 1;                                        // 0x05A0(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         UnknownData_0000 : 1;                                    // 0x05A0(0x0001) BIT_FIELD (PADDING)
		bool                                                         bCustomLocation : 1;                                     // 0x05A0(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bFadeOffscreen : 1;                                      // 0x05A0(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDistanceScaleIcon : 1;                                  // 0x05A0(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHideIconOffscreen : 1;                                  // 0x05A0(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCompletelyFadeWhenOverlappingOtherWidgets : 1;          // 0x05A0(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCompletelyFadeWhenClose : 1;                            // 0x05A1(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x2];                                   // 0x05A2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        FadeAtDistance_Close;                                    // 0x05A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCompletelyFadeWhenFar : 1;                              // 0x05A8(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x3];                                   // 0x05A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        FadeAtDistance_Far;                                      // 0x05AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHideDistanceInfo : 1;                                   // 0x05B0(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x3];                                   // 0x05B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        HideDistanceInfoAtDistance;                              // 0x05B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHideDirectionalArrow : 1;                               // 0x05B8(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDisplayMarkerText : 1;                                  // 0x05B8(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x7];                                   // 0x05B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                  MarkerText;                                              // 0x05C0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UObjectiveMarkerWidget*                                MarkerWidgetClass;                                       // 0x05D8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSlateBrush                                           IconBrush;                                               // 0x05E0(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FLinearColor                                          IconColorAndOpacity;                                     // 0x0668(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                IconSize;                                                // 0x0678(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDebug : 1;                                              // 0x0680(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x7];                                   // 0x0681(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObjectiveMarkerWidget*                                ObjectiveMarkerWidget_Offscreen;                         // 0x0688(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UObjectiveMarkerWidget*                                ObjectiveMarkerWidget_Onscreen;                          // 0x0690(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bIsOffscreen;                                            // 0x0698(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bRequestingFadeOut;                                      // 0x0699(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0006[0x26];                                  // 0x069A(0x0026) MISSED OFFSET (PADDING)

	public:
		void ToggleObjectiveMarkerVisibility();
		void ShowObjectiveMarker();
		void ShowMarkerText();
		void ShowIcon();
		void SetNewFadeDistance(float NewDistance);
		void SetMarkerTextFontSize(int32_t NewFontSize);
		void SetMarkerTextColor(const struct FLinearColor& InIconColorAndOpacity);
		void SetMarkerText(const class FText& NewMarkerText);
		void SetIconSize(const struct FVector2D& NewIconSize);
		void SetIconColor(const struct FLinearColor& InIconColorAndOpacity);
		void SetIconBrush(const struct FSlateBrush& NewIconBrush);
		bool IsObjectiveMarkerOffscreen();
		void HideObjectiveMarker(bool bFadeOut);
		void HideMarkerText();
		void HideIcon();
		void EnableObjectiveMarker();
		void DisableObjectiveMarker();
		bool CanShowObjectiveMarker();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlayerPaperdollWidget
	 * Size -> 0x0148 (FullSize[0x03A8] - InheritedSize[0x0260])
	 */
	class UPlayerPaperdollWidget : public UUserWidget
	{
	public:
		class UWidgetSwitcher*                                       StanceSwitcher;                                          // 0x0260(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetSwitcher*                                       Stand_CarrySwitcher;                                     // 0x0268(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetSwitcher*                                       Crouch_CarrySwitcher;                                    // 0x0270(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UOverlay*                                              Stand_Overlay;                                           // 0x0278(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UOverlay*                                              Crouch_Overlay;                                          // 0x0280(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UOverlay*                                              StandCarry_Overlay;                                      // 0x0288(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UOverlay*                                              StandNoCarry_Overlay;                                    // 0x0290(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UOverlay*                                              CrouchCarry_Overlay;                                     // 0x0298(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UOverlay*                                              CrouchNoCarry_Overlay;                                   // 0x02A0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Outline_Image;                                           // 0x02A8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Head_Image;                                              // 0x02B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Body_Image;                                              // 0x02B8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                RightArm_Image;                                          // 0x02C0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                LeftArm_Image;                                           // 0x02C8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                RightLeg_Image;                                          // 0x02D0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                LeftLeg_Image;                                           // 0x02D8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Headwear_Image;                                          // 0x02E0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                BodyArmor_Image;                                         // 0x02E8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Carry_Outline_Image;                                     // 0x02F0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Carry_Head_Image;                                        // 0x02F8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Carry_Body_Image;                                        // 0x0300(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Carry_RightArm_Image;                                    // 0x0308(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Carry_LeftArm_Image;                                     // 0x0310(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Carry_BodyArmor_Image;                                   // 0x0318(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Outline_Crouch_Image;                                    // 0x0320(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Head_Crouch_Image;                                       // 0x0328(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Body_Crouch_Image;                                       // 0x0330(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                RightArm_Crouch_Image;                                   // 0x0338(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                LeftArm_Crouch_Image;                                    // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                RightLeg_Crouch_Image;                                   // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                LeftLeg_Crouch_Image;                                    // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Headwear_Crouch_Image;                                   // 0x0358(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                BodyArmor_Crouch_Image;                                  // 0x0360(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Carry_Outline_Crouch_Image;                              // 0x0368(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Carry_Head_Crouch_Image;                                 // 0x0370(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Carry_Body_Crouch_Image;                                 // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Carry_RightArm_Crouch_Image;                             // 0x0380(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Carry_LeftArm_Crouch_Image;                              // 0x0388(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Carry_RightLeg_Crouch_Image;                             // 0x0390(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Carry_LeftLeg_Crouch_Image;                              // 0x0398(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Carry_BodyArmor_Crouch_Image;                            // 0x03A0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PickupEvidenceByTag
	 * Size -> 0x0008 (FullSize[0x0278] - InheritedSize[0x0270])
	 */
	class APickupEvidenceByTag : public AObjective
	{
	public:
		class FName                                                  EvidenceTag;                                             // 0x0270(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		bool HasCollectedEvidenceByTag(const class FName& Tag);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlayerCharacter
	 * Size -> 0x0E10 (FullSize[0x21C0] - InheritedSize[0x13B0])
	 */
	class APlayerCharacter : public AReadyOrNotCharacter
	{
	public:
		class UCameraComponent*                                      ThirdPersonCameraComponent;                              // 0x13B0(0x0008) Edit, ExportObject, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USpringArmComponent*                                   ThirdPersonCameraArm;                                    // 0x13B8(0x0008) Edit, ExportObject, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USkeletalMeshComponent*                                Mesh1P;                                                  // 0x13C0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USkeletalMeshComponent*                                MeshBody1P;                                              // 0x13C8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCameraComponent*                                      FirstPersonCameraComponent;                              // 0x13D0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPlayerPostProcessing*                                 PlayerPostProcessingComp;                                // 0x13D8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODAudioComponent*                                   FMODBreathingAudioComp;                                  // 0x13E0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UBleedComponent*                                       BleedComponent;                                          // 0x13E8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UScoringComponent*                                     ScoringComponent;                                        // 0x13F0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x13F8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkeletalMesh*                                         Rep_FPBodyMesh;                                          // 0x1400(0x0008) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMaterialInterface*                                    LastSetMesh1PDynamicMaterial;                            // 0x1408(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UMaterialInstanceDynamic*>                      DynamicWeaponFovMats;                                    // 0x1410(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x10];                                  // 0x1420(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class USkeletalMeshComponent*>                        MeshComps;                                               // 0x1430(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		class APlayerState*                                          LastKnownPlayerState;                                    // 0x1440(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                 ReplicatedFPMesh;                                        // 0x1448(0x000C) Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x1454(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                  CurInputVector;                                          // 0x1458(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x4];                                   // 0x1464(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                          PushOverlappingAI_Handle;                                // 0x1468(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bInAISafeZone;                                           // 0x1470(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x7];                                   // 0x1471(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialInstanceDynamic*                              Body1PMat;                                               // 0x1478(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AReadyOrNotCharacter*                                  CurrentViewCharacter;                                    // 0x1480(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               OnDefaultCommandIssued;                                  // 0x1488(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0xF];                                   // 0x1489(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnTeamViewSet;                                           // 0x1498(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0xF];                                   // 0x1499(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		int32_t                                                      CurrentTeamViewIndex;                                    // 0x14A8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0x4];                                   // 0x14AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerViewActor*                                      PlayerViewActor;                                         // 0x14B0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APlayerViewActor*                                      PlayerViewActorClass;                                    // 0x14B8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTimerHandle                                          TH_TeamViewInput;                                        // 0x14C0(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TeamViewInputHoldTime;                                   // 0x14C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        surfaceType;                                             // 0x14CC(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        roomType;                                                // 0x14D0(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0008[0x4];                                   // 0x14D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                PVPSpeakerName;                                          // 0x14D8(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsSwatCommandOpen;                                      // 0x14E8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0009[0x7];                                   // 0x14E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USwatCommandWidget*                                    SwatCommandWidget;                                       // 0x14F0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0010[0x1];                                   // 0x14F8(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bInCommandMenu;                                          // 0x14F9(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bInDevicesMenu;                                          // 0x14FA(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bInTabMenu;                                              // 0x14FB(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bFadeToGray;                                             // 0x14FC(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0011[0x1B];                                  // 0x14FD(0x001B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        Sensitivity;                                             // 0x1518(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bInvertYaw;                                              // 0x151C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bInvertPitch;                                            // 0x151D(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0012[0x2];                                   // 0x151E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UUserWidget*                                           HUD_Widget;                                              // 0x1520(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHumanCharacterHUD_V2*                                 HumanCharacterWidget_V2;                                 // 0x1528(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTeamViewWidget*                                       TeamViewWidget;                                          // 0x1530(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInteractableComponent*                                LastInteractableComponent;                               // 0x1538(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ABuildingTrigger*                                      LastBuildingEntered;                                     // 0x1540(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ABuildingTrigger*                                      InsideCurrentBuilding;                                   // 0x1548(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ADoor*                                                 lastHighlightedDoor;                                     // 0x1550(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ABaseItem*                                             lastHighlightedEvidence;                                 // 0x1558(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APickupMagazineActor*                                  lastHighlightedPickupMagazine;                           // 0x1560(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bExitWithFireSelect;                                     // 0x1568(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0013[0x7];                                   // 0x1569(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerCharacter*                                      PreviousPosessedCharacter;                               // 0x1570(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               OnClientPossessed;                                       // 0x1578(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0014[0xF];                                   // 0x1579(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnPlayerTakenDamageDetails;                              // 0x1588(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0015[0xF];                                   // 0x1589(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UFMODEvent*                                            CriticalInjuredEvent;                                    // 0x1598(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            FlatlineEvent;                                           // 0x15A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            FlatlineEventPvP;                                        // 0x15A8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            HeadshotEvent;                                           // 0x15B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            SAPIPlateHitEvent;                                       // 0x15B8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bMirroring : 1;                                          // 0x15C0(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0016[0x7];                                   // 0x15C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bSpawnInventoryItemsOnPossess;                           // 0x15C8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0017[0x7];                                   // 0x15C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnNightVisionGogglesToggled;                             // 0x15D0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0018[0xF];                                   // 0x15D1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		struct FRotator                                 FreeLookCache;                                           // 0x15E0(0x000C) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0019[0x1C];                                  // 0x15EC(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        YellOutEffectLength;                                     // 0x1608(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        YelloutEffectRadius;                                     // 0x160C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowReadyStatus;                                        // 0x1610(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0020[0x7];                                   // 0x1611(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReadyOrNotPlayerState*                                LastPlayerState;                                         // 0x1618(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                          HitBones;                                                // 0x1620(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class UMatineeCameraShake*                                   Camera_Hit_Arm_L;                                        // 0x1630(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMatineeCameraShake*                                   Camera_Hit_Arm_R;                                        // 0x1638(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMatineeCameraShake*                                   Camera_Hit_Low;                                          // 0x1640(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMatineeCameraShake*                                   Camera_Hit_Leg_L;                                        // 0x1648(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMatineeCameraShake*                                   Camera_Hit_Leg_R;                                        // 0x1650(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMatineeCameraShake*                                   Camera_Hit_Head_Front;                                   // 0x1658(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMatineeCameraShake*                                   Camera_Hit_Head_Back;                                    // 0x1660(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CrouchHeight;                                            // 0x1668(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0021[0x4];                                   // 0x166C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USoundCue*                                             BodyImpactGroundSound;                                   // 0x1670(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                 Camera_RotationRate;                                     // 0x1678(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0022[0xC];                                   // 0x1684(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APawn*                                                 CurrentlyPiloting;                                       // 0x1690(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0023[0x88];                                  // 0x1698(0x0088) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerCharacter*                                      RevivingPlayer;                                          // 0x1720(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APlayerCharacter*                                      BeingRevivedByPlayer;                                    // 0x1728(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RevivingOperatingTime;                                   // 0x1730(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        StunMovementSpeedMultiplier;                             // 0x1734(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bStunAimLocked;                                          // 0x1738(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0024[0x7];                                   // 0x1739(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ABaseItem*                                             LastEquippedItemBeforeStun;                              // 0x1740(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0025[0x4];                                   // 0x1748(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        FirstPersonShakeAmount;                                  // 0x174C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ViewBlendMultiplier;                                     // 0x1750(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0026[0x4];                                   // 0x1754(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                  BlendedBone;                                             // 0x1758(0x0008) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0027[0x8];                                   // 0x1760(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimInstance*                                         Replicated_3PAnimInstance;                               // 0x1768(0x0008) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimInstance*                                         Replicated_1PAnimInstance;                               // 0x1770(0x0008) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UAnimMontage*>                                  MontageQueue_3P;                                         // 0x1778(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UAnimMontage*>                                  MontageQueue_1P;                                         // 0x1788(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		float                                                        HoldingUseTime;                                          // 0x1798(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHoldingUse;                                             // 0x179C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLookingAtEvidenceItem;                                  // 0x179D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLookingAtDoor;                                          // 0x179E(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLookingAtHuman;                                         // 0x179F(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLookingAtTarget;                                        // 0x17A0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bUserLowReady;                                           // 0x17A1(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bForceLowReady;                                          // 0x17A2(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0028[0x1];                                   // 0x17A3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        LowReadyTraceDistance;                                   // 0x17A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AEvidenceActor*                                        LastCollectedEvidence;                                   // 0x17A8(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class ABaseArmour*, class USkeletalMesh*>               ArmorOverrideMapFP;                                      // 0x17B0(0x0050) Edit, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0029[0x8];                                   // 0x1800(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                        ChemlightClasses;                                        // 0x1808(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		bool                                                         bIsInTightSpace : 1;                                     // 0x1818(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0030[0x7];                                   // 0x1819(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UBasePlayerEffect*>                             PlayerEffects;                                           // 0x1820(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class UBasePlayerEffect*                                     RecoilNerfEffect;                                        // 0x1830(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0031[0x8];                                   // 0x1838(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bOverrideHeadwearPaperdollTexture : 1;                   // 0x1840(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0032[0x7];                                   // 0x1841(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                            HeadwearPaperdollTexture_Override;                       // 0x1848(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                            HeadwearPaperdollTexture_Crouch_Override;                // 0x1850(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLoadout                                              DefaultItems;                                            // 0x1858(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		int32_t                                                      EquipIndex;                                              // 0x1878(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0033[0x4];                                   // 0x187C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FLoadout>                                      RandomLoadoutSelection;                                  // 0x1880(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class UMatineeCameraShake*                                   ForwardShake;                                            // 0x1890(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMatineeCameraShake*                                   RightShake;                                              // 0x1898(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               OnWeaponFireModeChanged;                                 // 0x18A0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0034[0xF];                                   // 0x18A1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnWeaponFired;                                           // 0x18B0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0035[0xF];                                   // 0x18B1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0036[0x10];                                  // 0x18C0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ABaseItem*                                             DroppedItem;                                             // 0x18D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ABloodPool*                                            BloodPool;                                               // 0x18D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  CameraRotationRateMeshSpaceMultiplier;                   // 0x18E0(0x000C) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  MeshspaceRecoilMovementMultiplier;                       // 0x18EC(0x000C) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MeshSpaceMovementMultiplier1P;                           // 0x18F8(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  MeshspaceRecoilMovementMinMax;                           // 0x18FC(0x000C) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0037[0x9];                                   // 0x1908(0x0009) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bWeaponDown3P;                                           // 0x1911(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsWearingHeavyArmour;                                   // 0x1912(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0038[0x1];                                   // 0x1913(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        ReturnToWeaponDownDelay;                                 // 0x1914(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0039[0x8];                                   // 0x1918(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bFireLoop;                                               // 0x1920(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0040[0x7];                                   // 0x1921(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                          FullAutoLoop_Handle;                                     // 0x1928(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0041[0x8];                                   // 0x1930(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        TimeSinceAiming;                                         // 0x1938(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0042[0xC];                                   // 0x193C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bServerIsBlockingAnimationPlaying;                       // 0x1948(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0043[0x7];                                   // 0x1949(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnItemGroupSelection_Pressed;                            // 0x1950(0x0001) ELEMENT_SIZE_MISMATCH BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0044[0xF];                                   // 0x1951(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnItemGroupSelection_Held;                               // 0x1960(0x0001) ELEMENT_SIZE_MISMATCH BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0045[0xF];                                   // 0x1961(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnItemGroupSelection_Released;                           // 0x1970(0x0001) ELEMENT_SIZE_MISMATCH BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0046[0xF];                                   // 0x1971(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnItemGroupSelection_ItemChanged;                        // 0x1980(0x0001) ELEMENT_SIZE_MISMATCH BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0047[0xF];                                   // 0x1981(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0048[0x8];                                   // 0x1990(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnAttachmentLightToggled;                                // 0x1998(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0049[0xF];                                   // 0x1999(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0050[0x18];                                  // 0x19A8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnMelee;                                                 // 0x19C0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0051[0xF];                                   // 0x19C1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0052[0xC];                                   // 0x19D0(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        SprintFovFactor;                                         // 0x19DC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SprintFovInterpTime;                                     // 0x19E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DefaultFovInterpTime;                                    // 0x19E4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0053[0x10];                                  // 0x19E8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlacedC2Explosive*                                    PendingC2Removal;                                        // 0x19F8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ABaseItem*                                             LastEquippedItemBeforeUsingChem;                         // 0x1A00(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ABaseGrenade*                                          QuickThrowItem;                                          // 0x1A08(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ABaseItem*                                             ItemBeforeQuickThrow;                                    // 0x1A10(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0054[0x1];                                   // 0x1A18(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bQuickThrowing;                                          // 0x1A19(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0055[0x6];                                   // 0x1A1A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        ClearingScore;                                           // 0x1A20(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAiming;                                                 // 0x1A24(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0056[0x3];                                   // 0x1A25(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        AimTime;                                                 // 0x1A28(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0057[0x6];                                   // 0x1A2C(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bReloadLoop;                                             // 0x1A32(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0058[0x1D];                                  // 0x1A33(0x001D) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnWeaponMagCheck;                                        // 0x1A50(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0059[0xF];                                   // 0x1A51(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0060[0x4];                                   // 0x1A60(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        ForwardStrafeSpeedMultiplier;                            // 0x1A64(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        BackwardStrafeSpeedMultiplier;                           // 0x1A68(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SideStrafeSpeedMultiplier;                               // 0x1A6C(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LeanSpeedMultiplier;                                     // 0x1A70(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SpeedPercentLossPerLegInjury;                            // 0x1A74(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SpeedPercentLossWhenCarrying;                            // 0x1A78(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0061[0x14];                                  // 0x1A7C(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bLeanLeftToggle;                                         // 0x1A90(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLeanRightToggle;                                        // 0x1A91(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0062[0x6];                                   // 0x1A92(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODAudioComponent*                                   LeanAudioComponent;                                      // 0x1A98(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            LeanAudioEvent;                                          // 0x1AA0(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  FirstPersonCameraPos_CurrentFrame;                       // 0x1AA8(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  FirstPersonCameraPos_LastFrame;                          // 0x1AB4(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LeanMovementValue;                                       // 0x1AC0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCameraFreelookSetting                                FreelookSetting;                                         // 0x1AC4(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.i, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0063[0x4];                                   // 0x1AD4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FHitResult                                            VaultTraceForward;                                       // 0x1AD8(0x0088) IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FHitResult                                            VaultTraceDownClose;                                     // 0x1B60(0x0088) IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FHitResult                                            VaultTraceDownMiddle;                                    // 0x1BE8(0x0088) IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FHitResult                                            VaultTraceDownFar;                                       // 0x1C70(0x0088) IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                         bLedgeFound;                                             // 0x1CF8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bVaulting;                                               // 0x1CF9(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0064[0x2E];                                  // 0x1CFA(0x002E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                          LastPlayedVaultMontage;                                  // 0x1D28(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLeaningLeft;                                            // 0x1D30(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLeaningRight;                                           // 0x1D31(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLeaningUp;                                              // 0x1D32(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLeaningDown;                                            // 0x1D33(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0065[0x4];                                   // 0x1D34(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bFreeLeaning;                                            // 0x1D38(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsLeaning;                                              // 0x1D39(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0066[0x2];                                   // 0x1D3A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        RunSpeed;                                                // 0x1D3C(0x0004) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MaxAcceleration;                                         // 0x1D40(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SpeedModifier_AimFocus;                                  // 0x1D44(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SpeedModifier_Aim;                                       // 0x1D48(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SpeedModifier_Crouch;                                    // 0x1D4C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SpeedModifier_Sprint;                                    // 0x1D50(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SpeedModifier_SprintMax;                                 // 0x1D54(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SpeedModifier_SprintTime;                                // 0x1D58(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        HitSpeedMultiplier;                                      // 0x1D5C(0x0004) Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                        SlowDownSpeedMultiplier;                                 // 0x1D60(0x0004) Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                        WalkSpeedRampMultiplier;                                 // 0x1D64(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                        SprintSpeedRampUpMultiplier;                             // 0x1D68(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                        CurrentRunSpeedPercent;                                  // 0x1D6C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0067[0x4];                                   // 0x1D70(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MaxRunSpeedPercent;                                      // 0x1D74(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MaxCrouchRunSpeedPercent;                                // 0x1D78(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MinWalkSpeedPercent;                                     // 0x1D7C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0068[0x10];                                  // 0x1D80(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        LastSetRunSpeed;                                         // 0x1D90(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WalkSpeedMultiplier;                                     // 0x1D94(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DeployableWalkSpeedMultiplier;                           // 0x1D98(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHoldingFastWalk;                                        // 0x1D9C(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHoldingSprint;                                          // 0x1D9D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0069[0xE];                                   // 0x1D9E(0x000E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bDisableSprinting : 1;                                   // 0x1DAC(0x0001) BIT_FIELD BlueprintVisible, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bWalking;                                                // 0x1DAD(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAllowPlacement;                                         // 0x1DAE(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0070[0x19];                                  // 0x1DAF(0x0019) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        QuickLeanAmount;                                         // 0x1DC8(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FreeLeanX;                                               // 0x1DCC(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FreeLeanZ;                                               // 0x1DD0(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0071[0x3C];                                  // 0x1DD4(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MeshspaceInterp;                                         // 0x1E10(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        VelocityCameraRollMultiplier;                            // 0x1E14(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                 PendingRecoil;                                           // 0x1E18(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0072[0xC];                                   // 0x1E24(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        RecoilSpeed;                                             // 0x1E30(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0073[0xC];                                   // 0x1E34(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                          Last1PMontage;                                           // 0x1E40(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FString, class UAnimMontage*>                     PlayedTableMontageMap1P;                                 // 0x1E48(0x0050) NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0074[0x8];                                   // 0x1E98(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                  Rep_MontageSection3P;                                    // 0x1EA0(0x0008) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            JumpStartSound;                                          // 0x1EA8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            JumpLandSound;                                           // 0x1EB0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODSnapshot*                                         InMix;                                                   // 0x1EB8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODSnapshot*                                         OutMix;                                                  // 0x1EC0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bOutMixPlaying;                                          // 0x1EC8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0075[0x7];                                   // 0x1EC9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            InjuredScreamPVP;                                        // 0x1ED0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0076[0x8];                                   // 0x1ED8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            DeathScreamPVP;                                          // 0x1EE0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODAudioComponent*                                   InjuredScreamComponent;                                  // 0x1EE8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0077[0x4];                                   // 0x1EF0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MovementRequiredPerSound;                                // 0x1EF4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RotationRequiredPerSound;                                // 0x1EF8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        NegativeVelocityRequiredForLandingSound;                 // 0x1EFC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0078[0x20];                                  // 0x1F00(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FMovementSound>                                WalkSounds;                                              // 0x1F20(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TSoftClassPtr<class AImpactEffect>                           WalkSounds_Environmental;                                // 0x1F30(0x0024) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0079[0x4];                                   // 0x1F54(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TArray<struct FMovementSound>                                RunSounds;                                               // 0x1F58(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TSoftClassPtr<class AImpactEffect>                           RunSounds_Environmental;                                 // 0x1F68(0x0024) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0080[0x4];                                   // 0x1F8C(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TArray<struct FMovementSound>                                TurningSounds;                                           // 0x1F90(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FMovementSound>                                LandingSounds;                                           // 0x1FA0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0081[0x10];                                  // 0x1FB0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        HitDirectionForward;                                     // 0x1FC0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        HitDirectionRight;                                       // 0x1FC4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0082[0x10];                                  // 0x1FC8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            BreathingBaseEvent;                                      // 0x1FD8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ExhaustionLevel;                                         // 0x1FE0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ExhaustionDissipationRate;                               // 0x1FE4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ExhaustionIncreaseRate;                                  // 0x1FE8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ExhaustionThreshold;                                     // 0x1FEC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FearLevel;                                               // 0x1FF0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0083[0x4];                                   // 0x1FF4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        FearDissipationRate;                                     // 0x1FF8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FearSuppressionScale;                                    // 0x1FFC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FearThreshold;                                           // 0x2000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0084[0x10];                                  // 0x2004(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bIsSightTweakMode;                                       // 0x2014(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0085[0x3];                                   // 0x2015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UUserWidget*                                           SightTweakerWidgetTemplate;                              // 0x2018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUserWidget*                                           SightTweakerOverlay;                                     // 0x2020(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  SightTweakerPosOffset;                                   // 0x2028(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                 SightTweakerRotOffset;                                   // 0x2034(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0086[0x10];                                  // 0x2040(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        SpawnProtectionTime;                                     // 0x2050(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsThirdPerson;                                          // 0x2054(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0087[0x3];                                   // 0x2055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRotator                                 Server_BaseAimRotation;                                  // 0x2058(0x000C) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                 FreeAimCache;                                            // 0x2064(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0088[0x8];                                   // 0x2070(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         IsPlayingInteraction;                                    // 0x2078(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0089[0x4B];                                  // 0x2079(0x004B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bIsStopping;                                             // 0x20C4(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bNVGOn;                                                  // 0x20C5(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0090[0x2];                                   // 0x20C6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ALadderSnapZone*                                       LadderPlacementZone;                                     // 0x20C8(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0091[0xC];                                   // 0x20D0(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MoveForwardInput;                                        // 0x20DC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MoveRightInput;                                          // 0x20E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0092[0x18];                                  // 0x20E4(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                  LeftFootSocketName;                                      // 0x20FC(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  RighttFootSocketName;                                    // 0x2104(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFootConstEnum                                               LeftFootEnum;                                            // 0x210C(0x0001) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFootConstEnum                                               RightFootEnum;                                           // 0x210D(0x0001) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0093[0x2];                                   // 0x210E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        FootAdjustOffset;                                        // 0x2110(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FootInterpSpeed;                                         // 0x2114(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FootRotationInterpSpeed;                                 // 0x2118(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        HipInterpSpeed;                                          // 0x211C(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TraceDistance;                                           // 0x2120(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TraceOffset;                                             // 0x2124(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        VelocityThreshold;                                       // 0x2128(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SpeedBubbleAmount;                                       // 0x212C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                 CurrentMeshRot;                                          // 0x2130(0x000C) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0094[0x2];                                   // 0x213C(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bIgnoreRotationOverride;                                 // 0x213E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0095[0x15];                                  // 0x213F(0x0015) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                  CameraBobTrans;                                          // 0x2154(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  WeaponBobTrans;                                          // 0x2160(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                 WeaponBobRot;                                            // 0x216C(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                 CameraBobRot;                                            // 0x2178(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                         bIsSecondarySightActive;                                 // 0x2184(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0096[0x3];                                   // 0x2185(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnSecondarySightToggled;                                 // 0x2188(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0097[0xF];                                   // 0x2189(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		bool                                                         bIsPelvisFPMovementBobActive;                            // 0x2198(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0098[0x3];                                   // 0x2199(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        PelvisFPMovementDamping;                                 // 0x219C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCopyTPMeshTransformsToFP;                               // 0x21A0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0099[0x1F];                                  // 0x21A1(0x001F) MISSED OFFSET (PADDING)

	public:
		void UpdateRotator(struct FRotator* Value, const struct FRotator& Target, float InterpSpeed);
		void UpdatePictureInPictureVisibility();
		void UpdateFloat(float* Value, float Target, float InterpSpeed);
		class FName UnavailableHolsterNameForType(EItemCategory Category);
		void TryPlayAISuspectResponseToReload();
		void TryNextPlayerView_Released();
		void ToggleUnderbarrelAttachment();
		void ToggleThirdPerson();
		void ToggleSprint();
		void ToggleSightTweaker();
		void ToggleSecondarySight();
		void ToggleNoTarget();
		void ToggleNightvisionGoggles();
		void ToggleLowReady();
		void ToggleLeanRight();
		void ToggleLeanLeft();
		void ToggleHUD();
		void ToggleGodMode();
		void ToggleFreeThirdPerson();
		void ToggleFreeLook();
		void ToggleFreeLean();
		void ToggleDebugDamage();
		void ToggleDebugBallistics();
		void ToggleCrouch();
		void ToggleCrosshairOverlay();
		void StunMe(float Duration, const class FString& WithType);
		void StopUsingMultitool(class AActor* Target);
		void StopLockPicking(class AActor* Target);
		void StopFreeLook();
		void StopFPMontageFromTable(const class FString& Animation, float BlendoutTime);
		void StartUsingMultitool(class AActor* Target);
		void StartQuickThrow();
		void StartLockPicking(class AActor* Target);
		void StartFreeLook();
		void StartCinematicSequence();
		void StartChemThrow();
		void StartBleeding();
		void ShowPlayer();
		void SetWeaponUp();
		void SetWeaponDown();
		void SetRunSpeed(float newRunSpeed);
		void SetMaxRunSpeed(float newMaxSpeed);
		void SetHumanCharacterWidget_V2(class UHumanCharacterHUD_V2* NewHumanCharacterWidget);
		void SetFreelookYawMin(float NewYawMinValue);
		void SetFreelookYawMax(float NewYawMaxValue);
		void SetFreelookPitchMin(float NewPitchMinValue);
		void SetFreelookPitchMax(float NewPitchMaxValue);
		void SetForceLowReady(bool bShouldForceLowReady);
		void Server_Walk();
		void Server_UpdateLean(float QuickLean, float newFreeLeanY, float NewFreeLeanZ);
		void Server_UpdateLastSetRunSpeed(float newRunSpeed);
		void Server_UpdateIsBlockingAnimationPlaying(bool bIsBlockingAnimationPlaying);
		void Server_UpdateFreeLookCache(const struct FRotator& NewFreeLookCache);
		void Server_UpdateCameraRotationRate(const struct FRotator& NewCameraRotRate);
		void Server_UpdateADS(bool bADS);
		void Server_UnlockMovementAndAim();
		void Server_UnlockMovementAndActions();
		void Server_UnlockMovement();
		void Server_UnlockAllActions();
		void Server_UnlockAim();
		void Server_ToggleWalk();
		void Server_ToggleNoTarget();
		void Server_ToggleLightByClass(ELightRadialSelection LightType);
		void Server_ToggleGodMode();
		void Server_TakeDamage(float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
		void Server_Sprint();
		void Server_SpawnEjectedMagazine(const struct PCoreUObject_FTransform& SpawnTransform, class ABaseMagazineWeapon* Weapon);
		void Server_SetWalkSpeed(float newWalkSpeed, float newCrouchWalkSpeed);
		void Server_SetUserLowReady(bool bShouldUserLowReady);
		void Server_SetLowReady(bool bUp, bool bLowReady, bool bIsUserLowReady);
		void Server_SecondaryUse();
		void Server_ResetPlayerEffect(class UBasePlayerEffect* InPlayerEffectClass, bool bMulticast);
		void Server_RepNVGOn(bool bIsOn);
		void Server_RemovePendingC2();
		void Server_RemoveLadder(class ATelescopicLadder* Ladder);
		void Server_PrimaryUse();
		void Server_PrepareForHeal();
		void Server_PlayVaultAnimation(const struct FVector& ledge, const struct FVector& legeWallNormal, const struct FVector& ledgeTraceDown, float ledgeZ, ELedgeWidth ledgeWidth, ELedgeHeight ledgeHeight);
		void Server_PlaySound(class USoundCue* Cue);
		void Server_PlayPVPSpeech(const class FString& SpeechRowName, ETeamType TeamType);
		void Server_Ping();
		void Server_OnReviveComplete(class APlayerCharacter* PlayerCharacter);
		void Server_OnReloadComplete();
		void Server_MarkWeaponCleaned(class ABaseItem* Item);
		void Server_LockMovementAndAim();
		void Server_LockMovementAndActions();
		void Server_LockMovement();
		void Server_LockAllActions();
		void Server_LockAim();
		void Server_KillfeedMessage(class APlayerCharacter* Killer, class APlayerCharacter* Victim, class ABaseItem* Weapon);
		void Server_InstaStartFree(class APlayerCharacter* Target);
		void Server_InstaStartArrest(class APlayerCharacter* Target);
		void Server_InstantSurrenderTarget();
		void Server_FreefeedMessage(class APlayerCharacter* Freer, class APlayerCharacter* Victim);
		void Server_FinishHealing();
		void Server_FastWalk();
		void Server_EquipZipcuffs();
		void Server_EquipTablet();
		void Server_EquipStinger();
		void Server_EquipSecondaryItem();
		void Server_EquipPrimaryItem(bool bForce);
		void Server_EquipPepperSpray();
		void Server_EquipNinebang();
		void Server_EquipMultitool(EMultitoolFunctions MultitoolFunction);
		void Server_EquipMirrorgun();
		void Server_EquipLastItem(EHolsterAnimationType AnimationType);
		void Server_EquipGrenade_5();
		void Server_EquipGrenade_4();
		void Server_EquipGrenade_3();
		void Server_EquipGrenade_2();
		void Server_EquipFlashbang();
		void Server_EquipDoorjam();
		void Server_EquipDevice_5();
		void Server_EquipDevice_4();
		void Server_EquipDevice_3();
		void Server_EquipDevice_2();
		void Server_EquipCSGas();
		void Server_EquipC2();
		void Server_EquipBreachingShotgun();
		void Server_EndSecondaryUse();
		void Server_EndPrimaryUse();
		void Server_EndFastWalk();
		void Server_ChangeMesh(class USkeletalMesh* FPMesh, class USkeletalMesh* TPMesh, class USkeletalMesh* TPHeadMesh);
		void Server_ChangeFPMesh(class USkeletalMesh* NewFPMesh);
		void Server_ArrestfeedMessage(class APlayerCharacter* Arrester, class APlayerCharacter* Victim);
		void Server_ApplyPlayerEffectFor(class UBasePlayerEffect* InPlayerEffectClass, float Seconds, bool bMulticast);
		void Server_ApplyPlayerEffect(class UBasePlayerEffect* InPlayerEffectClass, bool bResettable, bool bMulticast);
		void Server_ActorPickedUp(class APickupActor* PickupActor);
		void SecondaryUse();
		void ResetLODS_Player();
		void ResetLODs_Items();
		void ReplenishAllMagazineAmmo();
		void ReplenishAllGrenadeAmmo();
		void RemoveItemFromWeaponWheel(class ABaseItem* Item);
		void ReloadOrMagCheck_Released();
		void ReloadOrMagCheck();
		void Reload();
		void PrintItemAttachmentListToLog();
		void PrimaryUseComplete();
		void PrimaryUse();
		void PlayVaultAnimation(const struct FVector& ledge, const struct FVector& ledgeWallNormal, const struct FVector& ledgeTraceDown, float ledgeZ, ELedgeWidth ledgeWidth, ELedgeHeight ledgeHeight);
		void PlayerStopJumping();
		void PlayerJump();
		void Ping();
		void OpenTablet();
		void OnWeaponMagCheckSignature__DelegateSignature(class ABaseMagazineWeapon* MagazineWeapon);
		void OnWeaponFireModeChanged__DelegateSignature(EFireMode newFireMode, EFireMode LastFireMode);
		void OnWeaponFired__DelegateSignature(class ABaseWeapon* Weapon);
		void OnTurn();
		void OnTeamViewSet__DelegateSignature(class AReadyOrNotCharacter* NewViewCharacter);
		void OnTeamChatPressed();
		void OnSupression__DelegateSignature(float Strength);
		void OnSupression(float Strength);
		void OnSelectDeviceReleased(const struct FKey& Key);
		void OnSelectDevicePressed(const struct FKey& Key);
		void OnSecondarySightToggled__DelegateSignature(bool bUsingSecondarySight, class ABaseMagazineWeapon* Weapon);
		void OnRep_UpdateMontageSection();
		void OnRep_UpdateAnimInstance();
		void OnRep_StartBoneBlend();
		void OnRep_RunSpeedUpdate();
		void OnRep_BaseAimRotation();
		void OnPlayerTakeDamageDetails__DelegateSignature(bool bWasHeadshot, float DamageTaken, float HealthRemaining, bool bBlockedByArmour, bool bBlockedByHelmet);
		void OnPlayerEffectExpired(class UReadyOrNotGameplayEffect* InPlayerEffectClass);
		void OnNightVisionGogglesToggled__DelegateSignature(bool bNVGOn);
		void OnMelee__DelegateSignature();
		void OnLowReadyButtonUp();
		void OnLowReadyButtonDown();
		void OnLowHealth(float CurrentHealth);
		void OnLeanStart();
		void OnLeanEnd();
		void OnKilledOrGoneUnconciousBP();
		void OnJumpStart();
		void OnJumpLand();
		void OnItemSelectionStyleChanged(EItemSelectionInterfaceType NewItemSelectionInterface);
		void OnItemGroupSelection__DelegateSignature(int32_t GroupIndex, int32_t CategoryIndex);
		void OnFullHealth();
		void OnDefaultCommandIssued__DelegateSignature(class APlayerCharacter* Issuer, ESwatCommand CommandIssued);
		void OnClientPossessed__DelegateSignature(class AController* NewController);
		void OnChatPressed();
		void OnBulletImpact__DelegateSignature(float DirectionForward, float DirectionRight);
		void OnBulletImpact(float DirectionForward, float DirectionRight);
		void OnAttachmentLightToggled__DelegateSignature();
		void Multicast_ToggleLaserLight();
		void Multicast_ShowThirdPerson();
		void Multicast_PlaySound(class USoundCue* Cue);
		void Multicast_PlayPVPSpeech(const class FString& SpeechRowName, ETeamType TeamType);
		void Multicast_PlayInjuredScream();
		void Multicast_PlayArmourRelatedEffects(class ABaseArmour* Armour, class UParticleSystem* Particle, const struct PCoreUObject_FTransform& AtTransform);
		void Multicast_HideThirdPerson();
		void Melee();
		void MagCheck();
		void LocalKillFeed(class APlayerCharacter* Killer, class APlayerCharacter* Victim, class ABaseItem* Weapon);
		void LocalFreeFeed(class APlayerCharacter* Freer, class APlayerCharacter* Victim);
		void LocalDeathFeed(class AReadyOrNotPlayerController* PlayerController);
		void LocalArrestFeed(class APlayerCharacter* Arrester, class APlayerCharacter* Victim);
		void LeanUp(float Val);
		void LeanRight(float Val);
		void Lean(float Val);
		void JamDoor(class ADoor* Door);
		bool IsSprinting();
		bool IsReloading();
		bool IsPointPartiallyReachable(const struct FVector& Position);
		bool IsPointFullyReachable(const struct FVector& Position);
		bool IsMovingForward();
		bool IsMoving();
		bool IsMagCheckPlaying();
		bool IsInTightSpaces();
		bool IsInLightSource(int32_t* VisibleLightSources, float MinimumLightLevel);
		bool IsInCinematicAnimation();
		bool IsHoldingSprint();
		bool IsFreelooking();
		bool IsFireModeSelectPlaying();
		bool Is1PMontagePlaying(class UAnimMontage* Montage);
		void IncrementalUse(float Val);
		void HidePlayer();
		bool HasWedge();
		bool HasOptiwand();
		bool HasNVG();
		bool HasLockpick();
		bool HasLineOfSightToAnyPlayerControlledCharacter();
		bool HasGrenadesInInventory();
		bool HasChemlightsInInventory();
		bool HasC2();
		bool HasBSG();
		float GetViewPitch();
		int32_t GetQuickthrowGrenadeAmmo();
		float GetLeanAmount(const struct FVector& Component, float* InOutPendingVal, float MaxValue);
		struct FHitResult GetHitFromCamera(float MaxDistance, TArray<ECollisionChannel> CollisionChannels, const struct FRotator& OffsetRotation, const struct FVector& OffsetVector, bool bDrawTrace);
		int32_t GetFootConstant(EFootConstEnum FootConst);
		EFireMode GetFiringMode();
		struct FCameraFreelookSetting GetCurrentFreelookSettings();
		class APlayerCharacter* GetClosestPlayerCharacter(ETeamType Team, float* OutClosestDistance, bool bExcludeArrested);
		int32_t GetChemlightAmmo();
		TArray<class AReadyOrNotCharacter*> GetAvaliablePlayersForTeamView(bool bIncludeDeadViews);
		TArray<class APlayerCharacter*> GetAllOtherPlayerCharacters(ETeamType Team);
		struct FRotator GetAimOffsets();
		void ForceMaxLODs_Player();
		void ForceMaxLODs_Items();
		void ForceFirstDraw();
		void FireLaserEyes();
		void FadeToBlackEnable();
		void FadeToBlackDisable();
		void EquipZipcuffs();
		void EquipTacticalDevice();
		void EquipTablet();
		void EquipStinger();
		void EquipSecondaryItem();
		void EquipPrimaryItem();
		void EquipPepperspray();
		bool EquippedWeaponHasSecondarySight();
		bool EquippedWeaponHasLightAttachment();
		bool EquippedWeaponHasLaserAttachment();
		void EquipNinebang();
		void EquipMultitool();
		void EquipMirrorgun();
		void EquipLongTactical();
		class ABaseItem* EquipItemOfType(EItemCategory ItemCategory);
		class ABaseItem* EquipItemFromGroup_Name(const class FName& GroupName, int32_t ItemCategoryIndex);
		class ABaseItem* EquipItemFromGroup_Index(int32_t GroupIndex, int32_t ItemCategoryIndex);
		void EquipGrenade_5();
		void EquipGrenade_4();
		void EquipGrenade_3();
		void EquipGrenade_2();
		void EquipGrenade();
		void EquipFlashbang();
		void EquipDoorJam();
		void EquipDevice_5();
		void EquipDevice_4();
		void EquipDevice_3();
		void EquipDevice_2();
		void EquipCSGas();
		void EquipC2();
		void EquipBreachingShotgun();
		void EquipBatteringRam();
		void EndSecondaryUse();
		void EndQuickThrow();
		void EndCinematicSequence();
		void EndChemThrow();
		void EnableNightVisionGoggles();
		void Drone_Yaw(float Val);
		void Drone_Throttle(float Val);
		void Drone_Steady();
		void Drone_Right(float Val);
		void Drone_MoveForward(float Val);
		void DrawPermanentMarker();
		void DisableNightVisionGoggles();
		void DestroyNonDevelopmentComponents();
		void DebugDetachAllComponentsAndSubComponents();
		void CreateTeamViewWidget();
		void CreateHUDWidget();
		void CloseTablet();
		void ClosePlayerView();
		void Client_UpdateMagBeforeReload();
		void Client_StartStun(EStunType StunType, class AActor* StunCauser, const struct FVector& DamageCauserLocation);
		void Client_ShowMagDiscarded();
		void Client_ShowMagCheck();
		void Client_ShowMagAfterReload();
		void Client_ShowFireModeChanged(EFireMode newFireMode);
		void Client_SetWalkSpeed(float newWalkSpeed, float newCrouchWalkSpeed);
		void Client_ResetPlayerEffect(class UBasePlayerEffect* InPlayerEffectClass);
		void Client_PossessedBy(class AController* NewController);
		void Client_PlayPostProcessEffect(const class FName& InPostProcessEffect, class AActor* DamageCauser);
		void Client_OnTakenDamageDetail(bool bWasHeadshot, bool bTorsoShot, bool bLeftArm, bool bLeftLeg, bool bRightArm, bool bRightLeg, float DamageTaken, float RemainingHealth, bool bBlockedByArmour, bool bBlockedByHelmet);
		void Client_OnPlayerDamage(bool bTakenDamage, float InDamage, class AReadyOrNotCharacter* InstigatorCharacter, class AActor* DamageCauser);
		void Client_OnLimbBroken();
		void Client_HideMagCheck();
		void Client_CreateWidget(class UUserWidget* Widget);
		void Client_BulletHit(const struct FHitResult& BulletImpact);
		void Client_AutoSelectNewQuickthrowItem(class ABaseGrenade* CallingGrenade);
		void Client_ApplyPlayerEffect(class UBasePlayerEffect* InPlayerEffectClass, bool bResettable, bool bMulticast);
		void CheckSprintingGroup();
		void CaptureFPCamera(float DeltaTime);
		bool CanUseIncrementalSystem();
		bool CanQuickThrow();
		bool CanPingActor(class AActor* Actor);
		bool CalculateStopLocation(struct FVector* OutStopLocation, const struct FVector& CurrentLocation, const struct FVector& Velocity, const struct FVector& Acceleration, float Friction, float BrakingDeceleration, float TimeStep, int32_t MaxSimulationIterations);
		void CalculateLeanMovement(float DeltaTime);
		void C2Door(class ADoor* Door);
		void ApplyPlayerEffectFor_Class(class UBasePlayerEffect* InPlayerEffectClass, float Seconds);
		void ApplyPlayerEffectFor(class UBasePlayerEffect* InPlayerEffect, float Seconds);
		void ApplyPlayerEffect_Class(class UBasePlayerEffect* InPlayerEffectClass, bool bResettable);
		void ApplyPlayerEffect(class UBasePlayerEffect* InPlayerEffect, bool bResettable);
		void AdjustScopeOffsetVertical(float NewOffset);
		void AdjustScopeOffsetHorizontal(float NewOffset);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlacedZipcuffs
	 * Size -> 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
	 */
	class APlacedZipcuffs : public AActor
	{
	public:
		class USkeletalMeshComponent*                                ZipcuffMesh;                                             // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.OneWayBlockingVolume
	 * Size -> 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
	 */
	class AOneWayBlockingVolume : public AActor
	{
	public:
		class UBoxComponent*                                         BoxComponent;                                            // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UArrowComponent*                                       DirectionArrowComponent;                                 // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		class UArrowComponent* GetDirectionArrowComponent();
		class UBoxComponent* GetBoxComponent();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MapReferendum
	 * Size -> 0x0010 (FullSize[0x02B8] - InheritedSize[0x02A8])
	 */
	class AMapReferendum : public AReferendum
	{
	public:
		class FString                                                MapURL;                                                  // 0x02A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlayerDetailsWidget
	 * Size -> 0x0010 (FullSize[0x0270] - InheritedSize[0x0260])
	 */
	class UPlayerDetailsWidget : public UUserWidget
	{
	public:
		class AReadyOrNotPlayerState*                                PlayerState;                                             // 0x0260(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class APlayerCharacter*                                      PlayerCharacter;                                         // 0x0268(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.OpenCommandMenuQuestNode
	 * Size -> 0x0010 (FullSize[0x0280] - InheritedSize[0x0270])
	 */
	class UOpenCommandMenuQuestNode : public UBaseTeamQuestNode
	{
	public:
		bool                                                         bInverse;                                                // 0x0270(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0xF];                                   // 0x0271(0x000F) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ModioManager
	 * Size -> 0x0048 (FullSize[0x0070] - InheritedSize[0x0028])
	 */
	class UModioManager : public UObject
	{
	public:
		unsigned char                                                UnknownData_0000[0x48];                                  // 0x0028(0x0048) MISSED OFFSET (PADDING)

	public:
		bool IsRestartRequired();
		bool IsModIoEnabled();
		class UModioManager* GetInstance();
		void ClearUserData();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.OpenDoorQuestNode
	 * Size -> 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
	 */
	class UOpenDoorQuestNode : public UCheckDoorQuestNode
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MapStatisticsSystem
	 * Size -> 0x0090 (FullSize[0x02B0] - InheritedSize[0x0220])
	 */
	class AMapStatisticsSystem : public AInfo
	{
	public:
		unsigned char                                                UnknownData_0000[0xC];                                   // 0x0220(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                                 GameId;                                                  // 0x022C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x14];                                  // 0x023C(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FString, uint8_t>                                 ActorIdMap;                                              // 0x0250(0x0050) NativeAccessSpecifierPrivate
		TArray<struct FAnalyticsStatus>                              Statuses;                                                // 0x02A0(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate

	public:
		void StartRecording(const class FString& InLevelName, const class FString& InGameMode);
		bool IsRecording();
		class FString GetRecordingStatus();
		struct FGuid GetGameId();
		void EndLevel();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ObjectiveMarkerWidget
	 * Size -> 0x0050 (FullSize[0x02C8] - InheritedSize[0x0278])
	 */
	class UObjectiveMarkerWidget : public UBaseWidget
	{
	public:
		class UObjectiveMarkerComponent*                             ParentComponent;                                         // 0x0278(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                          RootCanvasPanel;                                         // 0x0280(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USizeBox*                                              Icon_SizeBox;                                            // 0x0288(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Icon_Image;                                              // 0x0290(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                DirectionalArrow_Image;                                  // 0x0298(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                            DistanceInMeters_Text;                                   // 0x02A0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                            MarkerName_Text;                                         // 0x02A8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                  Location;                                                // 0x02B0(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        DistanceToLocalPlayer;                                   // 0x02BC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        DirectionAngle;                                          // 0x02C0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bHideDistance : 1;                                       // 0x02C4(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x02C5(0x0003) MISSED OFFSET (PADDING)

	public:
		void ShowMarkerText();
		void ShowIcon();
		void ShowAll();
		void SetTargetLocation(const struct FVector& NewLocation);
		void SetMarkerNameTextFontSize(int32_t NewFontSize);
		void SetMarkerNameTextColorAndOpacity(const struct FLinearColor& InColor);
		void SetMarkerNameText(const class FText& NewMarkerNameText);
		void SetIconSize(const struct FVector2D& NewIconSize);
		void SetIconImage(const struct FSlateBrush& InBrush);
		void SetIconColorAndOpacity(const struct FLinearColor& InColor);
		void SetDirectionAngle(float Angle);
		void OnMarkerVisibilityEnabled();
		void OnMarkerVisibilityDisabled();
		void HideMarkerText();
		void HideIcon();
		void HideAll();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PickupItemActivity
	 * Size -> 0x0018 (FullSize[0x0210] - InheritedSize[0x01F8])
	 */
	class UPickupItemActivity : public UBaseActivity
	{
	public:
		float                                                        SearchRadius;                                            // 0x01F8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x01FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AWeaponCacheActor*                                     WeaponCacheActor;                                        // 0x0200(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ABaseItem*                                             PickupItem;                                              // 0x0208(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void SetPickupItem(class ABaseItem* NewPickupItem);
		void OnPickupItemComplete();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlayerPostProcessing
	 * Size -> 0x0660 (FullSize[0x0DD0] - InheritedSize[0x0770])
	 */
	class UPlayerPostProcessing : public UPostProcessComponent
	{
	public:
		TArray<class UPostProcessEffectData*>                        DebugPPEffects;                                          // 0x0770(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class UMaterialInstanceDynamic*>                      DebugPPEffects_MIDs;                                     // 0x0780(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x38];                                  // 0x0790(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FPostProcessEffect>                            PostProcessEffects;                                      // 0x07C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x18];                                  // 0x07D8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UMaterialInterface*>                            DevPostProcessMaterials;                                 // 0x07F0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		struct FNVGPostProcessSettings                               NVG_Settings;                                            // 0x0800(0x0058) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x568];                                 // 0x0858(0x0568) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerCharacter*                                      OwningCharacter;                                         // 0x0DC0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AActor*                                                RecentDamageCauser;                                      // 0x0DC8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void StopTaserEffect();
		void StopSuppressionEffects();
		void StopStingerEffect();
		void StopPostProcessEffect_Name(const class FName& EffectName);
		void StopPostProcessEffect_FromDataAsset(class UPostProcessEffectData* InPostProcessEffectData);
		void StopPostProcessEffect(struct FPostProcessEffect* InPostProcessEffect);
		void StopPeppersprayEffect();
		void StopInjuryEffects();
		void StopHeartbeatEffect();
		void StopHealingEffect();
		void StopGasEffect();
		void StopFlashbangEffect();
		void StopDeathEffect();
		void StopBleedingEffect();
		void StartTaserEffect(class AActor* DamageCauser);
		void StartSuppressionEffects(class AActor* DamageCauser);
		void StartStingerEffect(class AActor* DamageCauser);
		void StartPostProcessEffect_Specific(struct FPostProcessEffectPlayer* InPostProcessSetting, class AActor* DamageCauser);
		void StartPostProcessEffect_FromDataAsset(class UPostProcessEffectData* InPostProcessEffectData, class AActor* DamageCauser);
		void StartPostProcessEffect(struct FPostProcessEffect* InPostProcessEffect, class AActor* DamageCauser);
		void StartPeppersprayEffect(class AActor* DamageCauser);
		void StartInjuryEffects(class AActor* DamageCauser);
		void StartHeartbeatEffect();
		void StartHealingEffect();
		void StartGasEffect(class AActor* DamageCauser);
		void StartFlashbangEffect(class AActor* DamageCauser);
		void StartDeathEffect(class AActor* DamageCauser);
		void StartBleedingEffect();
		void ResetInjuryRadialBlur(float DeltaTime);
		void ProcessPostProcessEffect(struct FPostProcessEffect* InPostProcessEffect, float DeltaTime);
		void PlayPostProcessEffect_Name(const class FName& EffectName, class AActor* DamageCauser);
		void OnSupression(float Strength);
		void OnPlayerStunned(class AReadyOrNotCharacter* Character, float Duration, EStunType StunType, class AActor* DamageCauser);
		void OnPlayerKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
		void OnItemHolstered(class ABaseItem* Item);
		void OnItemEquipped(class ABaseItem* Item);
		void OnFootstep();
		void OnFire();
		void OnDamageTakenDetails(bool bWasHeadshot, float DamageTaken, float HealthRemaining, bool bBlockedByArmour, bool bBlockedByHelmet);
		void OnDamageTaken(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
		void OnBulletImpact(float DirectionForward, float DirectionRight);
		bool IsPostProcessEffectPlaying(class UPostProcessEffectData* InPostProcessEffectData);
		int32_t InitializePostProcessFloatParam(const struct FPostProcessEffect& InPostProcessEffect, const class FName& InParameterName, float Value, int32_t Instance, int32_t CurveKey);
		int32_t GetPostProcessFromFloatParam(const struct FPostProcessEffect& InPostProcessEffect, const class FName& InParameterName, int32_t Instance);
		bool FulfillsAllRequirements(TArray<class UPostProcessRequirement*> InRequirementClasses, class AActor* InDamageCauser, bool bForceFulfillment);
		void FlashOnDeath();
		void FadeToGrey();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlaceGunDownActivity
	 * Size -> 0x0000 (FullSize[0x01F8] - InheritedSize[0x01F8])
	 */
	class UPlaceGunDownActivity : public UBaseActivity
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlayerReferendum
	 * Size -> 0x0008 (FullSize[0x02B0] - InheritedSize[0x02A8])
	 */
	class APlayerReferendum : public AReferendum
	{
	public:
		class AReadyOrNotPlayerState*                                TargetPlayerState;                                       // 0x02A8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MatchStatusCardWidget
	 * Size -> 0x0010 (FullSize[0x0288] - InheritedSize[0x0278])
	 */
	class UMatchStatusCardWidget : public UBaseWidget
	{
	public:
		class UMatchTimeRemainingWidget*                             MatchTimeRemaining;                                      // 0x0278(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCurrentMatchRoundWidget*                              CurrentMatchRound;                                       // 0x0280(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlayerDetailsWidgetComponent
	 * Size -> 0x0010 (FullSize[0x05B0] - InheritedSize[0x05A0])
	 */
	class UPlayerDetailsWidgetComponent : public UWidgetComponent
	{
	public:
		class AReadyOrNotPlayerState*                                OverriddenPlayerState;                                   // 0x05A0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                        MaxDistance;                                             // 0x05A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x05AC(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.WorldBuildingActivityData
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UWorldBuildingActivityData : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PickupMagazineActor
	 * Size -> 0x0028 (FullSize[0x02B0] - InheritedSize[0x0288])
	 */
	class APickupMagazineActor : public APickupActor
	{
	public:
		class FName                                                  MagazineLabel;                                           // 0x0288(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MinimumHitThreshold;                                     // 0x0290(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x0294(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            DroppedMagazineHitEvent;                                 // 0x0298(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FMagazine                                             MagazineData;                                            // 0x02A0(0x0004) Net, NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x02A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ABaseMagazineWeapon*                                   CameFromWeapon;                                          // 0x02A8(0x0008) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void Server_Pickup(class AActor* InPickupInstigator);
		void OnComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		void Multicast_SetWeapon(class ABaseMagazineWeapon* Weapon);
		class ABaseMagazineWeapon* GetValidWeaponForPickerUpper(class APlayerCharacter* PlayerCharacter);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotMetaProfile
	 * Size -> 0x0038 (FullSize[0x0060] - InheritedSize[0x0028])
	 */
	class UReadyOrNotMetaProfile : public USaveGame
	{
	public:
		class FString                                                SaveSlotName;                                            // 0x0028(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                     UserIndex;                                               // 0x0038(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                        SingleplayerProfiles;                                    // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                                CurrentProfile;                                          // 0x0050(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void SaveProfile();
		bool IsProfileNameAllowed(const class FString& ProfileName);
		bool DoesSingleplayerProfileExist(const class FString& ProfileName);
		void DeleteSingleplayerProfile(const class FString& Profile);
		class UReadyOrNotMetaProfile* CreateDefaultSavegame(const class FString& LoadSlotName);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MatchTimeRemainingWidget
	 * Size -> 0x0010 (FullSize[0x0288] - InheritedSize[0x0278])
	 */
	class UMatchTimeRemainingWidget : public UBaseWidget
	{
	public:
		class UTextBlock*                                            MatchTimeRemaining_Text;                                 // 0x0278(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        RoundTimeRemaining;                                      // 0x0280(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x0284(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlayerEffect_ModifyRecoil
	 * Size -> 0x00B0 (FullSize[0x0110] - InheritedSize[0x0060])
	 */
	class UPlayerEffect_ModifyRecoil : public UBasePlayerEffect
	{
	public:
		ERecoilModifierOption                                        ModificationOption;                                      // 0x0060(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EItemClass>                                           WeaponFilter;                                            // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, Protected, NativeAccessSpecifierProtected
		float                                                        RecoilFireStrength;                                      // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        RecoilFireStrengthFirst;                                 // 0x007C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        RecoilDampStrength;                                      // 0x0080(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        RecoilAngleStrength;                                     // 0x0084(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        RecoilRandomness;                                        // 0x0088(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        RecoilFireADSModifier;                                   // 0x008C(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        RecoilBuildupADSModifier;                                // 0x0090(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        RecoilAngleADSModifier;                                  // 0x0094(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        RecoilBuildupDampStrength;                               // 0x0098(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bApplySpecific : 1;                                      // 0x009C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.i, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x009D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSpecificWeaponRecoilMod>                      SpecificWeaponRecoilMods;                                // 0x00A0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, Protected, NativeAccessSpecifierProtected
		TMap<class ABaseMagazineWeapon*, struct FSpecificWeaponRecoilMod> OriginalRecoilValues;                                    // 0x00B0(0x0050) NativeAccessSpecifierPrivate
		TArray<class ABaseMagazineWeapon*>                           AffectedWeapons;                                         // 0x0100(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PreplanningManager
	 * Size -> 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
	 */
	class APreplanningManager : public AInfo
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MedicalHealWidget
	 * Size -> 0x00C8 (FullSize[0x0340] - InheritedSize[0x0278])
	 */
	class UMedicalHealWidget : public UBaseWidget
	{
	public:
		float                                                        CurrentHealth;                                           // 0x0278(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x027C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                PrefixHealerString;                                      // 0x0280(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FString                                                PostfixHealeeString;                                     // 0x0290(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FString                                                PostfixHealeeMortallyWoundedString;                      // 0x02A0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FString                                                PostfixNoBrokenLimbsString;                              // 0x02B0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                  HealerName;                                              // 0x02C0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                  HealeeName;                                              // 0x02C8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MinHealth;                                               // 0x02D0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MaxHealth;                                               // 0x02D4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetSwitcher*                                       HealingWidgetSwitcher;                                   // 0x02D8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UProgressBar*                                          HealingProgressBar_Healer;                               // 0x02E0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UProgressBar*                                          HealingProgressBar_Healee;                               // 0x02E8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                            HealerText;                                              // 0x02F0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                            HealeeText;                                              // 0x02F8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                            HealeeMortallyWoundedText;                               // 0x0300(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                            HealeeNoBrokenLimbsText;                                 // 0x0308(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                            HealerHealthValueText;                                   // 0x0310(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                            HealeeHealthValueText;                                   // 0x0318(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                            HealeeMortallyWoundedHealthValueText;                    // 0x0320(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetAnimation*                                      FadeIn;                                                  // 0x0328(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetAnimation*                                      FadeOut;                                                 // 0x0330(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetAnimation*                                      HealComplete;                                            // 0x0338(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void StartHealCompleteAnim();
		void StartFadeOutAnim();
		void StartFadeInAnim();
		void ShowNoBrokenLimbsWidget();
		void ShowMortallyWoundedWidget();
		void ShowHealerWidget();
		void ShowHealeeWidget();
		void SetCurrentHealth(float NewHealth);
		void InitializeWidget(const class FName& InHealerName, const class FName& InHealeeName, float InCurrentHealth, float InMinHealth, float InMaxHealth);
		class UWidgetSwitcher* GetWidgetSwitcher();
		class UProgressBar* GetHealerHealingProgressBar();
		class UProgressBar* GetHealeeHealingProgressBar();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlayerHealthStatusWidget
	 * Size -> 0x0020 (FullSize[0x0280] - InheritedSize[0x0260])
	 */
	class UPlayerHealthStatusWidget : public UUserWidget
	{
	public:
		class UHealthStatusWidget*                                   Health;                                                  // 0x0260(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHealthStatusWidget*                                   Armor;                                                   // 0x0268(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHealthStatusWidget*                                   Helmet;                                                  // 0x0270(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class APlayerCharacter*                                      PlayerCharacter;                                         // 0x0278(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.OpenDoorTeamQuestNode
	 * Size -> 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
	 */
	class UOpenDoorTeamQuestNode : public UCheckDoorQuestNode
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotProfile
	 * Size -> 0x0110 (FullSize[0x0138] - InheritedSize[0x0028])
	 */
	class UReadyOrNotProfile : public USaveGame
	{
	public:
		class FString                                                SaveSlotName;                                            // 0x0028(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                     UserIndex;                                               // 0x0038(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FString, struct FBasicLevelStats>                 LevelStats;                                              // 0x0040(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		TMap<class FName, int32_t>                                   ChallengeProgress;                                       // 0x0090(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		TMap<class FString, float>                                   CourseTimes;                                             // 0x00E0(0x0050) NativeAccessSpecifierPublic
		float                                                        Cash;                                                    // 0x0130(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x0134(0x0004) MISSED OFFSET (PADDING)

	public:
		void SaveProfile();
		void SaveLevelStats(const struct FBasicLevelStats& InStats, bool* NewBestRating, bool* NewBestTime);
		void ResetProfile();
		void LoadLevelStats(struct FBasicLevelStats* OutStats, ECOOPMode Mode, const class FString& MapName);
		class UReadyOrNotProfile* CreateDefaultSavegame(class UReadyOrNotProfile* ProfileClass, const class FString& LoadSlotName);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotMultiplayerProfile
	 * Size -> 0x0000 (FullSize[0x0138] - InheritedSize[0x0138])
	 */
	class UReadyOrNotMultiplayerProfile : public UReadyOrNotProfile
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Optiwand
	 * Size -> 0x00E8 (FullSize[0x09B0] - InheritedSize[0x08C8])
	 */
	class AOptiwand : public ABaseItem
	{
	public:
		class UAnimMontage*                                          Montage_StartOptiwandADS;                                // 0x08C8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          Montage_EndOptiwandADS;                                  // 0x08D0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CollisionTraceDistance;                                  // 0x08D8(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x08DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            FMODOptiwandMove;                                        // 0x08E0(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            FMODOptiwandEnterView;                                   // 0x08E8(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            FMODOptiwandExitView;                                    // 0x08F0(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstance*                                     MI_AIOutline;                                            // 0x08F8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x0900(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneCaptureComponent2D*                              SceneCapture2D;                                          // 0x0908(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextureRenderTarget2D*                                CameraRenderTarget;                                      // 0x0910(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ACameraActor*                                          CameraActor;                                             // 0x0918(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                  LookAtPosition;                                          // 0x0920(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FRotator                                 LookAtRotation;                                          // 0x092C(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FRotator                                 OptiwandCaptureRotation;                                 // 0x0938(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		bool                                                         bMirorring : 1;                                          // 0x0944(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         UnknownData_0002 : 7;                                    // 0x0944(0x0001) BIT_FIELD (PADDING)
		bool                                                         bRepMirroring;                                           // 0x0945(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bInUse : 1;                                              // 0x0946(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0003[0x1];                                   // 0x0947(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ADoor*                                                 LastUsedDoor;                                            // 0x0948(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UFMODAudioComponent*                                   FMODOptiwandMoveAudioComp;                               // 0x0950(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UFMODAudioComponent*                                   FMODOptiwandEnterViewComp;                               // 0x0958(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UFMODAudioComponent*                                   FMODOptiwandExitViewComp;                                // 0x0960(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0004[0x48];                                  // 0x0968(0x0048) MISSED OFFSET (PADDING)

	public:
		void Server_NotifyMirroring(bool bIsMirroring);
		bool IsCameraBlocked();
		EOptiwandViewMode GetViewMode();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlayerHUD
	 * Size -> 0x0008 (FullSize[0x0318] - InheritedSize[0x0310])
	 */
	class APlayerHUD : public AHUD
	{
	public:
		class UUserWidget*                                           PlayerHUD;                                               // 0x0310(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void SetWidgetTranslationByMouseDelta(class APlayerController* Controller, class UUserWidget* Widget, float DeltaSeconds, float InterpSpeed, float InputScale, float ClampAt);
		void SetCanvasTranslationByMouseDelta(class APlayerController* Controller, class UCanvasPanel* Widget, float DeltaSeconds, float InterpSpeed, float InputScale, float ClampAt);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ProgressionData
	 * Size -> 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
	 */
	class UProgressionData : public UDataAsset
	{
	public:
		struct FLevelUpData                                          LevelUpData;                                             // 0x0030(0x0060) Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.OutOfBoundsVolume
	 * Size -> 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
	 */
	class AOutOfBoundsVolume : public AActor
	{
	public:
		class UBoxComponent*                                         Bounds;                                                  // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotSingleplayerProfile
	 * Size -> 0x0008 (FullSize[0x0140] - InheritedSize[0x0138])
	 */
	class UReadyOrNotSingleplayerProfile : public UReadyOrNotProfile
	{
	public:
		int32_t                                                      CompletionCount;                                         // 0x0138(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x013C(0x0004) MISSED OFFSET (PADDING)

	public:
		class UReadyOrNotSingleplayerProfile* CreateNewSingleplayerProfile(const class FString& SaveName);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PickupWeaponActor
	 * Size -> 0x0030 (FullSize[0x02B8] - InheritedSize[0x0288])
	 */
	class APickupWeaponActor : public APickupActor
	{
	public:
		class ABaseWeapon*                                           Weapon;                                                  // 0x0288(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bKillOnPickup;                                           // 0x0290(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSecondaryWeapon;                                        // 0x0291(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bModifyLoadout;                                          // 0x0292(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x5];                                   // 0x0293(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWeaponAttachment*                                     ScopeAttachment;                                         // 0x0298(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponAttachment*                                     MuzzleAttachment;                                        // 0x02A0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponAttachment*                                     UnderbarrelAttachment;                                   // 0x02A8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponAttachment*                                     OverbarrelAttachment;                                    // 0x02B0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PairedInteractionDriver
	 * Size -> 0x0100 (FullSize[0x0320] - InheritedSize[0x0220])
	 */
	class APairedInteractionDriver : public AInfo
	{
	public:
		class UInteractionsData*                                     InteractionData;                                         // 0x0220(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AActor*                                                Driver;                                                  // 0x0228(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AActor*                                                Slave;                                                   // 0x0230(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ABaseItem*                                             OptionalItem;                                            // 0x0238(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x88];                                  // 0x0240(0x0088) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               Event_OnPairedInteractionStarted;                        // 0x02C8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xF];                                   // 0x02C9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               Event_OnDriverInteractionFinished;                       // 0x02D8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0xF];                                   // 0x02D9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               Event_OnSlaveInteractionFinished;                        // 0x02E8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0xF];                                   // 0x02E9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               Event_OnPairedInteractionFinished;                       // 0x02F8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0xF];                                   // 0x02F9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0005[0x18];                                  // 0x0308(0x0018) MISSED OFFSET (PADDING)

	public:
		void OnSlaveInteractionFinished();
		void OnPairedInteractionStarted__DelegateSignature();
		void OnPairedInteractionFinished__DelegateSignature(class AActor* InDriver, class AActor* InSlave);
		void OnInteractionFinished();
		void OnEquippedItemHolstered(class ABaseItem* Item);
		void OnDriverInteractionFinished();
		void OnActorInteractionFinished__DelegateSignature(class AActor* InActor);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlaceTrapActivityData
	 * Size -> 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
	 */
	class UPlaceTrapActivityData : public UWorldBuildingActivityData
	{
	public:
		class ADoor*                                                 Door;                                                    // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlayerSpeedIndicator_V2
	 * Size -> 0x0078 (FullSize[0x02F0] - InheritedSize[0x0278])
	 */
	class UPlayerSpeedIndicator_V2 : public UBaseWidget
	{
	public:
		class USizeBox*                                              Twenty_Box;                                              // 0x0278(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Twenty_Image;                                            // 0x0280(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USizeBox*                                              Fourty_Box;                                              // 0x0288(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Fourty_Image;                                            // 0x0290(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USizeBox*                                              Sixty_Box;                                               // 0x0298(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Sixty_Image;                                             // 0x02A0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USizeBox*                                              Eighty_Box;                                              // 0x02A8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                Eighty_Image;                                            // 0x02B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USizeBox*                                              OneHundred_Box;                                          // 0x02B8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                OneHundred_Image;                                        // 0x02C0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                            SpeedPercentage_Text;                                    // 0x02C8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class APlayerCharacter*                                      PlayerCharacter;                                         // 0x02D0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        BaselineOpacity;                                         // 0x02D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        FadeSpeed;                                               // 0x02DC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        LastSetRunSpeedPercent;                                  // 0x02E0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MinRunSpeedPercent;                                      // 0x02E4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MaxRunSpeedPercent;                                      // 0x02E8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        NormalizedRunSpeedPercent;                               // 0x02EC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlaceTrapActivity
	 * Size -> 0x0010 (FullSize[0x02A8] - InheritedSize[0x0298])
	 */
	class UPlaceTrapActivity : public UWorldBuildingActivity
	{
	public:
		class ADoor*                                                 Door;                                                    // 0x0298(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x02A0(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnTrapPlacementInterrupted();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PingActor
	 * Size -> 0x00B8 (FullSize[0x02D8] - InheritedSize[0x0220])
	 */
	class APingActor : public AActor
	{
	public:
		class AActor*                                                PingedActor;                                             // 0x0220(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSlateBrush                                           IconBrush;                                               // 0x0228(0x0088) BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic
		class FText                                                  PingText;                                                // 0x02B0(0x0018) BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic
		class UObjectiveMarkerComponent*                             ObjectiveMarkerComponent;                                // 0x02C8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMapActorComponent*                                    MapActorComponent;                                       // 0x02D0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void ToggleObjectiveMarkerVisibility();
		void ShowObjectiveMarker();
		void Setup(class AActor* InActor);
		void OnRep_SetPingText();
		void OnRep_SetIconBrush();
		void HideObjectiveMarker();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PropagationPoint
	 * Size -> 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
	 */
	class APropagationPoint : public ATargetPoint
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ProgressionComponent
	 * Size -> 0x0010 (FullSize[0x00C0] - InheritedSize[0x00B0])
	 */
	class UProgressionComponent : public UActorComponent
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x00B0(0x0010) MISSED OFFSET (PADDING)

	public:
		void AddExperience(float XP);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.RandomizedShippingContainerActor
	 * Size -> 0x0060 (FullSize[0x0280] - InheritedSize[0x0220])
	 */
	class ARandomizedShippingContainerActor : public AActor
	{
	public:
		class UStaticMeshComponent*                                  ContainerMeshComp;                                       // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UStaticMeshComponent*                                  ContainerDecalsComp;                                     // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UStaticMeshComponent*                                  LeftDoorDecalsComp;                                      // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UStaticMeshComponent*                                  RightDoorDecalsComp;                                     // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class UMaterialInterface*>                            ContainerMaterials;                                      // 0x0240(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UStaticMesh*>                                   ContainerDecals;                                         // 0x0250(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UStaticMesh*>                                   LeftDoorDecals;                                          // 0x0260(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UStaticMesh*>                                   RightDoorDecals;                                         // 0x0270(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		void RandomizeContainer();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlayerStart_VIP_Spawn
	 * Size -> 0x0040 (FullSize[0x0290] - InheritedSize[0x0250])
	 */
	class APlayerStart_VIP_Spawn : public APlayerStart
	{
	public:
		bool                                                         bHasVisited : 1;                                         // 0x0250(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0251(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                  VIPSpawnDescriptor;                                      // 0x0258(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		int32_t                                                      SuffixNumber;                                            // 0x0270(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x0274(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBoxComponent*                                         SpawnBox;                                                // 0x0278(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextRenderComponent*                                  TextRender;                                              // 0x0280(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UArrowComponent*                                       SpawnDirection;                                          // 0x0288(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		class FText GetVIPSpawnDescriptor();
		struct FRotator GetSpawnDirection();
		struct FVector GetRandomSpawnPoint();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PingInterface
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IPingInterface : public IInterface
	{
	public:
		class FText GetPingText();
		struct FVector GetPingLocation();
		struct FSlateBrush GetPingIcon();
		float GetPingDuration();
		bool CanPing();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotAIConfig
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UReadyOrNotAIConfig : public UGameplayConfig
	{
	public:
		class UReadyOrNotAIConfig* Get();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PatrolPoint
	 * Size -> 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
	 */
	class APatrolPoint : public AActor
	{
	public:
		class USceneComponent*                                       SceneRoot;                                               // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlayerViewActor
	 * Size -> 0x00C0 (FullSize[0x02E0] - InheritedSize[0x0220])
	 */
	class APlayerViewActor : public AActor
	{
	public:
		bool                                                         bShouldCaptureScene : 1;                                 // 0x0220(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0221(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                       SceneComponent;                                          // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USceneCaptureComponent2D*                              CameraCaptureComponent;                                  // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FPostProcessEffect                                    SwitchViewEffects;                                       // 0x0238(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.i, Protected, NativeAccessSpecifierProtected
		class UFMODEvent*                                            SwitchViewEvent;                                         // 0x0260(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        DeathViewTime;                                           // 0x0268(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x026C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            DeathViewEvent;                                          // 0x0270(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODEvent*                                            CloseViewEvent;                                          // 0x0278(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextureRenderTarget2D*                                CameraRenderTarget;                                      // 0x0280(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class APlayerCharacter*                                      OwningPlayerCharacter;                                   // 0x0288(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AReadyOrNotCharacter*                                  ViewCharacter;                                           // 0x0290(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                  TargetLocation;                                          // 0x0298(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FRotator                                 TargetRotation;                                          // 0x02A4(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		class UMaterialInstance*                                     MI_PostProcess_Greyscale;                                // 0x02B0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMaterialInstance*                                     MI_PostProcess_Bump;                                     // 0x02B8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMaterialInstance*                                     MI_PostProcess_Glitch;                                   // 0x02C0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bDeathEffectsApplied : 1;                                // 0x02C8(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bSwitchViewEffectsApplied : 1;                           // 0x02C8(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x17];                                  // 0x02C9(0x0017) MISSED OFFSET (PADDING)

	public:
		void UpdateViewTarget(const struct FVector& NewLocation, const struct FRotator& NewRotation);
		void TryNextView(bool bRequestClose, bool bIncludeDeadViews);
		void SetViewPlayer(class AReadyOrNotCharacter* NewViewCharacter);
		void SetOwningPlayer(class APlayerCharacter* NewOwnerCharacter);
		bool IsSwitchingView();
		void HideComponent(class UPrimitiveComponent* ComponentToHide);
		void HideActor(class AActor* ActorToHide, bool bIncludeChildActors);
		void ClearHiddenComponents();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ModManagerWidget
	 * Size -> 0x0028 (FullSize[0x0288] - InheritedSize[0x0260])
	 */
	class UModManagerWidget : public UUserWidget
	{
	public:
		class UModioManager*                                         ModioManager;                                            // 0x0260(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x20];                                  // 0x0268(0x0020) MISSED OFFSET (PADDING)

	public:
		void ShowUserAuthenticator();
		void ShowErrorDialog(const class FString& ErrorMessage);
		void RequestSubscribedMods(const class FString& Search);
		void RequestSearch(const class FString& Query);
		void RequestRefresh();
		void RequestProfilePicture();
		void RequestAllMods(const class FString& Search);
		void OnUserAuthenticated();
		void OnProfilePictureLoaded(class UTexture2DDynamic* Image);
		void OnLoadingStarted();
		void OnLoadingFinished();
		class FString GetUsername();
		void ClearMods();
		void AddMod(class UModData* ModData);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PenetrationData
	 * Size -> 0x04C8 (FullSize[0x04F8] - InheritedSize[0x0030])
	 */
	class UPenetrationData : public UDataAsset
	{
	public:
		struct FMaterialPenetration                                  DefaultPenetrationData;                                  // 0x0030(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Aluminium;                                           // 0x0048(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Asphalt;                                             // 0x0060(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Brick;                                               // 0x0078(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_CarbonFibre;                                         // 0x0090(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Cardboard;                                           // 0x00A8(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Ceramic;                                             // 0x00C0(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_ConcreteSoft;                                        // 0x00D8(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_ConcreteStrong;                                      // 0x00F0(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Dirt;                                                // 0x0108(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Drywall;                                             // 0x0120(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Electrical;                                          // 0x0138(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_EnergyShield;                                        // 0x0150(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Fabric_Carpet;                                       // 0x0168(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Fabric_Stuffing;                                     // 0x0180(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Fabric_Thin;                                         // 0x0198(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Flesh;                                               // 0x01B0(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Galvanized;                                          // 0x01C8(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Glass_Plate;                                         // 0x01E0(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Glass_Windshield;                                    // 0x01F8(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Grass;                                               // 0x0210(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Gravel;                                              // 0x0228(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Ice;                                                 // 0x0240(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Lava;                                                // 0x0258(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Lead;                                                // 0x0270(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Leaves;                                              // 0x0288(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Limestone;                                           // 0x02A0(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Mahogany;                                            // 0x02B8(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Marble_Coated;                                       // 0x02D0(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Marble_Thick;                                        // 0x02E8(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Mud;                                                 // 0x0300(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Oil;                                                 // 0x0318(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Paper;                                               // 0x0330(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Pine;                                                // 0x0348(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Plaster;                                             // 0x0360(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Plastic;                                             // 0x0378(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Plywood;                                             // 0x0390(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Polystyrene;                                         // 0x03A8(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Powder;                                              // 0x03C0(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Rock;                                                // 0x03D8(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Rubber;                                              // 0x03F0(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Sand;                                                // 0x0408(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Snow;                                                // 0x0420(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Soil;                                                // 0x0438(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Steel;                                               // 0x0450(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Tin;                                                 // 0x0468(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Treewood;                                            // 0x0480(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Wallpaper;                                           // 0x0498(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Water;                                               // 0x04B0(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Vehicle;                                             // 0x04C8(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate
		struct FMaterialPenetration                                  RON_Bulletproof_Glass;                                   // 0x04E0(0x0018) Edit, NoDestructor, NativeAccessSpecifierPrivate

	public:
		struct FMaterialPenetration GetPenetrationData(EPhysicalSurface Surface);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PolicePresenceTestActor
	 * Size -> 0x0018 (FullSize[0x0238] - InheritedSize[0x0220])
	 */
	class APolicePresenceTestActor : public AActor
	{
	public:
		class USceneComponent*                                       Scene;                                                   // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBillboardComponent*                                   Police;                                                  // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBillboardComponent*                                   Suspect;                                                 // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Meleeable
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IMeleeable : public IInterface
	{
	public:
		bool ShouldPlayMeleeEffectsLocally();
		void OnMelee(class AReadyOrNotCharacter* Attacker, const struct FHitResult& Hit);
		class UFMODEvent* GetMeleeImpactSound();
		class UParticleSystem* GetMeleeImpactParticle();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlanningMapWidget
	 * Size -> 0x0018 (FullSize[0x0278] - InheritedSize[0x0260])
	 */
	class UPlanningMapWidget : public UUserWidget
	{
	public:
		bool                                                         bDrawable;                                               // 0x0260(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0261(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FFloorMapPointData>                            DrawPointData;                                           // 0x0268(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		void OnPersonnelRemoved(int32_t PersonnelNum);
		void OnPersonnelAdded(int32_t PersonnelNum, int32_t PersonnelZone);
		void OnForceMapRefresh();
		class UWorld* GetWorldContext();
		void ClearPointData(bool bClearAll, int32_t FloorNum, bool bClearAllFloors);
		void AddPointData(const struct FVector2D& PointData, int32_t FloorNum, EFreeDrawColor Color, bool bNewPoint, float Thickness);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PepperballDamageType
	 * Size -> 0x0010 (FullSize[0x0630] - InheritedSize[0x0620])
	 */
	class UPepperballDamageType : public UStunDamage
	{
	public:
		float                                                        StunDurationHeadshot;                                    // 0x0620(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        StunDurationLeg;                                         // 0x0624(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0628(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MeleeWeapon
	 * Size -> 0x0018 (FullSize[0x0E90] - InheritedSize[0x0E78])
	 */
	class AMeleeWeapon : public ABaseWeapon
	{
	public:
		class FString                                                MeleeMontage;                                            // 0x0E78(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bApplyBleed;                                             // 0x0E88(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x0E89(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MeleeDamage;                                             // 0x0E8C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlantArea
	 * Size -> 0x0018 (FullSize[0x0238] - InheritedSize[0x0220])
	 */
	class APlantArea : public AActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBoxComponent*                                         OverlapArea;                                             // 0x0230(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlacedBag
	 * Size -> 0x00B8 (FullSize[0x02D8] - InheritedSize[0x0220])
	 */
	class APlacedBag : public AActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USphereComponent*                                      IconBolt;                                                // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FHitResult                                            PlacementHit;                                            // 0x0230(0x0088) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                         bOverrideUseText;                                        // 0x02B8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x02B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                  OverrideText;                                            // 0x02C0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic

	public:
		bool StartUse(class APlayerCharacter* User);
		void OnPlacedBagUsed(class APlayerCharacter* User);
		TArray<class USceneComponent*> GetUseViewComponents();
		void EndUse(class APlayerCharacter* User);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlayableCharacterData
	 * Size -> 0x0100 (FullSize[0x0130] - InheritedSize[0x0030])
	 */
	class UPlayableCharacterData : public UDataAsset
	{
	public:
		class FText                                                  CharacterNameUI;                                         // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                  CharacterName;                                           // 0x0048(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                  CharacterRole;                                           // 0x0060(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                  CharacterBio;                                            // 0x0078(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                  CharacterRealName;                                       // 0x0090(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                  CharacterYearsOfService;                                 // 0x00A8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                  CharacterDateOfBirth;                                    // 0x00C0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FName                                                  HandleName;                                              // 0x00D8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TSoftObjectPtr<class USkeletalMesh>                          FaceMesh;                                                // 0x00E0(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x0104(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TSoftObjectPtr<class UPoseAsset>                             FaceROM;                                                 // 0x0108(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x012C(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotAnimInstance
	 * Size -> 0x01A0 (FullSize[0x0480] - InheritedSize[0x02E0])
	 */
	class UReadyOrNotAnimInstance : public UMotivityAnimInstance
	{
	public:
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x02E0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                  Velocity;                                                // 0x02E4(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        Speed;                                                   // 0x02F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SpeedHorizontal;                                         // 0x02F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SpeedVertical;                                           // 0x02F8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MaxSpeed;                                                // 0x02FC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        Direction;                                               // 0x0300(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ViewPitch;                                               // 0x0304(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ViewYaw;                                                 // 0x0308(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsMoving;                                               // 0x030C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsInAir;                                                // 0x030D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x2];                                   // 0x030E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRotator                                 HeadLookRotation;                                        // 0x0310(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x031C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct PCoreUObject_FTransform                               ActorTransform;                                          // 0x0320(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                  VelocityLocalNormalized;                                 // 0x0350(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMoveDirection                                               CurrentDirection;                                        // 0x035C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x3];                                   // 0x035D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                                WalkSpeedDatabase;                                       // 0x0360(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<float>                                                JogSpeedDatabase;                                        // 0x0370(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<float>                                                CrouchWalkSpeedDatabase;                                 // 0x0380(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                        DirDegreesPerSecond;                                     // 0x0390(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ForwardDirAngle;                                         // 0x0394(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        BackwardDirAngle;                                        // 0x0398(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LeftDirAngle;                                            // 0x039C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RightDirAngle;                                           // 0x03A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ForwardDirDeg;                                           // 0x03A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        BackwardDirDeg;                                          // 0x03A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LeftDirDeg;                                              // 0x03AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RightDirDeg;                                             // 0x03B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        StrafeForwardDir;                                        // 0x03B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        StrafeBackwardDir;                                       // 0x03B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        StrafeLeftDir;                                           // 0x03BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        StrafeRightDir;                                          // 0x03C0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MovementAlpha;                                           // 0x03C4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MovementJogAlpha;                                        // 0x03C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MovementJogThreshold;                                    // 0x03CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  LeftFootIKLocation;                                      // 0x03D0(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  RightFootIKLocation;                                     // 0x03DC(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                 LeftFootIKRotation;                                      // 0x03E8(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                 RightFootIKRotation;                                     // 0x03F4(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                  HipOffsetVector;                                         // 0x0400(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCrouching;                                              // 0x040C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsStopping;                                             // 0x040D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x2];                                   // 0x040E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRotator                                 HeadRotation;                                            // 0x0410(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x4];                                   // 0x041C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCarryArrestedAnimState                               CarryArrestedAnimState;                                  // 0x0420(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		bool                                                         bIsCarried;                                              // 0x0428(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsCarrying;                                             // 0x0429(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMotionBlockType                                             CurMotionBlock;                                          // 0x042A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsFalling;                                              // 0x042B(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHasPrelanded;                                           // 0x042C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bJumpRecoveryActive;                                     // 0x042D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x2];                                   // 0x042E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        JumpRecoveryAnimTime;                                    // 0x0430(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        JumpRecoveryStrength;                                    // 0x0434(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        JumpRecoveryTime;                                        // 0x0438(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0xC];                                   // 0x043C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        DirAngle;                                                // 0x0448(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DirAngleDegrees;                                         // 0x044C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMoveDirectionExt                                            CurrentDirectionExt;                                     // 0x0450(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsTeamMLO;                                              // 0x0451(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0008[0x2];                                   // 0x0452(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        LeftHandIKAlpha;                                         // 0x0454(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SprintAlpha;                                             // 0x0458(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsDeployableEquipped;                                   // 0x045C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsPistol;                                               // 0x045D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsRifle;                                                // 0x045E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsItem;                                                 // 0x045F(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bItemOneHanded;                                          // 0x0460(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsC2Charge;                                             // 0x0461(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLevel1MovementTrigger;                                  // 0x0462(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLevel2MovementTrigger;                                  // 0x0463(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLevel3MovementTrigger;                                  // 0x0464(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCrouchLevel1MovementTrigger;                            // 0x0465(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRotationRateReached;                                    // 0x0466(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0009[0x1];                                   // 0x0467(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        DeltaRotation;                                           // 0x0468(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0010[0xC];                                   // 0x046C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        SprintFPAlpha;                                           // 0x0478(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        PelvisMovementBobAlpha;                                  // 0x047C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		float GetWeightFromSlotInversed(const class FName& SlotName);
		float GetWeightFromSlot(const class FName& SlotName);
		EMoveDirectionExt GetOppositeDirectionExt(EMoveDirectionExt CurrentDir);
		struct FRotator GetLookAtRotation();
		EMoveDirectionExt GetCurrentDirectionExtFromYawAngle(float YawAngle);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PopupTarget
	 * Size -> 0x0028 (FullSize[0x0248] - InheritedSize[0x0220])
	 */
	class APopupTarget : public AActor
	{
	public:
		class USkeletalMeshComponent*                                Mesh;                                                    // 0x0220(0x0008) Edit, ExportObject, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                      MaxHealth;                                               // 0x0228(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                        PopupTime;                                               // 0x022C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                        Health;                                                  // 0x0230(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0xC];                                   // 0x0234(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bFallDown;                                               // 0x0240(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x0241(0x0007) MISSED OFFSET (PADDING)

	public:
		void Popup();
		bool IsAlive();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotCharacterAnimData
	 * Size -> 0x0358 (FullSize[0x0388] - InheritedSize[0x0030])
	 */
	class UReadyOrNotCharacterAnimData : public UDataAsset
	{
	public:
		TArray<struct FCharacterTPAnim>                              Surrender;                                               // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              FakeSurrender;                                           // 0x0040(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Spooked_Front;                                           // 0x0050(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Spooked_Right;                                           // 0x0060(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Spooked_Left;                                            // 0x0070(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Spooked_Back;                                            // 0x0080(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Arrested;                                                // 0x0090(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Decision;                                                // 0x00A0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              StandRelaxedFidget;                                      // 0x00B0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              StandAlertFidget;                                        // 0x00C0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              HitReaction_Head;                                        // 0x00D0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              HitReaction_UpperBody;                                   // 0x00E0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              HitReaction_LowerBody;                                   // 0x00F0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              HitReaction_LeftArm;                                     // 0x0100(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              HitReaction_RightArm;                                    // 0x0110(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              HitReaction_LeftLeg;                                     // 0x0120(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              HitReaction_RightLeg;                                    // 0x0130(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              HitReaction_LeftFoot;                                    // 0x0140(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              HitReaction_RightFoot;                                   // 0x0150(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              HitReaction_DropWeapon;                                  // 0x0160(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FCharacterTPAnim                                      FireWeapon;                                              // 0x0170(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FCharacterTPAnim                                      DrawWeapon;                                              // 0x0178(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FCharacterTPAnim                                      HolsterWeapon;                                           // 0x0180(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FCharacterTPAnim                                      ReloadWeapon;                                            // 0x0188(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Death_Head_Front;                                        // 0x0190(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Death_Head_Back;                                         // 0x01A0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Death_Arm_Left_Front;                                    // 0x01B0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Death_Arm_Left_Back;                                     // 0x01C0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Death_Arm_Right_Front;                                   // 0x01D0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Death_Arm_Right_Back;                                    // 0x01E0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Death_Leg_Left_Front;                                    // 0x01F0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Death_Leg_Left_Back;                                     // 0x0200(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Death_Leg_Right_Front;                                   // 0x0210(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Death_Leg_Right_Back;                                    // 0x0220(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Death_Front;                                             // 0x0230(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Death_Back;                                              // 0x0240(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Death_Bleedout_Head;                                     // 0x0250(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Death_Bleedout_Chest;                                    // 0x0260(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Death_Bleedout_Stomach;                                  // 0x0270(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Death_Bleedout_Left_Arm;                                 // 0x0280(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Death_Bleedout_Right_Arm;                                // 0x0290(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Death_Bleedout_Left_Leg;                                 // 0x02A0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Death_Bleedout_Right_Leg;                                // 0x02B0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Flashbanged;                                             // 0x02C0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Stingballed;                                             // 0x02D0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Gassed;                                                  // 0x02E0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Sprayed;                                                 // 0x02F0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Tasered;                                                 // 0x0300(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              Meleed;                                                  // 0x0310(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FCharacterTPAnim                                      OpenDoor;                                                // 0x0320(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FCharacterTPAnim                                      CloseDoor;                                               // 0x0328(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FCharacterTPAnim                                      Flinches;                                                // 0x0330(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
		class UAnimSequence*                                         Calm_Turn90Left;                                         // 0x0338(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                         Calm_Turn90Right;                                        // 0x0340(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                         Calm_Turn180Left;                                        // 0x0348(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                         Calm_Turn180Right;                                       // 0x0350(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                         Alert_Turn90Left;                                        // 0x0358(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                         Alert_Turn90Right;                                       // 0x0360(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                         Alert_Turn180Left;                                       // 0x0368(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                         Alert_Turn180Right;                                      // 0x0370(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCharacterTPAnim>                              AllAnimsList;                                            // 0x0378(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotAudioVolume
	 * Size -> 0x0040 (FullSize[0x0298] - InheritedSize[0x0258])
	 */
	class AReadyOrNotAudioVolume : public AVolume
	{
	public:
		TArray<class UFMODEvent*>                                    ReverbEvents;                                            // 0x0258(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                         bLocalEffectsPlayed;                                     // 0x0268(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0269(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FFMODEventInstance>                            EventInstances;                                          // 0x0270(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class UFMODAudioComponent*>                           AttachedAudioComponents;                                 // 0x0280(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x0290(0x0008) MISSED OFFSET (PADDING)

	public:
		bool IsAnotherVolumeActivatedAndPlayingEventInst(const struct FFMODEventInstance& EventInst);
		bool IsAnotherVolumeActivatedAndPlayingEvent(class UFMODEvent* Event, struct FFMODEventInstance* EventInstance);
		bool HasRanOnce();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PlacedC2Explosive
	 * Size -> 0x0140 (FullSize[0x0360] - InheritedSize[0x0220])
	 */
	class APlacedC2Explosive : public AActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystemComponent*                              ExplosionComp;                                           // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UFMODAudioComponent*                                   AudioComp;                                               // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USkeletalMeshComponent*                                MeshComp;                                                // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UInteractableComponent*                                C2InteractableComponent;                                 // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAIPerceptionStimuliSourceComponent*                   PerceptionStimuliComp;                                   // 0x0248(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AC2Explosive*                                          ConnectedC2Explosive;                                    // 0x0250(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AController*                                           PlacedByController;                                      // 0x0258(0x0008) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DamageToInflict;                                         // 0x0260(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MinDamageToInflict;                                      // 0x0264(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDamageType*                                           DamageType;                                              // 0x0268(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DamageInnerRadius;                                       // 0x0270(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DamageOuterRadius;                                       // 0x0274(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ExplosionPostKillTime;                                   // 0x0278(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDetonated;                                              // 0x027C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x027D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        DoorIntegrityDamage;                                     // 0x0280(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x0284(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                                TargetItem;                                              // 0x0288(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            FMODC2ExplosionAudio;                                    // 0x0290(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FHitResult                                            PlacementHit;                                            // 0x0298(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, Net, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                         bUseScreenShake;                                         // 0x0320(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x7];                                   // 0x0321(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMatineeCameraShake*                                   ExplosionScreenShake;                                    // 0x0328(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CameraShakeRadius;                                       // 0x0330(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x4];                                   // 0x0334(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStunDamage*                                           StunDamageType;                                          // 0x0338(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRemovedViaMultitool;                                    // 0x0340(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0xF];                                   // 0x0341(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bIsBeingRemoved;                                         // 0x0350(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x7];                                   // 0x0351(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReadyOrNotCharacter*                                  IsBeingRemovedBy;                                        // 0x0358(0x0008) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void Server_DetonateC2();
		void RemoveFromTarget();
		void PostExplosionKill();
		void Multicast_OnC2Detonated();
		class USkeletalMeshComponent* GetMeshComp();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotAISense_Sight
	 * Size -> 0x00F0 (FullSize[0x0170] - InheritedSize[0x0080])
	 */
	class UReadyOrNotAISense_Sight : public UAISense
	{
	public:
		unsigned char                                                UnknownData_0000[0xC8];                                  // 0x0080(0x00C8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      MaxTracesPerTick;                                        // 0x0148(0x0004) Edit, ZeroConstructor, Config, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                      MinQueriesPerTimeSliceCheck;                             // 0x014C(0x0004) Edit, ZeroConstructor, Config, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		double                                                       MaxTimeSlicePerTick;                                     // 0x0150(0x0008) Edit, ZeroConstructor, Config, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        HighImportanceQueryDistanceThreshold;                    // 0x0158(0x0004) Edit, ZeroConstructor, Config, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x015C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MaxQueryImportance;                                      // 0x0160(0x0004) Edit, ZeroConstructor, Config, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        SightLimitQueryImportance;                               // 0x0164(0x0004) Edit, ZeroConstructor, Config, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x8];                                   // 0x0168(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PostProcessEffectData
	 * Size -> 0x03F8 (FullSize[0x0428] - InheritedSize[0x0030])
	 */
	class UPostProcessEffectData : public UDataAsset
	{
	public:
		class UMaterialInterface*                                    PostProcess_Material;                                    // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FPostProcessSetting_FloatParam>                ScalarParameters;                                        // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FPostProcessSetting_VectorParam>               VectorParameters;                                        // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                         bDebug : 1;                                              // 0x0058(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                  Note;                                                    // 0x0060(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x3B0];                                 // 0x0078(0x03B0) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotAvoidanceManager
	 * Size -> 0x0028 (FullSize[0x0248] - InheritedSize[0x0220])
	 */
	class AReadyOrNotAvoidanceManager : public AInfo
	{
	public:
		TArray<class ACyberneticCharacter*>                          SpawnedAI;                                               // 0x0220(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x0230(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                  MoveToTag_01;                                            // 0x0234(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                  MoveToTag_02;                                            // 0x023C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x0244(0x0004) MISSED OFFSET (PADDING)

	public:
		void Test_RedMoveTagTwo();
		void Test_RedMoveTagOne();
		void Test_BlueMoveTagTwo();
		void Test_BlueMoveTagOne();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MessageDisplayBox
	 * Size -> 0x0028 (FullSize[0x0288] - InheritedSize[0x0260])
	 */
	class UMessageDisplayBox : public UUserWidget
	{
	public:
		class FString                                                MessageTxt;                                              // 0x0260(0x0010) BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                                ButtonTxt;                                               // 0x0270(0x0010) BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShouldQuitOnButtonPress;                                // 0x0280(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0281(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PostProcessRequirement
	 * Size -> 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
	 */
	class UPostProcessRequirement : public UObject
	{
	public:
		class APlayerCharacter*                                      PlayerCharacter;                                         // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AActor*                                                DamageCauser;                                            // 0x0030(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void Initialize(class APlayerCharacter* InPlayerCharacter, class AActor* InDamageCauser);
		class APlayerCharacter* GetPlayerCharacter();
		class AActor* GetDamageCauser();
		bool EnablePostProcessEffect();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotBackend
	 * Size -> 0x04D8 (FullSize[0x0500] - InheritedSize[0x0028])
	 */
	class UReadyOrNotBackend : public UObject
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x0028(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                SteamId;                                                 // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                                SteamName;                                               // 0x0048(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                                Ticket;                                                  // 0x0058(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                                CachedDiscordOneTimeUseCode;                             // 0x0068(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x10];                                  // 0x0078(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint8_t                                                      rgchToken[0x400];                                        // 0x0088(0x0400) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x0488(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ELoginState                                                  LoginState;                                              // 0x048C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0003[0x1B];                                  // 0x048D(0x001B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnStatsStarted;                                          // 0x04A8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0xF];                                   // 0x04A9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnStatsUploadProgress;                                   // 0x04B8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0xF];                                   // 0x04B9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0006[0x10];                                  // 0x04C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnStatsSaved;                                            // 0x04D8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0xF];                                   // 0x04D9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		bool                                                         bProfileInProgress;                                      // 0x04E8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0008[0x17];                                  // 0x04E9(0x0017) MISSED OFFSET (PADDING)

	public:
		void TickLoginDelay();
		void StartCapturingProfile();
		void OnStatsUploadProgress__DelegateSignature(const class FString& Filename, float Percentage);
		void OnStatsStarted__DelegateSignature();
		void OnStatsSaved__DelegateSignature(bool bWasSuccessful, const class FString& StatsName);
		void OnPlayerGameFinishedMetric(const class FString& InMap, const class FString& InGameType, float InAverageFps);
		void OnGameStartedMetric(const class FString& InMap, const class FString& InGameType, int32_t InNumPlayers);
		void OnGameFinishedMetric(const class FString& InMap, const class FString& InGameType, const class FString& InGameResult);
		void OnGameCrashedMetric(const class FString& InState);
		void OnFinishedCapturingProfile();
		void OnCheckedBanStatus__DelegateSignature(const class FString& BannedSteamId, bool bIsBanned, const class FString& BanReason, bool bIsMySteamId);
		void DoLogin();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotFunctionLibrary
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UReadyOrNotFunctionLibrary : public UBlueprintFunctionLibrary
	{
	public:
		class FString SwatCommandToString(ESwatCommand SwatCommand);
		void StopPostProcessEffect(struct FPostProcessSettings* PostProcessSettings, struct FPostProcessEffect* InPostProcessEffect);
		void StartPostProcessEffect_Specific(class UObject* Context, struct FPostProcessSettings* PostProcessSettings, struct FPostProcessEffectPlayer* InPostProcessEffectPlayer, class AActor* DamageCauser);
		void StartPostProcessEffect(class UObject* Context, struct FPostProcessSettings* PostProcessSettings, struct FPostProcessEffect* InPostProcessEffect, class AActor* DamageCauser);
		class FString SimulateAnimatedText(class FString* FinalString, int32_t* Iterator, TArray<class FString>* Chars, float* ElapsedTime, float* CurrentDelay, float DelayBetweenLetters, float DelayBetweenWords, float DeltaTime, bool* bCompleted);
		void SetupPostProcessEffect(class UObject* Context, struct FPostProcessEffect* InPostProcessEffect);
		void SetSafeZonePadding(class USafeZoneSlot* SafeZoneSlot, const struct FMargin& Padding);
		void SetPlanarReflectionScreenPercentage(class UPlanarReflectionComponent* InPlanarReflectionComponent, float NewScreenPercentage);
		void SetFMODVolume(float Volume);
		void SetDecalSize(class UDecalComponent* InDecalComponent, const struct FVector& DecalSize);
		void ServerTravel(const class FString& URL);
		void RestartGame(class UObject* WorldContextObject);
		bool ReportBadAIAction(class ABadAIAction* InBadAIActionActor, const class FText& InSummary, const class FText& InDescription, bool bReportToLog, bool bDrawDebugString);
		void RemoveFromParentAndClear(TArray<class UWidget*>* InWidgets);
		bool RemoveBadAIActionReport(class ABadAIAction* InBadAIActionActor, bool bReportToLog, bool bDrawDebugString);
		void RemoveAllNullElements_BP(TArray<class UClass*> Array);
		bool ProcessPostProcessEffect(class UObject* Context, struct FPostProcessSettings* PostProcessSettings, struct FPostProcessEffect* InPostProcessEffect, float DeltaTime);
		void PlayRandomFMODEventAtLocation(class UObject* WorldContextObject, const struct FVector& Location, TArray<class UFMODEvent*>* FMODEvents);
		void PlayRandomFMODEvent_2D(class UObject* WorldContextObject, TArray<class UFMODEvent*>* FMODEvents);
		void PauseFMOD(bool bPaused);
		void MuteFMOD(bool bMuted);
		bool IsTableMontagePlaying(class APlayerCharacter* PlayerCharacter, const class FString& AnimationName, bool bIsCrouching);
		bool IsItemInInventory(class AReadyOrNotCharacter* PlayerCharacter, EItemCategory ItemCategory);
		bool IsItemEquipped(class AReadyOrNotCharacter* PlayerCharacter, EItemCategory ItemCategory);
		bool IsInLobby();
		bool IsHalloween();
		bool IsFSREnabled();
		bool IsFMODBusPaused(class UFMODBus* Bus);
		bool IsFMODBusMuted(class UFMODBus* Bus);
		bool IsDLSSEnabled();
		bool IsBuildPirated();
		bool IsAprilFools();
		bool IsActorOutsideSplineEnclosure(class ASplineTrigger* InSplineTrigger, class AActor* InActor);
		bool IsActorInsideSplineEnclosure(class ASplineTrigger* InSplineTrigger, class AActor* InActor);
		struct FVector2D GetWidgetSize_Local(class UWidget* InWidget);
		struct FVector2D GetWidgetSize_Absolute(class UWidget* InWidget);
		float GetWeaponFOVOffset();
		struct FVector2D GetViewportPositionOfWidgetCenter(class UObject* WorldContext, class UWidget* InParentWidget, class UWidget* InWidget);
		struct FVector2D GetViewportPositionOfWidget(class UObject* WorldContext, class UWidget* InParentWidget, class UWidget* InWidget, const struct FVector2D& InCoordinates);
		struct FVector GetVectorFromINIFile(const class FString& ConfigFilePath, const class FString& Section, const class FString& Key);
		struct FVector2D GetVector2DFromINIFile(const class FString& ConfigFilePath, const class FString& Section, const class FString& Key);
		bool GetUseGearListInsteadOfRadial();
		class ASWATManager* GetSWATManager(class UObject* WorldContext);
		class FString GetStringFromINIFile(const class FString& ConfigFilePath, const class FString& Section, const class FString& Key);
		TArray<class FString> GetStringArrayFromINIFile(const class FString& ConfigFilePath, const class FString& Section, const class FString& Key);
		TArray<class FString> GetSingleLineArrayFromINIFile(const class FString& ConfigFilePath, const class FString& Section, const class FString& Key);
		class FString GetServerNameFromCurrentSession();
		class AReadyOrNotLevelScript* GetReadyOrNotLevelScript(class UObject* Context);
		class UReadyOrNotGameUserSettings* GetReadyOrNotGameUserSettings();
		class UHumanCharacterHUD_V2* GetPlayerHUD(class UObject* WorldContext);
		class APlayerCharacter* GetPlayerCharacterMutableDefaultObject(class UObject* Class);
		struct FVector2D GetPixelPositionOfWidgetCenter(class UObject* WorldContext, class UWidget* InParentWidget, class UWidget* InWidget);
		struct FVector2D GetPixelPositionOfWidget(class UObject* WorldContext, class UWidget* InParentWidget, class UWidget* InWidget, const struct FVector2D& InCoordinates);
		struct FKey GetKeyFromInputAxisName(const class FName& AxisName, bool bOnlyGamepadKey, int32_t Index);
		struct FKey GetKeyFromInputActionName(const class FName& ActionName, bool bOnlyGamepadKey, int32_t Index);
		float GetInterfaceFovOffset(float InFov);
		int32_t GetIntegerFromINIFile(const class FString& ConfigFilePath, const class FString& Section, const class FString& Key);
		float GetFMODBusVolume(class UFMODBus* Bus);
		float GetFloatFromINIFile(const class FString& ConfigFilePath, const class FString& Section, const class FString& Key);
		int32_t GetDLCNumber(EDLC InDLC);
		EDLC GetDLCENum(int32_t InDLC);
		class FName GetCurrentLevelNameForLookupTable(class UObject* Context);
		ECOOPMode GetCOOPMode();
		class UObject* GetClassFromObject(class UObject* Object);
		class UObject* GetClassDefaultObject(class UObject* Class);
		ERONBuildConfiguration GetBuildConfiguration();
		bool GetBoolFromINIFile(const class FString& ConfigFilePath, const class FString& Section, const class FString& Key);
		float GetAspectRatio();
		class UAnimMontage* GetAnimationFromTable(const class FString& AnimationName, bool bIsCrouching);
		TArray<class USoundBase*> GetAllSoundsInWorld();
		TArray<class FString> GetAllSectionNamesFromINIFile(const class FString& ConfigFilePath);
		TArray<class ABaseItem*> GetAllItemsInMemory();
		TArray<class UFMODBus*> GetAllFMODBusObjects();
		TArray<class UAudioComponent*> GetAllAudioComponents();
		TArray<class UFMODEvent*> GetAll2DFMODAudioEvents();
		bool FulfillsAllPostProcessRequirements(class UObject* Context, class APlayerCharacter* OwningCharacter, class AActor* DamageCauser, TArray<class UPostProcessRequirement*> InRequirementClasses, bool bForceSuccess);
		class FText FormatPlayerActionText(const struct FKey& InKey, EInputEvent InInputEvent, const class FText& InActionText, const class FString& InColorLabel);
		float FindNearestFloor_BP(class AActor* InActor, TArray<class AActor*> InActorsToIgnore, TArray<class UPrimitiveComponent*> InComponentsToIgnore);
		class ABaseItem* FindItemClassInItemDataTable(const class FName& RowName);
		bool FindConfigKeyFromINIFile(const class FString& ConfigFilePath, const class FString& Section, const class FString& Key);
		class FString DoorCheckResultToVoiceline(EDoorCheckResult DoorBreachType);
		class FString DoorBreachTypeToVoiceline_Negative(EDoorBreachType DoorBreachType);
		class FString DoorBreachTypeToVoiceline(EDoorBreachType DoorBreachType);
		bool DoesWidgetOverlap(class UObject* WorldContext, class UWidget* ParentWidget, class UWidget* WidgetA, class UWidget* WidgetB);
		class FString DevMenuSettingsConfigDir();
		struct FRonKey ConvertUnrealKeyToRonKey(const struct FKey& InKey);
		class FString ConvertUnrealKeyNameToRonKeyName(const struct FKey& InKey);
		struct FSlateBrush ConvertKeyToIcon(const struct FKey& InKey);
		struct FKey ConvertIntToFKey(int32_t Integer);
		struct FVector2D CalculateOffscreenPositionFromWorldLocation_Square(class UObject* WorldContext, const struct FVector& WorldLocation, float ViewportOffset, bool* bIsOffscreen, float* Angle, float* ForwardDotProduct, float* RightDotProduct);
		struct FVector2D CalculateOffscreenPositionFromWorldLocation_Ellipse(class UObject* WorldContext, const struct FVector& WorldLocation, float ViewportOffset, bool* bIsOffscreen, float* Angle, float* ForwardDotProduct, float* RightDotProduct);
		class FString BadAIActionConfigDir();
		bool AnyTrue(TArray<bool>* BoolArray);
		bool AnyFalse(TArray<bool>* BoolArray);
		bool AllTrue(TArray<bool>* BoolArray);
		bool AllFalse(TArray<bool>* BoolArray);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PepperballGun
	 * Size -> 0x0030 (FullSize[0x12C0] - InheritedSize[0x1290])
	 */
	class APepperballGun : public ABaseMagazineWeapon
	{
	public:
		class UParticleSystemComponent*                              ShootTrailComponent;                                     // 0x1290(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                       ParticleShootTrail;                                      // 0x1298(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      HeadshotsUntilAbuse;                                     // 0x12A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      CurrentHeadshotCounter;                                  // 0x12A4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      StunShotsUntilAbuse;                                     // 0x12A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      CurrentStunShotCounter;                                  // 0x12AC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      MaxBallsInHopper;                                        // 0x12B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      BallsInHopper;                                           // 0x12B4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x12B8(0x0008) MISSED OFFSET (PADDING)

	public:
		void IncrementStunShotCounter(class ACyberneticCharacter* StunnedPerson);
		void IncrementHeadshotCounter(class ACyberneticCharacter* HeadshottedPerson);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PPR_IsDamageCauserOnScreen
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UPPR_IsDamageCauserOnScreen : public UPostProcessRequirement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PushCombatMove
	 * Size -> 0x0000 (FullSize[0x0218] - InheritedSize[0x0218])
	 */
	class UPushCombatMove : public UBaseCombatMoveActivity
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotCharMovementComp
	 * Size -> 0x0010 (FullSize[0x0B00] - InheritedSize[0x0AF0])
	 */
	class UReadyOrNotCharMovementComp : public UCharacterMovementComponent
	{
	public:
		bool                                                         bHasReplicatedAcceleration;                              // 0x0AF0(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xF];                                   // 0x0AF1(0x000F) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Pepperspray
	 * Size -> 0x0088 (FullSize[0x0950] - InheritedSize[0x08C8])
	 */
	class APepperspray : public ABaseItem
	{
	public:
		unsigned char                                                UnknownData_0002[0x8];                                   // 0x08C8(0x0008) Fix Super Size
		class UParticleSystemComponent*                              SprayParticleComponent;                                  // 0x08D0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAmmoComponent*                                        AmmoComponent;                                           // 0x08D8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystem*                                       ParticleStart;                                           // 0x08E0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystem*                                       ParticleEnd;                                             // 0x08E8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystem*                                       ParticleImpact;                                          // 0x08F0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystem*                                       ParticleRunningOut;                                      // 0x08F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystem*                                       ParticleSprayLoop;                                       // 0x0900(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystemComponent*                              ParticleSprayLoopComponent;                              // 0x0908(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODEvent*                                            FMODSprayEvent;                                          // 0x0910(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODEvent*                                            FMODSprayEmptyEvent;                                     // 0x0918(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODEvent*                                            FMODImpactEvent;                                         // 0x0920(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODEvent*                                            FMODSprayLowAmmoEvent;                                   // 0x0928(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        SprayDistance;                                           // 0x0930(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bSpraying : 1;                                           // 0x0934(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x0935(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        DurationFrontTorso;                                      // 0x0938(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        DurationBackFace;                                        // 0x093C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        DurationFrontFace;                                       // 0x0940(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        PepperSprayAbuseDebounce;                                // 0x0944(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x0948(0x0008) MISSED OFFSET (PADDING)

	public:
		void StopSpraySoundEffect();
		void StopSprayParticleEffect();
		void StopSpraying();
		void StartSpraying();
		void Server_StopSpraying();
		void Server_StartSpraying();
		void PlaySpraySoundEffect(bool bRunningOutEffect);
		void PlaySprayParticleEffect(bool bRunningOutEffect);
		void OnRep_Spraying();
		void OnLowPeppersprayAmmo(float CurrentResource);
		void OnDepletedPeppersprayAmmo();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Pouch
	 * Size -> 0x0038 (FullSize[0x02E0] - InheritedSize[0x02A8])
	 */
	class APouch : public ASkeletalMeshActor
	{
	public:
		class USkeletalMeshComponent*                                MagazineComponent;                                       // 0x02A8(0x0008) Edit, ExportObject, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USceneComponent*                                       AttachToComp;                                            // 0x02B0(0x0008) ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                  AttachToSocket;                                          // 0x02B8(0x0008) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                         bShowMagazine;                                           // 0x02C0(0x0001) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x02C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                  MagazineSocket;                                          // 0x02C4(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x02CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                         OpenPouch;                                               // 0x02D0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                         ClosePouch;                                              // 0x02D8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void OnRep_UpdateVisibility();
		void OnRep_Attach();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PepperSprayDamageType
	 * Size -> 0x0000 (FullSize[0x0620] - InheritedSize[0x0620])
	 */
	class UPepperSprayDamageType : public UStunDamage
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotMathLibrary
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UReadyOrNotMathLibrary : public UBlueprintFunctionLibrary
	{
	public:
		float WrapAngleIfOutOfBounds(float Angle, float MinBounds, float MaxBounds);
		float KeepAngleBelow360(float Angle);
		float KeepAngleAbove0(float Angle);
		float GetLastKeyTime_FloatCurve(const struct FRuntimeFloatCurve& InCurve);
		struct FVector GenerateRandomLocationOnSphere(const struct FVector& Origin, float Radius);
		struct FVector2D CalculatePositionOnEllipse(const struct FVector2D& Origin, float RadiusX, float RadiusY, float Angle);
		struct FVector2D CalculatePositionOnCircle(const struct FVector2D& Origin, float Radius, float Angle);
		struct FVector CalculateLocationOnSphere(const struct FVector& Origin, float Radius, float Angle, float Phi);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotCoverData
	 * Size -> 0x00D8 (FullSize[0x0108] - InheritedSize[0x0030])
	 */
	class UReadyOrNotCoverData : public UDataAsset
	{
	public:
		struct FCoverDataMain                                        CoverData;                                               // 0x0030(0x00D8) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PersonalizationWidget
	 * Size -> 0x0008 (FullSize[0x0268] - InheritedSize[0x0260])
	 */
	class UPersonalizationWidget : public UUserWidget
	{
	public:
		class ACharacterCustomizationPortal*                         SpawnedFromPortal;                                       // 0x0260(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotAISenseConfig_Sight
	 * Size -> 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
	 */
	class UReadyOrNotAISenseConfig_Sight : public UAISenseConfig_Sight
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotGameInstance
	 * Size -> 0x0D20 (FullSize[0x0F48] - InheritedSize[0x0228])
	 */
	class UReadyOrNotGameInstance : public UAdvancedFriendsGameInstance
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x0228(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UReadyOrNotBackend*                                    ReadyOrNotBackend;                                       // 0x0238(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UModioManager*                                         ModioManager;                                            // 0x0240(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x10];                                  // 0x0248(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialParameterCollection*                          WeaponFOVMaterialCollection;                             // 0x0258(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x1];                                   // 0x0260(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESessionType                                                 SessionType;                                             // 0x0261(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x6];                                   // 0x0262(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<TSoftClassPtr<class UClass>>                          LazyLoadedClasses;                                       // 0x0268(0x0010) ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<TSoftObjectPtr<class UObject>>                        LazyLoadedObjects;                                       // 0x0278(0x0010) ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x8];                                   // 0x0288(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UUserWidget*                                           SpawnWidgetOnLevelLoad;                                  // 0x0290(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x8];                                   // 0x0298(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<int32_t, bool>                                          OwnedDLCMap;                                             // 0x02A0(0x0050) NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x250];                                 // 0x02F0(0x0250) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                        PreviouslyJoinedGames;                                   // 0x0540(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                      DedicatedServerGamesPlayedWithoutReturningToLobby;       // 0x0550(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      DedicatedServerMapIdx;                                   // 0x0554(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0x158];                                 // 0x0558(0x0158) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnConnectSteamServerByIP;                                // 0x06B0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0008[0xF];                                   // 0x06B1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0009[0x50];                                  // 0x06C0(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bHostedGame;                                             // 0x0710(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0010[0x3];                                   // 0x0711(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        Saved_RoundTimerGameStart;                               // 0x0714(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        Saved_RoundTimerBetweenMaps;                             // 0x0718(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        Saved_ReinforcementTimer;                                // 0x071C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        Saved_Timelimit;                                         // 0x0720(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      Saved_RoundsPerMap;                                      // 0x0724(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      Saved_Scorelimit;                                        // 0x0728(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         Saved_AiEnabled;                                         // 0x072C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsSinglePlayerMode;                                     // 0x072D(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0011[0x2];                                   // 0x072E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                        ActivePauseConditions;                                   // 0x0730(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class UHostMigrationManager*                                 HostMigrationManager;                                    // 0x0740(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                                NextLevel;                                               // 0x0748(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                                MainMenuDisplayMessage;                                  // 0x0758(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0012[0x8];                                   // 0x0768(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLevelDataLookupTable                                 ModdedMapLookUpData;                                     // 0x0770(0x0770) Edit, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0013[0x10];                                  // 0x0EE0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                        BuiltMapList;                                            // 0x0EF0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                         bShowingFPS;                                             // 0x0F00(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0014[0x1];                                   // 0x0F01(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bIsRecordingReplay;                                      // 0x0F02(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsPlayingReplay;                                        // 0x0F03(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        bReplayBeginTime;                                        // 0x0F04(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FReplayEvent>                                  ReplayEvents;                                            // 0x0F08(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0015[0x30];                                  // 0x0F18(0x0030) MISSED OFFSET (PADDING)

	public:
		void StopRecordingReplayFromBP();
		void StopRecordingReplay();
		void StopGeneratingPSOCache();
		void StartRecordingReplay();
		void StartGeneratingPSOCache();
		void SetLastJoinState(ELastMenuStateBeforeJoin LastJoiNState);
		bool SetInputAudioDevice(const class FString& DeviceName, bool bShouldSave);
		void RetryLogin();
		void RenameReplay(const class FString& ReplayName, const class FString& NewFriendlyReplayName);
		void RemovePauseGameCondition(const class FString& PauseCondition);
		void PlayReplayFromBP(const class FString& ReplayName);
		void OpenReplayFolder();
		bool OnWindowCloseRequested();
		void OnGameServerPinged__DelegateSignature(const class FString& ConnectionAddress);
		void OnConnectSteamServer(const class FString& URL);
		bool IsReplaySystemEnabled();
		bool IsPublicMissionInProgress();
		bool IsNetworkCompatible(uint32_t LocalNetworkVersion, uint32_t RemoteNetworkVersion);
		bool IsLoggedIntoBackend();
		bool IsHostMigrationInProgress(class FString* MigratedHostToName);
		bool IsGameModded();
		void Gratr();
		class FString GetSessionTicket();
		TArray<struct FReplayEvent> GetReplayEvents();
		uint32_t GetLocalNetworkVersion();
		class FString GetFriendlyGamemodeName(const class FString& UnfriendlyName);
		class FString GetDiscordOneTimeUseCode();
		TArray<class FString> GetBuiltModdedMapList();
		TArray<class FString> GetBuiltMapList();
		class FString GetBestGuessMapName(const class FString& MapName);
		bool GetBanned();
		uint8_t GetBackendState();
		bool GetAvailableAudioDevices(TArray<class FString>* OutAudioDevices);
		class FString GetAndClearMainMenuDisplayMessage();
		ELastMenuStateBeforeJoin GetAndClearLastJoinState();
		TArray<class AReadyOrNotGameState*> GetAllGameStates();
		TArray<class AReadyOrNotGameMode*> GetAllGameModes();
		void GenerateURLMap();
		TMap<class FString, struct FReplayData> FindReplays();
		void DeleteReplay(const class FString& ReplayName);
		void ConnectSteamServer(const class FString& ServerConnect);
		void BuildMapList();
		void ApplyDecalSettings();
		void AddReplayEvent(const class FString& Name, const struct FVector& Location, float Timestamp);
		void AddPauseGameCondition(const class FString& PauseCondition);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Quadrotor
	 * Size -> 0x0088 (FullSize[0x0950] - InheritedSize[0x08C8])
	 */
	class AQuadrotor : public ABaseItem
	{
	public:
		class USkeletalMeshComponent*                                ViewfinderMesh;                                          // 0x08C8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USceneCaptureComponent2D*                              SceneCapture2D;                                          // 0x08D0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UTextureRenderTarget2D*                                RenderTarget;                                            // 0x08D8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                         bToggleDroneControl;                                     // 0x08E0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x08E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterial*                                             DefaultViewfinderMaterial;                               // 0x08E8(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                              ViewfinderScreenMaterial;                                // 0x08F0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                LocalPlayerCaptureResolution;                            // 0x08F8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                SimulatedPlayerCaptureResolution;                        // 0x0900(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x0908(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                  ViewfinderSocket_Hands;                                  // 0x0910(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  ViewfinderSocket_Body;                                   // 0x0918(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          ThrowDrone_1P;                                           // 0x0920(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          ThrowDrone_3P;                                           // 0x0928(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AQuadrotorPawn*                                        DronePawnClass;                                          // 0x0930(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AQuadrotorPawn*                                        SpawnedDrone;                                            // 0x0938(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x10];                                  // 0x0940(0x0010) MISSED OFFSET (PADDING)

	public:
		void Server_SpawnDrone();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.MessagePromptActor
	 * Size -> 0x0050 (FullSize[0x0270] - InheritedSize[0x0220])
	 */
	class AMessagePromptActor : public AActor
	{
	public:
		class FString                                                MessageMapID;                                            // 0x0220(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsBigPopUp;                                             // 0x0230(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHasDisplayedMessage;                                    // 0x0231(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x6];                                   // 0x0232(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                  MessageTitle;                                            // 0x0238(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<class FText>                                          MessageContent;                                          // 0x0250(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FMessagePromptContent>                         MessageActions;                                          // 0x0260(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		void ShowMessageThroughPopUp();
		void HideMessagePopUp();
		void GenerateMessageContent();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavArea_CivilianA
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavArea_CivilianA : public UNavArea
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Mirror
	 * Size -> 0x0040 (FullSize[0x0260] - InheritedSize[0x0220])
	 */
	class AMirror : public AActor
	{
	public:
		struct PCoreUObject_FTransform                               VisibilityBoundsTransform;                               // 0x0220(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FVector                                  VisibilityBoundsExtent;                                  // 0x0250(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bDynamicShadowsDisabled : 1;                             // 0x025C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x025D(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotGameSession
	 * Size -> 0x0208 (FullSize[0x0440] - InheritedSize[0x0238])
	 */
	class AReadyOrNotGameSession : public AGameSession
	{
	public:
		unsigned char                                                UnknownData_0000[0x138];                                 // 0x0238(0x0138) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UReadyOrNotSessionData*                                SessionData;                                             // 0x0370(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x18];                                  // 0x0378(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                ServerName;                                              // 0x0390(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                        MapList;                                                 // 0x03A0(0x0010) ZeroConstructor, Config, NativeAccessSpecifierPublic
		int32_t                                                      ReturnToLobbyAfterXMissions;                             // 0x03B0(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x03B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                Password;                                                // 0x03B8(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      MaxConnections;                                          // 0x03C8(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x4];                                   // 0x03CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                AdminPassword;                                           // 0x03D0(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                        LoggedInAdmins;                                          // 0x03E0(0x0010) ZeroConstructor, Config, NativeAccessSpecifierPublic
		TArray<class FString>                                        BanList;                                                 // 0x03F0(0x0010) ZeroConstructor, Config, NativeAccessSpecifierPublic
		int32_t                                                      MaxTeamKillsBeforeAutoKick;                              // 0x0400(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      MaxTeamKillsBeforeAutoBan;                               // 0x0404(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SecondsUntilKickedForAFK;                                // 0x0408(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SecondsUntilAutostartLobby;                              // 0x040C(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      MinPlayersForAutostart;                                  // 0x0410(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RoundTimerGameStart;                                     // 0x0414(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RoundTimerBetweenMaps;                                   // 0x0418(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ReinforcementTimer;                                      // 0x041C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RespawnTimer;                                            // 0x0420(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        Timelimit;                                               // 0x0424(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      Scorelimit;                                              // 0x0428(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      RoundsPerMap;                                            // 0x042C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAiEnabled;                                              // 0x0430(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x3];                                   // 0x0431(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      EventId;                                                 // 0x0434(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      ClientNetSpeed;                                          // 0x0438(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x4];                                   // 0x043C(0x0004) MISSED OFFSET (PADDING)

	public:
		void WriteOutConfig();
		void UpdateServerMatchmakeQueue();
		void SetServerSettings(float NewRoundTimerGameStart, float NewRoundTimerBetweenMaps, float NewReinforcementTimer, float NewTimelimit, int32_t NewRoundsPerMap, int32_t NewScorelimit, bool NewAiEnabled);
		void RefreshMatchmakeServer();
		void OnMatchmakingCreateParty(const struct FZeuzMatchMakingStatus& MatchmakingStatus, const class FString& Error);
		void OnGetRegions(TArray<struct FZeuzRegion> ZeuzRegions, const class FString& Error);
		void OnGetPayloadsMatchmakingCreateParty(const struct FZeuzPayloadGetOut& PayloadOut, const class FString& Error);
		void OnGetPayloadServerRefresh(const struct FZeuzPayloadGetOut& PayloadOut, const class FString& Error);
		void MakeLoadingMapOnlyURL(const class FString& MapURL);
		void AddServerToMatchMakeQueue();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavArea_CivilianE
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavArea_CivilianE : public UNavArea
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotCrowdManager
	 * Size -> 0x0000 (FullSize[0x00F0] - InheritedSize[0x00F0])
	 */
	class UReadyOrNotCrowdManager : public UCrowdManager
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.QuadrotorPawn
	 * Size -> 0x00C0 (FullSize[0x0340] - InheritedSize[0x0280])
	 */
	class AQuadrotorPawn : public APawn
	{
	public:
		class UBoxComponent*                                         FlightBox;                                               // 0x0280(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USkeletalMeshComponent*                                DroneMesh;                                               // 0x0288(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCameraComponent*                                      FirstPersonCamera;                                       // 0x0290(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                        RPM;                                                     // 0x0298(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RPMThrottleMultiplier;                                   // 0x029C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bApplyingInput;                                          // 0x02A0(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x02A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MaxRPM;                                                  // 0x02A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        IdleRPM;                                                 // 0x02A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RPMForceScale;                                           // 0x02AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MaximumTilt;                                             // 0x02B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MaxVelocity;                                             // 0x02B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bEngineOn;                                               // 0x02B8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x02B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRotator                                 RotorRotation;                                           // 0x02BC(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x8];                                   // 0x02C8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct PCoreUObject_FTransform                               DroneTransform;                                          // 0x02D0(0x0030) BlueprintVisible, BlueprintReadOnly, Net, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                 TargetRotation;                                          // 0x0300(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x34];                                  // 0x030C(0x0034) MISSED OFFSET (PADDING)

	public:
		void Server_UpdateDroneTransform(const struct PCoreUObject_FTransform& NewTransform);
		void OnRep_DroneMovement();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavArea_HasBeenOpenedDoor
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavArea_HasBeenOpenedDoor : public UNavArea
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavArea_SuspectA
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavArea_SuspectA : public UNavArea
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotDebugSubsystem
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UReadyOrNotDebugSubsystem : public UWorldSubsystem
	{
	public:
		bool                                                         bDrawMeleeRange : 1;                                     // 0x0030(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bInfiniteHealth : 1;                                     // 0x0030(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bInfiniteAmmo : 1;                                       // 0x0030(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDrawGrenadePath : 1;                                    // 0x0030(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRTXOn : 1;                                              // 0x0030(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRTX_GlobalIlluminationOn : 1;                           // 0x0030(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRTX_ReflectionsOn : 1;                                  // 0x0030(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRTX_AmbientOcclusionOn : 1;                             // 0x0030(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRTX_ShadowsOn : 1;                                      // 0x0031(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRTX_TranslucencyOn : 1;                                 // 0x0031(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bVSyncOn : 1;                                            // 0x0031(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         UnknownData_0000 : 5;                                    // 0x0031(0x0001) BIT_FIELD (PADDING)
		bool                                                         bOverlayOn_Fibonacci;                                    // 0x0032(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bOverlayOn_LineUp;                                       // 0x0033(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bOverlayOn_PistolLine;                                   // 0x0034(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bOverlayOn_RifleLine;                                    // 0x0035(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bOverlayOn_RuleOfThirds;                                 // 0x0036(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bApplyGlobalDamageMultiplier_Weapons : 1;                // 0x0037(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bApplyGlobalDamageMultiplier_Grenades : 1;               // 0x0037(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        GlobalDamageMultiplier_Weapons;                          // 0x0038(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        GlobalDamageMultiplier_Grenades;                         // 0x003C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDrawInteractableComponents : 1;                         // 0x0040(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDrawDebugTraces : 1;                                    // 0x0040(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDisableInteractableComponent : 1;                       // 0x0040(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLogPlayerAnimationStatus : 1;                           // 0x0040(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLogWeaponDamageValuesToConsole : 1;                     // 0x0040(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowAllEvidenceActors : 1;                              // 0x0040(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowObjectiveMarkers : 1;                               // 0x0040(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowHesitationBar : 1;                                  // 0x0040(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDrawCoverPoints : 1;                                    // 0x0041(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDisableMusic : 1;                                       // 0x0041(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bForceCloseAllDoors : 1;                                 // 0x0041(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLaserEyes : 1;                                          // 0x0041(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bPauseFMOD : 1;                                          // 0x0041(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bMuteFMOD : 1;                                           // 0x0041(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDrawDoorKillStunDistances : 1;                          // 0x0041(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bForceOpenAllDoors : 1;                                  // 0x0041(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bInfiniteSWATItems : 1;                                  // 0x0042(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDrawCoverOctree : 1;                                    // 0x0042(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSWATDynamicCover : 1;                                   // 0x0042(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSuspectDynamicCover : 1;                                // 0x0042(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDrawSWATCoverLogic : 1;                                 // 0x0042(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDrawSuspectCoverLogic : 1;                              // 0x0042(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x5];                                   // 0x0043(0x0005) MISSED OFFSET (PADDING)

	public:
		void WeakenAllEnemiesToLowHealth();
		void ToggleVSync();
		void ToggleSWATDynamicCover();
		void ToggleSuspectDynamicCover();
		void ToggleRuleOfThirdsOverlayGuide(class UMaterialInterface* InMaterial);
		void ToggleRTXSettings();
		void ToggleRifleLineOverlayGuide(class UMaterialInterface* InMaterial);
		void TogglePistolLineOverlayGuide(class UMaterialInterface* InMaterial);
		void TogglePauseFMOD();
		void ToggleObjectiveMarkers();
		void ToggleMuteFMOD();
		void ToggleMusic(bool bMusicOn);
		void ToggleLogWeaponDamage();
		void ToggleLogPlayerAnimationStatus();
		void ToggleLineUpOverlayGuide(class UMaterialInterface* InMaterial);
		void ToggleLaserEyes();
		void ToggleInteractableComponents();
		void ToggleInfiniteSWATItems();
		void ToggleInfiniteHealth();
		void ToggleInfiniteAmmo();
		void ToggleHesitationBar();
		void ToggleGrenadeDrawDebug();
		void ToggleGlobalDamageMultiplier_Weapons();
		void ToggleGlobalDamageMultiplier_Grenades();
		void ToggleFibonacciOverlayGuide(class UMaterialInterface* InMaterial);
		void ToggleDrawSWATCoverLogic();
		void ToggleDrawSuspectCoverLogic();
		void ToggleDrawMeleeRange();
		void ToggleDrawInteractableComponents();
		void ToggleDrawDoorKillStunDistances();
		void ToggleDrawDebugTraces();
		void ToggleCoverPoints();
		void ToggleCoverOctree();
		void ToggleAllEvidenceActorMarkers();
		void SetMeleeRange(class APlayerCharacter* PlayerCharacter, float NewMeleeRange);
		void SetMeleeDamage(class APlayerCharacter* PlayerCharacter, float NewMeleeDamage);
		void SetGlobalDamageMultiplier_Weapons(float NewDamageMultiplier);
		void SetGlobalDamageMultiplier_Grenades(float NewDamageMultiplier);
		void RTX_ToggleTranslucency();
		void RTX_ToggleShadows();
		void RTX_ToggleReflections();
		void RTX_ToggleGlobalIllumination();
		void RTX_ToggleAmbientOcclusion();
		void OpenAllDoors();
		void IncreaseGlobalDamageMultiplier_Weapons(float Amount);
		void IncreaseGlobalDamageMultiplier_Grenades(float Amount);
		void DecreaseGlobalDamageMultiplier_Weapons(float Amount);
		void DecreaseGlobalDamageMultiplier_Grenades(float Amount);
		void CloseAllDoors();
		void AddOrUpdatePostProcessMaterial(class UMaterialInterface* InMaterial, bool* bMaterialOn);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavArea_CivilianB
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavArea_CivilianB : public UNavArea
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavQuery_NoiseCheck
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavQuery_NoiseCheck : public UNavigationQueryFilter
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PreMissionPlanning
	 * Size -> 0x0600 (FullSize[0x0878] - InheritedSize[0x0278])
	 */
	class UPreMissionPlanning : public UBaseWidget
	{
	public:
		bool                                                         bIsWeaponCustomization;                                  // 0x0278(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bOpenInQuartermaster;                                    // 0x0279(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsCustomizingPrimary;                                   // 0x027A(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x5];                                   // 0x027B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ABaseItem*                                             CustomizeItemClass;                                      // 0x0280(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AReadyOrNotGameState*                                  gs;                                                      // 0x0288(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AReadyOrNotPlayerController*                           PC;                                                      // 0x0290(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AReadyOrNotPlayerState*                                ps;                                                      // 0x0298(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULevelStreaming*                                       PreMissionStreamedLevel;                                 // 0x02A0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            LoadoutMusic;                                            // 0x02A8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x10];                                  // 0x02B0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReadyOrNotPlayerState*                                PreviewPlayerState;                                      // 0x02C0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x2];                                   // 0x02C8(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EEquippingSwat                                               EquippingSwatMember;                                     // 0x02CA(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x5];                                   // 0x02CB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EEquippingSwat, struct FSavedLoadout>                   LastSavedLoadout;                                        // 0x02D0(0x0050) NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x58];                                  // 0x0320(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bLoadedLoadout;                                          // 0x0378(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x7];                                   // 0x0379(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSavedLoadout                                         ActiveLoadout;                                           // 0x0380(0x0178) BlueprintVisible, NativeAccessSpecifierPublic
		TMap<class FName, struct FLoadoutPreset>                     LoadoutPresetMap;                                        // 0x04F8(0x0050) BlueprintVisible, NativeAccessSpecifierPublic
		class AReadyOrNotPlayerState*                                EquippingPlayerState;                                    // 0x0548(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class ABaseItem*, struct FSavedWeaponPreset>            WeaponToWeaponPresetsMap;                                // 0x0550(0x0050) BlueprintVisible, NativeAccessSpecifierPublic
		TMap<class ABaseItem*, struct FSavedWeaponAttachmentData>    WeaponToAttachmentsMap;                                  // 0x05A0(0x0050) BlueprintVisible, NativeAccessSpecifierPublic
		TMap<class ABaseWeapon*, EFireMode>                          WeaponClassToDefaultFireModeMap;                         // 0x05F0(0x0050) BlueprintVisible, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x4];                                   // 0x0640(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                  ActiveCameraTag;                                         // 0x0644(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0x4];                                   // 0x064C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnRequestRefresh;                                        // 0x0650(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0008[0xF];                                   // 0x0651(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0009[0x8];                                   // 0x0660(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TSoftClassPtr<class APlayerCharacter>                        RedTeamClass;                                            // 0x0668(0x0024) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0010[0x4];                                   // 0x068C(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TSoftClassPtr<class APlayerCharacter>                        BlueTeamClass;                                           // 0x0690(0x0024) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0011[0x4];                                   // 0x06B4(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TSoftClassPtr<class APlayerCharacter>                        VIPClass;                                                // 0x06B8(0x0024) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0012[0x4];                                   // 0x06DC(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0013[0x8];                                   // 0x06E0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class AReadyOrNotCharacter*, class AReadyOrNotPlayerState*> PlayerStatePreviewMap;                                   // 0x06E8(0x0050) NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0014[0xD8];                                  // 0x0738(0x00D8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FName, class ABaseItem*>                          WorkBenchItemPtrMap;                                     // 0x0810(0x0050) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		EItemType                                                    LastSetItemType;                                         // 0x0860(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemClass                                                   LastSetItemClass;                                        // 0x0861(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0015[0x6];                                   // 0x0862(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ABaseItem*                                             LastSetItemObjectClass;                                  // 0x0868(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0016[0x1];                                   // 0x0870(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bCanUpdateWithUI;                                        // 0x0871(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0017[0x6];                                   // 0x0872(0x0006) MISSED OFFSET (PADDING)

	public:
		void UpdateWorkbenchItemAttachments();
		void UpdateWeaponPresets(class ABaseItem* Weapon, const struct FSavedWeaponPreset& Presets);
		void UpdateWeaponPreset(class ABaseItem* Weapon, const struct FWeaponPreset& PresetData, int32_t Index);
		void UpdateWeaponDefaultFireMode(class ABaseWeapon* Weapon, EFireMode NewDefaultFireMode);
		void UpdatePreviewWeaponSkin(bool IsSecondary, class USkinComponent* SkinAttachment);
		void UpdatePreviewWeaponAttachments(bool IsSecondary, class UWeaponAttachment* Attachment);
		void UpdatePreviewCharacterSecondary();
		void UpdatePreviewCharacterPrimary();
		void UpdatePreviewCharacterLongTactical();
		void UpdatePreviewCharacterHeadwear();
		void UpdatePreviewCharacterArmour();
		void UpdatePreviewCharacter(class AReadyOrNotPlayerState* InPreviewPlayerState, const class FName& Tag);
		void SetWorkbenchItemClass(class ABaseItem* Item, const class FName& Tag);
		void SetSubcategory(EPreMissionSubCategory NewSubCategory);
		void SetSecondaryWeapon(const struct FWeaponData& WeaponData);
		void SetSecondaryUnderbarrelAttachment(class UWeaponAttachment* UnderbarrelAttachment);
		void SetSecondaryStockAttachment(class UWeaponAttachment* StockAttachment);
		void SetSecondarySkinAttachment(class USkinComponent* SkinAttachment);
		void SetSecondaryScopeAttachment(class UWeaponAttachment* ScopeAttachment);
		void SetSecondaryOverbarrelAttachment(class UWeaponAttachment* OverbarrelAttachment);
		void SetSecondaryMuzzleAttachment(class UWeaponAttachment* MuzzleAttachment);
		void SetSecondaryIlluminatorAttachment(class UWeaponAttachment* IlluminatorAttachment);
		void SetSecondaryGripAttachment(class UWeaponAttachment* GripAttachment);
		void SetSecondaryAmmunitionAttachment(class UWeaponAttachment* AmmunitionAttachment);
		void SetPrimaryWeapon(const struct FWeaponData& WeaponData);
		void SetPrimaryUnderbarrelAttachment(class UWeaponAttachment* UnderbarrelAttachment);
		void SetPrimaryStockAttachment(class UWeaponAttachment* StockAttachment);
		void SetPrimarySkinAttachment(class USkinComponent* SkinAttachment);
		void SetPrimaryScopeAttachment(class UWeaponAttachment* ScopeAttachment);
		void SetPrimaryOverbarrelAttachment(class UWeaponAttachment* OverbarrelAttachment);
		void SetPrimaryMuzzleAttachment(class UWeaponAttachment* MuzzleAttachment);
		void SetPrimaryIlluminatorAttachment(class UWeaponAttachment* IlluminatorAttachment);
		void SetPrimaryGripAttachment(class UWeaponAttachment* GripAttachment);
		void SetPrimaryAmmunitionAttachment(class UWeaponAttachment* AmmunitionAttachment);
		void SetPlayerSkin(class USkinComponent* SkinCompClass);
		void SetLongTactical(class ABaseItem* LongTactical);
		void SetLockInput(bool bShouldLockInput);
		void SetLightColorByTag(const class FName& Tag, const struct FLinearColor& Color);
		void SetItem_V2(EItemClass ItemClass, class ABaseItem* ItemObjectClass);
		void SetItem(EItemType ItemType, class ABaseItem* ItemClass);
		void SetHeadwear(class ABaseItem* Headwear);
		void SetEquippingSwatMember(EEquippingSwat NewEquippingSwat, class AReadyOrNotPlayerState* NewEquippingPlayerState);
		void SetBodyArmour(class ABaseItem* BodyArmour);
		void SetActiveCameraByTag(const class FName& Tag, float BlendTime);
		void SaveWeaponPresets();
		void SaveWeaponDefaultFireMode();
		void SaveWeaponAttachments();
		void SaveLoadoutPresets();
		void SaveItemClassAsSlot(EItemType ItemType, class ABaseItem* Class);
		void SaveActiveLoadout();
		void PlayAnimationOnQuartermaster(const class FString& Animation);
		void PlayAnimationOnPreviewCharacter(const class FString& Animation);
		void OnWeaponDefaultFireModesLoaded();
		void OnSwatCharacterChanged();
		void OnRequestRefresh__DelegateSignature();
		void OnLoadoutSaved();
		void OnLoadoutPresetsSaved();
		void OnLoadoutPresetsLoaded();
		void OnLoadoutLoaded();
		void OnLoadoutItemPresetsSaved();
		void OnLoadoutItemPresetsLoaded();
		void OnLoadoutItemAttachmentsSaved();
		void OnLoadoutItemAttachmentsLoaded();
		void LoadWeaponPresets();
		void LoadWeaponDefaultFireModes();
		void LoadWeaponAttachments();
		void LoadLoadoutPresets();
		EItemType ItemClassToItemType(EItemClass InItemClass);
		bool IsInLobby();
		bool IsAnyWeaponVisible();
		void Init(bool bReadOnly, const struct FSavedLoadout& PreviewLoadout);
		void HideWeapons(bool bHidePrimary, bool bHideSecondary, float Delay);
		void HideSecondary(bool bIsHidden);
		void HidePrimary(bool bIsHidden);
		struct FSavedWeaponPreset GetWeaponPresetsData(class ABaseItem* Weapon);
		struct FWeaponPreset GetWeaponPresetData(class ABaseItem* Weapon, int32_t Index);
		TArray<struct FWeaponData> GetWeaponData(EItemType ItemType);
		EPreMissionSubCategory GetSubcategory();
		class UPreMissionPlanning* GetPremissionPlanning();
		class ABaseItem* GetLastItemInSlot(EItemType ItemType);
		struct FSavedWeaponAttachmentData GetItemAttachmentData(class ABaseItem* Weapon);
		bool GetInputLocked();
		void GetEquippingSwatMember(EEquippingSwat* EquippingSwat);
		TArray<struct FDeviceData> GetDeviceData(EItemType ItemType);
		class AReadyOrNotCharacter* GetDefaultPreviewCharacter();
		TArray<class USkinComponent*> GetAvailablePlayerSkins();
		TArray<struct FArmourData> GetArmourData(EItemType ItemType);
		void EquipSecondary();
		void EquipPrimary();
		void DoSaveLoadout(EEquippingSwat SwatMember, const struct FSavedLoadout& Loadout);
		void DoPrimaryWeaponPreviewBlend();
		void ClearPreviewWeaponSkin(bool IsSecondary);
		void CleanSecondaryGun();
		void CleanPrimaryGun();
		void AttachSecondaryToSocket(const class FName& Socket);
		void AttachPrimaryToSocket(const class FName& Socket);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavArea_NoSuspects
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavArea_NoSuspects : public UNavArea
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotPathFollowingComp
	 * Size -> 0x01E8 (FullSize[0x0480] - InheritedSize[0x0298])
	 */
	class UReadyOrNotPathFollowingComp : public UCrowdFollowingComponent
	{
	public:
		float                                                        HoleTraversalCooldown;                                   // 0x0298(0x0004) Edit, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x2C];                                  // 0x029C(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class ADoor*, float>                                    TimeSinceLastOpenedDoor;                                 // 0x02C8(0x0050) Protected, NativeAccessSpecifierProtected
		TMap<class ADoor*, float>                                    TimeSinceLastClosedDoor;                                 // 0x0318(0x0050) Protected, NativeAccessSpecifierProtected
		TMap<class ADoor*, struct FAIRequestID>                      MoveRequestId;                                           // 0x0368(0x0050) Protected, NativeAccessSpecifierProtected
		class ADoor*                                                 LastUsedDoorLink;                                        // 0x03B8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AWallHoleTraversal*                                    LastUsedWallHole;                                        // 0x03C0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UNavLinkCustomComponent*                               LastUsedDoorLinkComp;                                    // 0x03C8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTraverseHoleActivity*                                 TraverseHoleActivity;                                    // 0x03D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        Acceleration;                                            // 0x03D8(0x0004) Edit, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0xA4];                                  // 0x03DC(0x00A4) MISSED OFFSET (PADDING)

	public:
		void OnHoleTraversalFinished(class UBaseActivity* Activity, class ACyberneticController* Controller);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.PremissionStreetView
	 * Size -> 0x0060 (FullSize[0x0280] - InheritedSize[0x0220])
	 */
	class APremissionStreetView : public AActor
	{
	public:
		class UStaticMeshComponent*                                  LeftBuildingMesh;                                        // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UStaticMeshComponent*                                  RightBuildingMesh;                                       // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UChildActorComponent*                                  LeftTrafficLight;                                        // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UChildActorComponent*                                  RightTrafficLight;                                       // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UArrowComponent*                                       Direction;                                               // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class UStaticMesh*>                                   Buildings;                                               // 0x0248(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class AActor*>                                        TrafficLights;                                           // 0x0258(0x0010) Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xC];                                   // 0x0268(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        InterpConstantSpeed;                                     // 0x0274(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TimeUntilReset;                                          // 0x0278(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x027C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.QuestManager
	 * Size -> 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
	 */
	class AQuestManager : public AInfo
	{
	public:
		bool                                                         bIsQuestActive;                                          // 0x0220(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0221(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UBaseQuestNode*>                                QuestNodes;                                              // 0x0228(0x0010) Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		class UBaseQuestNode*                                        ActiveQuestNode;                                         // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void StartQuest();
		void OnFinishedAllQuestNodes();
		void IterateQuestNodeList();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavArea_FlankingAvoidanceArea
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavArea_FlankingAvoidanceArea : public UNavArea
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotPlayerController
	 * Size -> 0x0408 (FullSize[0x0978] - InheritedSize[0x0570])
	 */
	class AReadyOrNotPlayerController : public APlayerController
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0570(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UProgressionComponent*                                 ProgressionComp;                                         // 0x0578(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x0580(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      ServerSideChecksum;                                      // 0x0584(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x10];                                  // 0x0588(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnPawnPossessed;                                         // 0x0598(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0xF];                                   // 0x0599(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnOutOfBoundsChanged;                                    // 0x05A8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0xF];                                   // 0x05A9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnPreClientTravel;                                       // 0x05B8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0xF];                                   // 0x05B9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0006[0x10];                                  // 0x05C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        RespawnTimeLeft;                                         // 0x05D8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0x4];                                   // 0x05DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ACameraActor*                                          SpectateCamera;                                          // 0x05E0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ULevelStreaming*>                               StreamingLevels;                                         // 0x05E8(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		class FString                                                StreamingLevel;                                          // 0x05F8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FString                                                StreamingOptions;                                        // 0x0608(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0008[0x20];                                  // 0x0618(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                        ReplicatedMapList;                                       // 0x0638(0x0010) Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               OnMapListReplicated;                                     // 0x0648(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0009[0xF];                                   // 0x0649(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		float                                                        VoteAntiSpamDebouncer;                                   // 0x0658(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0010[0x4];                                   // 0x065C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVoteData                                             MyVoteData;                                              // 0x0660(0x0030) BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic
		bool                                                         bStatsProfiledQueued;                                    // 0x0690(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0011[0x7];                                   // 0x0691(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UUserWidget*>                                   ProtectedWidgetClasses;                                  // 0x0698(0x0010) Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0012[0x18];                                  // 0x06A8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bCanOpenOptionsMenu;                                     // 0x06C0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0013[0x7];                                   // 0x06C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FString, class UUserWidget*>                      CreatedWidgetMap;                                        // 0x06C8(0x0050) ExportObject, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0014[0x10];                                  // 0x0718(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FZeuzMatchMakingServerInfo                            Rep_MatchmakingServerInfo;                               // 0x0728(0x0078) Net, NativeAccessSpecifierPublic
		struct FZeuzMatchMakingPartyInit                             Rep_MatchmakingPartyInit;                                // 0x07A0(0x00B0) Net, NativeAccessSpecifierPublic
		class ASwatAutomationManager*                                SwatAutomationManager;                                   // 0x0850(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class AActor*, float>                                   DebugActorList;                                          // 0x0858(0x0050) NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0015[0x10];                                  // 0x08A8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnVoiceChannelChanged;                                   // 0x08B8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0016[0xF];                                   // 0x08B9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0017[0x20];                                  // 0x08C8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnHudWidgetsClearedComplete;                             // 0x08E8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0018[0xF];                                   // 0x08E9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class USkeletalMesh*                                         TestCube;                                                // 0x08F8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                    TestMaterial;                                            // 0x0900(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0019[0x8];                                   // 0x0908(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bStartedCoopAsSpectator;                                 // 0x0910(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0020[0x7];                                   // 0x0911(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ACharacter*                                            LastKilledCharacter;                                     // 0x0918(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0021[0x8];                                   // 0x0920(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bIsReplaySpectator;                                      // 0x0928(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0022[0x27];                                  // 0x0929(0x0027) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMulticastInlineDelegate                               OnRTXDMOChanged;                                         // 0x0950(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0023[0xF];                                   // 0x0951(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TArray<struct FRChatMessage>                                 ChatMessages;                                            // 0x0960(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0024[0x8];                                   // 0x0970(0x0008) MISSED OFFSET (PADDING)

	public:
		void WinCoop();
		void Vote(bool VoteYes);
		void UpdateAchievementProgress(const class FString& ID, float Percent);
		void UnhideAllWeaponAttachments();
		void UnhideAllSmallItemMeshes();
		void UnhideAllItemMeshes();
		void ToggleRTXDMO();
		void ToggleGodModeOnEveryone();
		void ToggleDeployMenu();
		void TestSendCrash();
		void TestMatchmakingServerRefresh();
		void TestMatchmakingServerCreateParty();
		void TeleportUp();
		void TeleportToNextRemainingAI();
		void TakeDamageExec(float DamageAmount);
		void SwapAllItemSkeletalMeshesToCubes();
		bool StreamInSession(const struct FBlueprintSessionResult& SessionResult, class ULevelStreaming** OutStreamedLevel, bool bShouldCreateLoadingScreen);
		bool StreamInLevel(const class FString& NewLevel, const class FString& Options, class ULevelStreaming** OutStreamedLevel, const struct FLevelStreamOptions& LevelStreamOptions);
		void StopVoteInput();
		void StopSwatAutomation();
		void StopSpeaking();
		void StartSwatAutomation();
		void StartSpeaking();
		void StartBleeding();
		void SpawnRandomAI(int32_t Count);
		void SpawnBotsForGame(int32_t BotCount);
		void SpawnAIAtLocation(const class FString& TableName, const struct FVector& Location, const struct FVector& MoveLocation);
		void SpawnAI(const class FString& TableName, int32_t Count);
		void SoftWinCoop();
		void ShowCoopScoreChangeWidget(float ScoreChangeValue);
		void SetTimelimit(float Time);
		void SetServerPasswordOnConnection(const class FString& Password);
		void SetScorelimit(int32_t Score);
		void SetPreferredTeamUniqueNetIdOnConnection(const class FString& UniqueId);
		void SetMousePosition(float LocationX, float LocationY);
		void SetHostMigrationComplete();
		void SetClubMusicMasterVolume(float Volume);
		void SetAllComponentsUseParentsBounds();
		void ServerStatFileStop();
		void ServerStatFileStart();
		void Server_SwapPlayersTeam(class APlayerState* ps);
		void Server_StatFile(bool bStartStatFile);
		void Server_StartSpectating();
		void Server_StartReferendum(class AReferendum* ReferendumClass);
		void Server_StartPlayerReferendum(class APlayerReferendum* ReferendumClass, class AReadyOrNotPlayerState* TargetPlayer);
		void Server_StartMapReferendum(class AMapReferendum* ReferendumClass, const class FString& MapURL);
		void Server_SetTeamType(ETeamType NewTeam);
		void Server_SetSpawn(ETeamType SpawnTeam, ESelectedSpawn NewSpawnPoint);
		void Server_SetHasFinishedLoading();
		void Server_SetDeployableDepot(int32_t NewDepot);
		void Server_SetChecksum(int32_t Checksum);
		void Server_SendChatMessage(const struct FRChatMessage& ChatMessage);
		void Server_RespawnAsLobby(class ASpectatorPawn* Class, const struct PCoreUObject_FTransform& SpawnTransform);
		void Server_RequestLoadoutChange(const struct FSavedLoadout& Loadout);
		void Server_RemoveMarker(int32_t ID);
		void Server_RemoveLine(int32_t ID);
		void Server_ReleaseVIP();
		void Server_ReferendumVoteYes();
		void Server_ReferendumVoteNo();
		void Server_LoginAsAdmin(const class FString& Password);
		void Server_Equip(const class FString& ItemName);
		void Server_EnablePersonnel(int32_t PersonnelNum, int32_t MapPointNum);
		void Server_EnableDeployable(int32_t DeployableNum);
		void Server_DisablePersonnel(int32_t PersonnelNum);
		void Server_DisableDeployable(int32_t DeployableNum);
		void Server_ClearDrawingPointData(bool bClearAll, bool bClearAllFloors, int32_t FloorNum);
		void Server_BecomeVIP();
		void Server_AdminRestartServer();
		void Server_AdminRemoveMapFromRotationByIndex(int32_t Idx);
		void Server_AdminRemoveMapFromRotation(const class FString& MapURL);
		void Server_AdminNextMap();
		void Server_AdminKickPlayer(class APlayerState* KickingPlayerState, const class FText& ReasonOveride);
		void Server_AdminBanPlayer(class APlayerState* BanningPlayerState);
		void Server_AdminAddMapToRotationAtIndex(const class FString& MapURL, int32_t Idx);
		void Server_AdminAddMapToRotation(const class FString& MapURL);
		void Server_AddMarker(const struct FPlanningMarker& Marker);
		void Server_AddLine(const struct FPlanningLine& Line);
		void Server_AddDrawingPointData(const struct FVector2D& DrawingPointData, int32_t FloorNum, EFreeDrawColor Color, bool bNewPoint, float Thickness);
		void SendChatMessage(const struct FRChatMessage& ChatMessage);
		bool SaveFileToUserCloud(const class FString& FullPath);
		void SaveChatMessage(const struct FRChatMessage& Message);
		void RetrieveChatLog(TArray<struct FRChatMessage>* OutMessages);
		void ResetKeybinds();
		void ResetDoorLockStateKnowledge();
		void ResetAI(float Range);
		void RequestVoteInput(const struct FVoteData& CurrentVoteData);
		void ReportAllInstancedStaticMeshes();
		void ReplicateMapListIfAdmin();
		void RemoveWeaponSkin();
		void RemoveHUD();
		void RemoveCharacterSkin();
		void ReleaseVIP();
		void PrintGPUBrand();
		void PlayDeadAllEnemies();
		void PlayAnimationFromLookupTable(const class FString& AnimationRowName);
		void PassMouseControlToValidWidget();
		void OptimizeWorld();
		void OnVoiceChannelChanged__DelegateSignature();
		void OnStreamedLevelLoadedRemovingLoadingScreen();
		void OnStreamedLevelLoadedExecuteOpen();
		void OnStreamedLevelLoadedComplete();
		void OnSessionJoinSuccess();
		void OnSessionJoinFailed();
		void OnSaveLoadout();
		void OnRTXDMOChanged__DelegateSignature(bool bRTXOn);
		void OnRep_Maplist();
		void OnPreClientTravel__DelegateSignature();
		void OnPawnPossessed__DelegateSignature(class APawn* PossessedPawn);
		void OnOutOfBoundsChanged__DelegateSignature(bool bIsOutOfBounds);
		void OnMapListReplicated__DelegateSignature(TArray<class FString> MapList);
		void OnlyCastLocalPlayerDynamicShadow();
		void OnLevelOpen();
		void OnHudWidgetsCleared__DelegateSignature();
		void NotifyRespawnTime(float RespawnTime);
		void Multicast_SetPersonnelAtPoint(int32_t PersonnelNum, int32_t MapPointNum);
		void Multicast_RemovePersonnelAtPoint(int32_t PersonnelNum);
		void Multicast_ForcePlanningRefresh();
		void MeshMergeEverything();
		void MakeCrash();
		void KnockoutAllEnemies();
		void KillSWATTeam();
		void Kill(float Time);
		bool IsCameraFading();
		void HideAllWeaponAttachments();
		void HideAllSmallItemMeshes();
		void HideAllItemMeshes();
		void GiveSWATRam();
		void GibAllComponents();
		EVoteState GetVote();
		ETeamType GetTeamType();
		float GetRespawnTimeRemaining();
		TArray<class FString> GetReplicatedMapRotation();
		class FString GetPrefferredTeamUniqueNetIdOnConnection();
		class FString GetPasswordOnConnection();
		void GetNetworkConnectionStatus(float* AvgLag, int32_t* OutLostPackets, int32_t* InLostPackets, int32_t* OutLostPacketPrcnt, int32_t* InLostPacketPrcnt);
		void FreeVIP();
		void FlushDeadBodies();
		void EscapeMenu();
		void EquipAndDropEvidence();
		void Equip(const class FString& ItemName);
		void EndVote();
		void EnableWeaponFovShader();
		void EnableScopeAlignmentTool();
		void EnablePlayerInput();
		void DropAllSuspectWeapons();
		void DownloadBlacklistHashes();
		void DisplayAllPlayingFMODEvents();
		void DisableWeaponFovShader();
		void DisableSkeletalMeshShadowCasting();
		void DisableForceShowMouseCursor();
		void DisableAllMaterials();
		void DisableAllItemTicks();
		void DisableAllItemMaterials();
		void DestroySwatTeam();
		void DestroySwatInventoryItems();
		void DestroySwatControllers();
		void DestroySwatAnimation();
		void DestroyEverything();
		void DestroyAllWorldDynamicItems();
		void DestroyAllWidgets();
		void DestroyAllSuspects();
		void DestroyAllLights();
		void DestroyAllItems();
		void DestroyAllItemMeshes();
		void DestroyAllExceptClosestDoor();
		void DestroyAllExceptClosestCharacter();
		void DestroyAllDynamicLights();
		void DestroyAllDecals();
		void DestroyAllAI();
		void DestroyAllActorsOfName(const class FString& Name);
		void DeleteAnyNonMeshComponents();
		void DebugMigrateHost();
		void DebugClientStartHostMigration();
		void ClientStartOnlineGame();
		void ClientSpawned();
		void ClientSetSpectatorCamera(const struct FVector& CameraLocation, const struct FRotator& CameraRotation);
		void ClientSetNetSpeed(int32_t NewNetSpeed);
		void ClientJoinVoice(const class FString& OnlineSessionId, int32_t TeamNum);
		void ClientEndOnlineGame();
		void Client_SetViewTargetWithBlend(class APawn* NewViewTarget);
		void Client_SetControlRotation(const struct FRotator& NewControlRotation);
		void Client_RemoveWidget(class UUserWidget* Widget);
		void Client_PostLogin();
		void Client_HideHUDWidgets();
		void Client_GetStats();
		void Client_DisableUIMouse();
		void Client_CreateWidget(const class FString& WidgetName, bool bForceAddToWidgetStack, bool bIsEscapeKey);
		void Client_CreateMessageDisplay(const class FString& MessageTxt, const class FString& ButtonTxt);
		void Client_CreateLoadingScreen(const class FString& Map, const class FString& Mode, const class FString& SessionName, bool bIsSeamlessTravel);
		void Client_ClearHUDWidgets();
		bool CanSetSpawn(ETeamType Team, ESelectedSpawn NewSpawnPoint, bool bSameSpawn);
		bool CanSetDepotTo(int32_t NewDepot, bool bSameDepot);
		bool CanEnablePersonnel(int32_t PersonnelNum, int32_t MapPointNum);
		bool CanEnableDeployable(int32_t DeployableNum);
		bool CanDisablePersonnel(int32_t PersonnelNum);
		bool CanDisableDeployable(int32_t DeployableNum);
		void BP_ReturnToMenu(const class FText& ReturnReason);
		void BP_HandleMessage(const struct FRChatMessage& ChatMessage);
		void BP_ClientWasKicked(const class FText& KickReason);
		void BeginVote(const class FString& reason, const class FString& Question, bool CanVoteNo);
		void ArrestOne();
		void ApplyWeaponSkin(const class FString& SkinName);
		void ApplyCharacterSkin(const class FString& SkinName);
		void AIStopHide();
		void AIHide();
		void AIEquipSecondary();
		void AIEquipPrimary();
		void AcknowledgeVote(const struct FVoteData& CurrentVoteData);
		void AbortCover();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavArea_CivilianC
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavArea_CivilianC : public UNavArea
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReloadSafelyActivity
	 * Size -> 0x0010 (FullSize[0x0208] - InheritedSize[0x01F8])
	 */
	class UReloadSafelyActivity : public UBaseActivity
	{
	public:
		class UAnimMontage*                                          ReloadMontage;                                           // 0x01F8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0200(0x0008) MISSED OFFSET (PADDING)

	public:
		void ReloadFinished();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotGameUserSettings
	 * Size -> 0x0148 (FullSize[0x0268] - InheritedSize[0x0120])
	 */
	class UReadyOrNotGameUserSettings : public UGameUserSettings
	{
	public:
		float                                                        MasterSoundVolume;                                       // 0x0120(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MusicSoundVolume;                                        // 0x0124(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        UISoundVolume;                                           // 0x0128(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SFXSoundVolume;                                          // 0x012C(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        VOIPVolume;                                              // 0x0130(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHitmarkerSfxEnabled;                                    // 0x0134(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x0135(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MouseSensitivity;                                        // 0x0138(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FreelookSensitivity;                                     // 0x013C(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                                TargetLocale;                                            // 0x0140(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FieldOfView;                                             // 0x0150(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LadderRollSensitivity;                                   // 0x0154(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bToggleADS;                                              // 0x0158(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x0159(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      MaxShellsInWorld;                                        // 0x015C(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MaxShellLifeTime;                                        // 0x0160(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bUseMeshPainting;                                        // 0x0164(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x3];                                   // 0x0165(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                LastConnectedServerIP;                                   // 0x0168(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        IconScale;                                               // 0x0178(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        QuickThrowScale;                                         // 0x017C(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bWorldDecalsEnabled;                                     // 0x0180(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x3];                                   // 0x0181(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        WorldDecalScreenFadeSize;                                // 0x0184(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WorldDecalDensity;                                       // 0x0188(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      FireModeDisplayOption;                                   // 0x018C(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      TeamViewFPS;                                             // 0x0190(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bTeamViewFPSEnabled;                                     // 0x0194(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowFPS;                                                // 0x0195(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowHUD;                                                // 0x0196(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowCompass;                                            // 0x0197(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowWeaponHUD;                                          // 0x0198(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowMagazineHUD;                                        // 0x0199(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowChat;                                               // 0x019A(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bEnableHUDSwaying;                                       // 0x019B(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowHotkeyHints;                                        // 0x019C(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowHealthIcons;                                        // 0x019D(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowCommandContextHint;                                 // 0x019E(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bZoomADS;                                                // 0x019F(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSendMapStatistics;                                      // 0x01A0(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EScoreReadoutMode                                            ScoreReadoutMode;                                        // 0x01A1(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESwatCommand                                                 DefaultCommand;                                          // 0x01A2(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESwatCommand                                                 DefaultDoorUnknownCommand;                               // 0x01A3(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESwatCommand                                                 DefaultDoorOpenCommand;                                  // 0x01A4(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESwatCommand                                                 DefaultDoorLockedCommand;                                // 0x01A5(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESwatCommand                                                 DefaultDoorUnlockedCommand;                              // 0x01A6(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x1];                                   // 0x01A7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      DefaultCommandOption;                                    // 0x01A8(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      ViewDistanceQuality;                                     // 0x01AC(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      AntiAliasingQuality;                                     // 0x01B0(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      ShadowQuality;                                           // 0x01B4(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      PostProcessQuality;                                      // 0x01B8(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      TextureQuality;                                          // 0x01BC(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      EffectsQuality;                                          // 0x01C0(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      DefaultDoorUnknownCommandOption;                         // 0x01C4(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      DefaultDoorOpenCommandOption;                            // 0x01C8(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      DefaultDoorLockedCommandOption;                          // 0x01CC(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      DefaultDoorUnlockedCommandOption;                        // 0x01D0(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCurvedHUD;                                              // 0x01D4(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         b2DReloadIcons;                                          // 0x01D5(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowPlayerNamePlates;                                   // 0x01D6(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowPlayerIcon;                                         // 0x01D7(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowTeamStatus;                                         // 0x01D8(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bMirrorReflectionEnabled;                                // 0x01D9(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bMirrorInLobbyOnly;                                      // 0x01DA(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x1];                                   // 0x01DB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MirrorFPS;                                               // 0x01DC(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        PiPFPS;                                                  // 0x01E0(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bPiPFPSEnabled;                                          // 0x01E4(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDepthOfField;                                           // 0x01E5(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bMotionBlur;                                             // 0x01E6(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x1];                                   // 0x01E7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MotionBlurStrength;                                      // 0x01E8(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        PiPResolutionScale;                                      // 0x01EC(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SafeZoneX;                                               // 0x01F0(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SafeZoneY;                                               // 0x01F4(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      GraphicsPresetIndex;                                     // 0x01F8(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowButtonPrompts;                                      // 0x01FC(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bInvertMousePitch;                                       // 0x01FD(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bInvertMouseYaw;                                         // 0x01FE(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bExperimentalFeatures;                                   // 0x01FF(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowControlsOnScreen;                                   // 0x0200(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowHesitationBar;                                      // 0x0201(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRayTracingEnabled;                                      // 0x0202(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRayTracingReflectionsEnabled;                           // 0x0203(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRayTracingShadowsEnabled;                               // 0x0204(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRayTracingAmbientOcclusionEnabled;                      // 0x0205(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0x2];                                   // 0x0206(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      DlssQualitySetting;                                      // 0x0208(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      FSRQualitySetting;                                       // 0x020C(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MicInputGain;                                            // 0x0210(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0008[0x4];                                   // 0x0214(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                InputAudioDevice;                                        // 0x0218(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bFrameLimitEnabled;                                      // 0x0228(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemSelectionInterfaceType                                  ItemSelectionInterface;                                  // 0x0229(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGrenadeThrowSettingType                                     GrenadeThrowType;                                        // 0x022A(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EShotgunReloadType                                           ShotgunLoadType;                                         // 0x022B(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEmptyMagReloadType                                          EmptyMagReloadType;                                      // 0x022C(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOptiwandViewMode                                            OptiwandViewMode;                                        // 0x022D(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0009[0x2];                                   // 0x022E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                DMOAddress;                                              // 0x0230(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                                DMOGameMode;                                             // 0x0240(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETeamType                                                    DMOTeamType;                                             // 0x0250(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0010[0x3];                                   // 0x0251(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FMirrorReflectionSettings                             MirrorReflectionSettings;                                // 0x0254(0x0008) Config, NoDestructor, NativeAccessSpecifierPublic
		ENVGStyle                                                    NVGStyle;                                                // 0x025C(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bBounceLightEnabled;                                     // 0x025D(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bFlashlightShadowsEnabled;                               // 0x025E(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bServerSideChecksum;                                     // 0x025F(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint8_t                                                      ReflexMode;                                              // 0x0260(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bReflexGameToRenderLatencyInMSEnabled;                   // 0x0261(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bReflexGameLatencyInMSEnabled;                           // 0x0262(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bReflexRenderLatencyInMSEnabled;                         // 0x0263(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bReflexFlashIndicatorEnabled;                            // 0x0264(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0011[0x3];                                   // 0x0265(0x0003) MISSED OFFSET (PADDING)

	public:
		void ResetKeybinds();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavArea_TrappedHasBeenOpenedDoor
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavArea_TrappedHasBeenOpenedDoor : public UNavArea
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavArea_SuspectB
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavArea_SuspectB : public UNavArea
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotPlayerState
	 * Size -> 0x05F0 (FullSize[0x0910] - InheritedSize[0x0320])
	 */
	class AReadyOrNotPlayerState : public APlayerState
	{
	public:
		unsigned char                                                UnknownData_0000[0x18];                                  // 0x0320(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bHasFinishedLoading;                                     // 0x0338(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x0339(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      Kills;                                                   // 0x033C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      KillsThisLife;                                           // 0x0340(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      TeamKills;                                               // 0x0344(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      Arrests;                                                 // 0x0348(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      TimesArrested;                                           // 0x034C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      ArrestsThisLife;                                         // 0x0350(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      Objectives;                                              // 0x0354(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      Reports;                                                 // 0x0358(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      Evidence;                                                // 0x035C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AEvidenceActor*>                                EvidenceActorsInPossession;                              // 0x0360(0x0010) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x8];                                   // 0x0370(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDamageType*                                           DeathDamageType;                                         // 0x0378(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ABaseMagazineWeapon*                                   DeathWeapon;                                             // 0x0380(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFireMode                                                    LastFireMode;                                            // 0x0388(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDeadToPointDamage;                                      // 0x0389(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x2];                                   // 0x038A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FHitResult                                            DeathTraceHit;                                           // 0x038C(0x0088) BlueprintVisible, BlueprintReadOnly, Net, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x4];                                   // 0x0414(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerCharacter*                                      DeathKiller;                                             // 0x0418(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      Deaths;                                                  // 0x0420(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      Incapacitations;                                         // 0x0424(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DamageDealt;                                             // 0x0428(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DamageReceived;                                          // 0x042C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                                PlayerSpawnTag;                                          // 0x0430(0x0010) BlueprintVisible, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x4];                                   // 0x0440(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      BulletsFired;                                            // 0x0444(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                      BulletsFiredThisLife;                                    // 0x0448(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ETeamType                                                    Team;                                                    // 0x044C(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x3];                                   // 0x044D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSavedLoadout                                         ServerSavedLoadout;                                      // 0x0450(0x0178) BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               OnPlayerLoadoutChanged;                                  // 0x05C8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0xF];                                   // 0x05C9(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0008[0x1];                                   // 0x05D8(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bReady;                                                  // 0x05D9(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSquadLeader;                                            // 0x05DA(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0009[0x5];                                   // 0x05DB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSavedLoadout                                         LastLoadout;                                             // 0x05E0(0x0178) BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic
		float                                                        PointsFromKills;                                         // 0x0758(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        PointsFromDamage;                                        // 0x075C(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        PointsFromArrests;                                       // 0x0760(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        PointsFromObjective;                                     // 0x0764(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        PointsFromReportingKills;                                // 0x0768(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        PointsFromReportingArrests;                              // 0x076C(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsInGame;                                               // 0x0770(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bJoinInProgress;                                         // 0x0771(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsVIP;                                                  // 0x0772(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bWasVIP;                                                 // 0x0773(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      GrenadesThrown;                                          // 0x0774(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      TotalYells;                                              // 0x0778(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      NumberOrdersGiven;                                       // 0x077C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      BulletsHit;                                              // 0x0780(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      BulletsHitThisLife;                                      // 0x0784(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      Headshots;                                               // 0x0788(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TimeAlive;                                               // 0x078C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0010[0x8];                                   // 0x0790(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EVoiceType                                                   VoiceType;                                               // 0x0798(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                         bIsTalking;                                              // 0x0799(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0011[0xE];                                   // 0x079A(0x000E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bTorsoInjured;                                           // 0x07A8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLeftArmInjured;                                         // 0x07A9(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRightArmInjured;                                        // 0x07AA(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLeftLegInjured;                                         // 0x07AB(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRightLegInjured;                                        // 0x07AC(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHeadInjured;                                            // 0x07AD(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0012[0x2];                                   // 0x07AE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      BulletsBlocked;                                          // 0x07B0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      HitsReceived;                                            // 0x07B4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0013[0x10];                                  // 0x07B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bIsReplaySpectator;                                      // 0x07C8(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0014[0x7];                                   // 0x07C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlanningDrawingArray                                 DrawingArray;                                            // 0x07D0(0x0118) Net, NativeAccessSpecifierPublic
		struct FPlanningDrawing                                      CurrentDrawing;                                          // 0x08E8(0x0028) Net, NativeAccessSpecifierPublic

	public:
		void UpdateScore();
		void SetTeam(ETeamType NewTeam);
		void SetReady(bool bIsReady, const struct FSavedLoadout& NewLoadout);
		void SetIsTalking(bool bNewTalking);
		void ServerSetJoinedOnSquadLeader();
		void Server_UpdatePlayerSpawnTag(const class FString& NewTag);
		void Server_UpdateDrawing(const struct FPlanningDrawing& Drawing);
		void Server_SetVoiceType(EVoiceType NewVoiceType);
		void Server_SetTeam(ETeamType NewTeam);
		void Server_SetReady(bool bIsReady, const struct FSavedLoadout& NewLoadout);
		void Server_SetPlayerName(const class FName& NewPlayerName);
		void Server_SetLoadout(const struct FSavedLoadout& NewLoadout);
		void Server_SetIsInGame(bool bNewIsInGame);
		void Server_SendUnlockedDLC(EDLC Dlc);
		void Server_FinishDrawing(const struct FPlanningDrawing& Drawing);
		void ResetBulletsFired();
		void OnRep_UpdateServerSavedLoadout();
		void OnPlayerLoadoutChanged__DelegateSignature(const struct FSavedLoadout& NewLoadout);
		void Notify_PendingChangeTeam(ETeamType NewTeamType);
		bool IsVipPlayerState();
		bool IsTalking();
		bool IsSquadLeader();
		bool IsOwnerOfPlayerState();
		void IncrementBulletsFired(class ABaseWeapon* Weapon);
		bool HasEveryoneFinishedLoading(int32_t* OutTotal, int32_t* OutLoading, int32_t* OutLoaded);
		EVoiceType GetVoiceType();
		ETeamType GetTeam();
		ETeamType GetPendingTeam();
		void GetNetworkStatus(float* AvgLag);
		int32_t GetKillCount();
		int32_t GetDeathCount();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotGauntletTestController
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UReadyOrNotGauntletTestController : public UGauntletTestController
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (PADDING)

	public:
		void StopProfiling();
		void StartTesting();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.RadialSectorWidget
	 * Size -> 0x0018 (FullSize[0x0278] - InheritedSize[0x0260])
	 */
	class URadialSectorWidget : public UUserWidget
	{
	public:
		class UPanelWidget*                                          SectorImagePanel;                                        // 0x0260(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage*                                                SectorImage;                                             // 0x0268(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SectorInnerRadius;                                       // 0x0270(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        SectorOuterRadius;                                       // 0x0274(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		bool SetSectorColor(const struct FLinearColor& NewColor, class UImage* InSectorImage);
		bool InitializeSectorWidget(float Angle, float Percentage, float InSectorInnerRadius, float InSectorOuterRadius, class UMaterialInterface* InSectorMaterial, const struct FLinearColor& UnselectedColor, class UImage* InSectorImage);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotFaceAnimInstance
	 * Size -> 0x0018 (FullSize[0x02D0] - InheritedSize[0x02B8])
	 */
	class UReadyOrNotFaceAnimInstance : public UAnimInstance
	{
	public:
		class USkeletalMeshComponent*                                BodyDriverMesh;                                          // 0x02B8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPoseAsset*                                            DefaultFaceROMData;                                      // 0x02C0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x02C8(0x0008) MISSED OFFSET (PADDING)

	public:
		class UPoseAsset* GetFaceROM();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.RadialWidgetBase
	 * Size -> 0x0188 (FullSize[0x0400] - InheritedSize[0x0278])
	 */
	class URadialWidgetBase : public UBaseWidget
	{
	public:
		class UMulticastInlineDelegate                               OnRadialMenuOpened_Delegate;                             // 0x0278(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xF];                                   // 0x0279(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnRadialMenuClosed_Delegate;                             // 0x0288(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xF];                                   // 0x0289(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		int32_t                                                      CurrentSelectionIndex;                                   // 0x0298(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                      PreviousSelectionIndex;                                  // 0x029C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        Angle;                                                   // 0x02A0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        AngleSpread;                                             // 0x02A4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        PercentageWithoutGap;                                    // 0x02A8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        PercentageWithGap;                                       // 0x02AC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bIsWheelCreated : 1;                                     // 0x02B0(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bIsWheelRefreshed : 1;                                   // 0x02B0(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bNavigatingWithGamepad : 1;                              // 0x02B0(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x3];                                   // 0x02B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                RadialCursorPosition;                                    // 0x02B4(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0003[0x4];                                   // 0x02BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                                Angles;                                                  // 0x02C0(0x0010) BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class URadialSectorWidget*>                           Sectors;                                                 // 0x02D0(0x0010) BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		class UPanelWidget*                                          RadialWheel;                                             // 0x02E0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                RadialWheelCursor;                                       // 0x02E8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class APlayerController*                                     OwningPlayer;                                            // 0x02F0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class APawn*                                                 OwningPawn;                                              // 0x02F8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class APlayerCharacter*                                      OwningPlayerCharacter;                                   // 0x0300(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                      NumOfSectors;                                            // 0x0308(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        OpenDelay;                                               // 0x030C(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        CloseDelay;                                              // 0x0310(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MinWheelSize;                                            // 0x0314(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MaxWheelSize;                                            // 0x0318(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MinCursorAngle;                                          // 0x031C(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MaxCursorAngle;                                          // 0x0320(0x0004) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ERadialCursorBehaviour                                       RadialCursorBehaviour;                                   // 0x0324(0x0001) Edit, BlueprintVisible, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0004[0x3];                                   // 0x0325(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class URadialSectorWidget*                                   RadialSectorWidgetClass;                                 // 0x0328(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bShowMouseCursor : 1;                                    // 0x0330(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.i, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bShowDebugMessages : 1;                                  // 0x0330(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.i, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bCanAimWhileMenuIsOpened : 1;                            // 0x0330(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.i, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bCanMoveWhileMenuIsOpened : 1;                           // 0x0330(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.i, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bAlwaysHideRadialWheelCursor : 1;                        // 0x0330(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.i, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bCanPerformActionsWhileMenuIsOpened : 1;                 // 0x0330(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.i, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0005[0x3];                                   // 0x0331(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      StartingSectorIndex;                                     // 0x0334(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        StartingSectorAngle;                                     // 0x0338(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        IconSize;                                                // 0x033C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        IconPadding;                                             // 0x0340(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        SectorInnerRadius;                                       // 0x0344(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        SectorOuterRadius;                                       // 0x0348(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        GapSize;                                                 // 0x034C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        WheelSize;                                               // 0x0350(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        WheelCursorDistanceFromCenterWheel;                      // 0x0354(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bHideRadialWheelCursorOnMenuOpened : 1;                  // 0x0358(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0006[0x3];                                   // 0x0359(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                          SelectedColor;                                           // 0x035C(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          UnselectedColor;                                         // 0x036C(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                          UnselectableColor;                                       // 0x037C(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0007[0x4];                                   // 0x038C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFont*                                                 Font;                                                    // 0x0390(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODEvent*                                            SelectionSound;                                          // 0x0398(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODEvent*                                            MenuOpenSound;                                           // 0x03A0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODEvent*                                            MenuCloseSound;                                          // 0x03A8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODEvent*                                            MenuCloseSound_NoSelection;                              // 0x03B0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class URadialWidgetThemeData*                                RadialWidgetTheme;                                       // 0x03B8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector2D                                MousePosition;                                           // 0x03C0(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector2D                                MouseAxisDelta;                                          // 0x03C8(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MouseWheelDelta;                                         // 0x03D0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MouseAngle;                                              // 0x03D4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        GamepadXAxis;                                            // 0x03D8(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        GamepadYAxis;                                            // 0x03DC(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        GamepadAngle;                                            // 0x03E0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        GlobalTimeDilation;                                      // 0x03E4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0008[0x18];                                  // 0x03E8(0x0018) MISSED OFFSET (PADDING)

	public:
		bool WasForceClosed();
		void UseMouseControl();
		void UseGamepadControl();
		void UpdateSectorColor(int32_t SectorIndex, const struct FLinearColor& SectorColor);
		void UpdateMouseSelectionLogic(class UWidget* RadialCursorWidget);
		void UpdateGamepadSelectionLogic(class UWidget* RadialCursorWidget);
		bool ShowWheel();
		void ShowMouseCursor();
		void Setup(const struct FRadialWidgetSpawnProperties& RadialWidgetSpawnProperties);
		void SetMouseWheelDelta(float InDelta);
		void SetMousePositionToCenterScreen();
		void SetMousePosition(const struct FVector2D& NewMousePosition);
		void SetGamepadYAxis(float InGamepadYAxis);
		void SetGamepadXYAxis(float InGamepadXAxis, float InGamepadYAxis);
		void SetGamepadXAxis(float InGamepadXAxis);
		void SetCloseDelay(float NewDelay);
		bool Select(int32_t Index);
		void SaveMousePosition();
		void RestoreMousePosition();
		bool RefreshWheel(int32_t InStartingSectorIndex);
		bool Previous();
		void OpenWheel_Internal(bool bForceRefresh);
		bool OpenWheel(bool bForceRefresh);
		void OnSectorSelected(int32_t SelectedIndex);
		void OnSectorDeselected(int32_t DeselectedIndex);
		bool OnRadialSectorCreated(int32_t Index, float InAngle);
		void OnRadialMenuOpened__DelegateSignature();
		void OnRadialMenuOpened();
		bool OnRadialMenuInitialized();
		void OnRadialMenuCreated();
		void OnRadialMenuClosed__DelegateSignature();
		void OnRadialMenuClosed();
		bool Next();
		bool IsWheelOpen();
		bool IsWheelCursorVisible();
		bool IsWheelClosed();
		bool IsMenuOpening();
		bool IsMenuClosing();
		bool InitializeMenuProperties();
		bool InitializeMenu(int32_t Index);
		bool HideWheel();
		void HideMouseCursor();
		struct FVector2D GetViewportPositionOfWidgetCenter(class UWidget* InWidget);
		struct FVector2D GetViewportPositionOfWidget(class UWidget* InWidget, const struct FVector2D& InCoordinates);
		struct FVector2D GetPixelPositionOfWidgetCenter(class UWidget* InWidget);
		struct FVector2D GetPixelPositionOfWidget(class UWidget* InWidget, const struct FVector2D& InCoordinates);
		ERadialMenuCloseReason GetLastClosedReason();
		float GetDirectionToMouse(const struct FVector2D& MidWidgetCoordinates);
		float GetDirectionToGamepadAxis();
		struct FLinearColor GetCorrectSelectionColor();
		float GetCorrectAngle();
		bool ExecuteRadial();
		bool DetermineSelectedSector(float InAngle);
		void DetermineInputDevice();
		bool DeselectAll();
		bool Deselect(int32_t Index);
		bool CreateWheelSector(class UPanelWidget* PanelWidget, float InAngle, float InSectorInnerRadius, float InSectorOuterRadius, class UMaterialInterface* InSectorMaterial, bool bCreateGap);
		bool CreateWheel();
		void CloseWheel_Internal(bool bExecuteRadial, bool bRemoveFromParent, bool bHideMouseCursor, ERadialMenuCloseReason CloseReason);
		bool CloseWheel(bool bExecuteRadial, bool bRemoveFromParent, bool bHideMouseCursor, ERadialMenuCloseReason CloseReason);
		struct FVector2D CalculatePositionOnCircleFromWidget(class UPanelWidget* PanelWidget, const struct FVector2D& Origin, const struct FVector2D& InPadding, float InAngle);
		void BeginOpenWheel();
		void BeginCloseWheel();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.RoNMoveStyleComponent
	 * Size -> 0x00F0 (FullSize[0x01A0] - InheritedSize[0x00B0])
	 */
	class URoNMoveStyleComponent : public UActorComponent
	{
	public:
		class UDataTable*                                            MoveStyleDatabase;                                       // 0x00B0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  DefaultMoveStyleName;                                    // 0x00B8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  DefaulGaitName;                                          // 0x00C0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  MoveStyleCharacterName;                                  // 0x00C8(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  PreviousMoveStyleName;                                   // 0x00D0(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint8_t                                                      bIsOverriding;                                           // 0x00D8(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRoNMovementStyle                                     ActiveMoveStyle;                                         // 0x00E0(0x0088) Edit, EditConst, NativeAccessSpecifierPublic
		class FName                                                  Rep_MoveStyleName;                                       // 0x0168(0x0008) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      ActiveGaitIndex;                                         // 0x0170(0x0004) Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  ActiveGaitName;                                          // 0x0174(0x0008) Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        GaitTimeOut;                                             // 0x017C(0x0004) Edit, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  PendingGaitName;                                         // 0x0180(0x0008) Edit, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsStrafing;                                             // 0x0188(0x0001) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x17];                                  // 0x0189(0x0017) MISSED OFFSET (PADDING)

	public:
		void SetOverrideMoveStyleByName(const class FName& Name);
		void SetMovementStyleByName(const class FName& Name);
		bool SetMovementGaitByName(const class FName& Name, bool bForce);
		void SetCharacterSpeedMultiplier(float Multiplier);
		void SetCharacterSpeed(float Speed);
		void SetCharacterAccelerationMultiplier(float Multiplier);
		void SetCharacterAcceleration(float Acceleration);
		void OnRep_MoveStyle();
		void OnRep_IsStrafing();
		void ClearOverrideMoveStyle();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotProjectile
	 * Size -> 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
	 */
	class AReadyOrNotProjectile : public AActor
	{
	public:
		class USphereComponent*                                      CollisionComp;                                           // 0x0220(0x0008) Edit, ExportObject, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UProjectileMovementComponent*                          ProjectileMovement;                                      // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void OnHit(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotLevelScript
	 * Size -> 0x08D0 (FullSize[0x0AF8] - InheritedSize[0x0228])
	 */
	class AReadyOrNotLevelScript : public ALevelScriptActor
	{
	public:
		EGenerationType                                              WorldGenerationType;                                     // 0x0228(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0229(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterial*                                             TAASharpenFilter;                                        // 0x0230(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AActor*>                                        SpawnedFromNotifyActors;                                 // 0x0238(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		float                                                        FlashlightIntensity;                                     // 0x0248(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FlashlightIntensityBoost;                                // 0x024C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FlashlightBouncedIntensityBoost;                         // 0x0250(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x0254(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ABlockingVolume*>                               BlockingVolumesInLevel;                                  // 0x0258(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class AConversationManager*                                  ConversationManager;                                     // 0x0268(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<ELightType, class FName>                                LightingScenarios;                                       // 0x0270(0x0050) Edit, NativeAccessSpecifierPublic
		ELightType                                                   LightingType;                                            // 0x02C0(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDrawCoverDebug;                                         // 0x02C1(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x6];                                   // 0x02C2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLevelDataLookupTable                                 LevelData;                                               // 0x02C8(0x0770) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		class UMusicData*                                            MusicData;                                               // 0x0A38(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UItemData*                                             ItemData;                                                // 0x0A40(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundData*                                            SoundData;                                               // 0x0A48(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               Delegate_OnOutOfBoundsTimeLimitEnded;                    // 0x0A50(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0xF];                                   // 0x0A51(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		float                                                        OutOfBounds_MaxTimeLimit;                                // 0x0A60(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        OutOfBoundsTimeRemaining;                                // 0x0A64(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x8];                                   // 0x0A68(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AAmbientSound*>                                 AudioSourcesInLevel;                                     // 0x0A70(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class AFMODAmbientSound*>                             FMODAudioSourcesInLevel;                                 // 0x0A80(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x10];                                  // 0x0A90(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AReadyOrNotAudioVolume*>                        AudioVolumes;                                            // 0x0AA0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class ACyberneticCharacter*>                          AIRequestingCover;                                       // 0x0AB0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                         bUseDarkness;                                            // 0x0AC0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x3];                                   // 0x0AC1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MinimumLightIntensityForSource;                          // 0x0AC4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DarknessSightRangeMultiplier;                            // 0x0AC8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIncludeWorldLightsAsSources;                            // 0x0ACC(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRaining;                                                // 0x0ACD(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSpawnOfficerAI;                                         // 0x0ACE(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0x1];                                   // 0x0ACF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULevelSequence*                                        LevelSequenceMVP;                                        // 0x0AD0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULevelSequence*                                        LevelSequenceTeam;                                       // 0x0AD8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULevelSequencePlayer*                                  LastPlayedSequence;                                      // 0x0AE0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0008[0x10];                                  // 0x0AE8(0x0010) MISSED OFFSET (PADDING)

	public:
		void StopOutOfBoundsCountdown();
		void Stop3DAudioVisualizer();
		void StartOutOfBoundsCountdown();
		void Start3DAudioVisualizer();
		void SetFlashlightIntensityBoost(float Boost);
		void SetFlashlightBouncedIntensityBoost(float Boost);
		void PlayMVPSequence();
		void OnTeamSequenceFinished();
		void OnPiracyCheckUpdate_Private(bool bIsPirated, const class FString& ProgramDetected);
		void OnPiracyCheckUpdate(bool bIsPirated, const class FString& ProgramDetected);
		void OnOutOfBoundsTimeLimitEnded__DelegateSignature();
		void OnOutOfBoundsTimeLimitEnded();
		void OnMVPSequenceFinished();
		bool IsVisualizingAudioSources();
		bool IsOutOfBoundsEnabled();
		bool IsCountingDownForOutOfBounds();
		class AConversationManager* GetConversationManager();
		void EnableOutOfBounds();
		void DisableOutOfBounds();
		bool AllAudioVolumesTicked();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavArea_WallTraversalHole
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavArea_WallTraversalHole : public UNavArea
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.RadialWidgetThemeData
	 * Size -> 0x00A0 (FullSize[0x00D0] - InheritedSize[0x0030])
	 */
	class URadialWidgetThemeData : public UDataAsset
	{
	public:
		class FName                                                  Name;                                                    // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                  Description;                                             // 0x0038(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		int32_t                                                      StartingSectorIndex;                                     // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        StartingSectorAngle;                                     // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        IconSize;                                                // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        IconPadding;                                             // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SectorInnerRadius;                                       // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SectorOuterRadius;                                       // 0x0064(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        GapSize;                                                 // 0x0068(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WheelSize;                                               // 0x006C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WheelCursorDistanceFromCenterWheel;                      // 0x0070(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHideRadialWheelCursorOnMenuOpened : 1;                  // 0x0074(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x0075(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                          SelectedColor;                                           // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                          UnselectedColor;                                         // 0x0088(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                          UnselectableColor;                                       // 0x0098(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFont*                                                 Font;                                                    // 0x00A8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            SelectionSound;                                          // 0x00B0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            MenuOpenSound;                                           // 0x00B8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            MenuCloseSound;                                          // 0x00C0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            MenuCloseSound_NoSelection;                              // 0x00C8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavArea_SuspectC
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavArea_SuspectC : public UNavArea
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotRecastNavMesh
	 * Size -> 0x0000 (FullSize[0x05A8] - InheritedSize[0x05A8])
	 */
	class AReadyOrNotRecastNavMesh : public ANotifyingRecastNavMesh
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.WeaponSound
	 * Size -> 0x0188 (FullSize[0x01B8] - InheritedSize[0x0030])
	 */
	class UWeaponSound : public UDataAsset
	{
	public:
		bool                                                         bPlayFMODFiringAudio;                                    // 0x0030(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            FMODGunShot1P;                                           // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            FMODGunShot3P;                                           // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            MagCheck_FullSeq;                                        // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            QuickReload_FullSeq;                                     // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            QuickReloadEmpty_FullSeq;                                // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            Reload_FullSeq;                                          // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            ReloadEmpty_FullSeq;                                     // 0x0068(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            MagIn;                                                   // 0x0070(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            MagOut;                                                  // 0x0078(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            MagInQuick;                                              // 0x0080(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            MagOutQuick;                                             // 0x0088(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            MagDrop;                                                 // 0x0090(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            MagDropQuick;                                            // 0x0098(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            WeaponDrop;                                              // 0x00A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            BoltClose;                                               // 0x00A8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            BoltCloseQuick;                                          // 0x00B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            BoltOpen;                                                // 0x00B8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            BoltOpenQuick;                                           // 0x00C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            OnADSSound;                                              // 0x00C8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            OnEndADSSound;                                           // 0x00D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            NightvisionOn;                                           // 0x00D8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            NightvisionOff;                                          // 0x00E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            Holster;                                                 // 0x00E8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            Draw;                                                    // 0x00F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            DrawFirst;                                               // 0x00F8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            SelectSemi;                                              // 0x0100(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            SelectBurst;                                             // 0x0108(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            SelectAuto;                                              // 0x0110(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            SelectSafe;                                              // 0x0118(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FWeaponSoundData                                      Firing_Inside;                                           // 0x0120(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponSoundData                                      Firing_Outside;                                          // 0x0140(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class UFMODEvent*                                            DryFire;                                                 // 0x0160(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            FireLast;                                                // 0x0168(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bPlayBulletWhizz;                                        // 0x0170(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x0171(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            BulletWhizzFar;                                          // 0x0178(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            HitMarker;                                               // 0x0180(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            HeadshotMarker;                                          // 0x0188(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            KillMarker;                                              // 0x0190(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            PhysicsImpact;                                           // 0x0198(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            PlayerImpact;                                            // 0x01A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        PhysicsImpactMinimumVelocity;                            // 0x01A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x01AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            MovementLayer;                                           // 0x01B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavArea_SuspectD
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavArea_SuspectD : public UNavArea
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavArea_CivilianD
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavArea_CivilianD : public UNavArea
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavArea_Player
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavArea_Player : public UNavArea
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavArea_SuspectE
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavArea_SuspectE : public UNavArea
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ScoringInterface
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IScoringInterface : public IInterface
	{
	public:
		class UScoringComponent* GetScoringComponent();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReplayCameraPawn
	 * Size -> 0x0AF8 (FullSize[0x0DA0] - InheritedSize[0x02A8])
	 */
	class AReplayCameraPawn : public ASpectatorPawn
	{
	public:
		class UCameraComponent*                                      PawnCamera;                                              // 0x02A8(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPostProcessSettings                                  PostProcessSettings;                                     // 0x02B0(0x0560) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FPostProcessSettings                                  DefaultPostProcessSettings;                              // 0x0810(0x0560) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		float                                                        Sensitivity;                                             // 0x0D70(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x0D74(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReplaySplineActor*                                    ReplaySplineActor;                                       // 0x0D78(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TotalSplineTime;                                         // 0x0D80(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsFollowingSpline;                                      // 0x0D84(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x0D85(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        DeltaSplineTime;                                         // 0x0D88(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bForceCameraRotation;                                    // 0x0D8C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x13];                                  // 0x0D8D(0x0013) MISSED OFFSET (PADDING)

	public:
		void StopFollowingSpline();
		void RemoveSplinePoint(int32_t Index);
		TArray<struct FSplinePoint> GetSplinePoints();
		TArray<class FName> GetBonesFromAttachableAction(class AActor* Actor);
		TArray<class AActor*> GetAttachableActors();
		void ClearSplinePoints();
		void BeginFollowingSpline();
		void AddSplinePoint(const struct FVector& Location, const struct FRotator& Rotation);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavArea_LockedDoor
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavArea_LockedDoor : public UNavArea
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ScoringManager
	 * Size -> 0x0050 (FullSize[0x0270] - InheritedSize[0x0220])
	 */
	class AScoringManager : public AInfo
	{
	public:
		unsigned char                                                UnknownData_0000[0x18];                                  // 0x0220(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      TotalScorePool;                                          // 0x0238(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0xC];                                   // 0x023C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FScoreGroup>                                   ObjectiveScoreGroups;                                    // 0x0248(0x0010) Net, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		TArray<struct FScorePenaltyData>                             PenaltyScoreGroups;                                      // 0x0258(0x0010) Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x0268(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bIsOfficialScoring;                                      // 0x026C(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x3];                                   // 0x026D(0x0003) MISSED OFFSET (PADDING)

	public:
		void TakeScores(class UScoringComponent* InScoringComponent, TArray<class FString> ScoreNames, const class FString& TakeReason, bool bDisplayScoreOnHUD, bool bDisableScores);
		void TakeScore(class UScoringComponent* InScoringComponent, const class FString& ScoreName, const class FString& TakeReason, bool bDisplayScoreOnHUD, bool bDisableScore);
		void TakeAllScoresExcept(class UScoringComponent* InScoringComponent, TArray<class FString> ScoreNames, const class FString& TakeReason, bool bDisplayScoreOnHUD, bool bDisableScores);
		void TakeAllScores(class UScoringComponent* InScoringComponent, const class FString& TakeReason, bool bDisplayScoreOnHUD, bool bDisableScores);
		void RevokePenalty(class UScoringComponent* InScoringComponent, const class FString& PenaltyGroupName);
		void RevokeAllPenalties(class UScoringComponent* InScoringComponent);
		void Multicast_DisplayScore(const class FText& ScoreText, int32_t Score, bool bGive);
		bool IsOfficialScoring();
		void HasClearedMission(bool* bHasClearedMission, bool* bSoftClearedMission, bool* bMissionFailed);
		void GiveScores(class UScoringComponent* InScoringComponent, TArray<class FString> ScoreNames, bool bDisplayScoreOnHUD, const class FString& ScoreText, float DisplayOnHUDDelay, int32_t CustomScoreOnHUD);
		void GiveScore(class UScoringComponent* InScoringComponent, const class FString& ScoreName, bool bDisplayScoreOnHUD, const class FString& ScoreText, float DisplayOnHUDDelay, int32_t CustomScoreOnHUD);
		void GivePenalty(class UScoringComponent* InScoringComponent, const class FString& PenaltyGroupName, bool bDisplayScoreOnHUD, const class FString& ScoreText, float DisplayOnHUDDelay, int32_t CustomScoreOnHUD);
		void GiveFakeScore(class UScoringComponent* InScoringComponent, const class FString& ScoreName, bool bDisplayScoreOnHUD, const class FString& ScoreText, float DisplayOnHUDDelay, int32_t CustomScoreOnHUD);
		void GiveCustomPenalty(const class FString& PenaltyGroupName, int32_t PenaltyScore, bool bDisplayScoreOnHUD, float DisplayOnHUDDelay);
		void GiveAllScores(class UScoringComponent* InScoringComponent, bool bOnlyEnabledScore, bool bDisplayScoreOnHUD, const class FString& ScoreText, float DisplayOnHUDDelay, int32_t CustomScoreOnHUD);
		void GetTotalScorePool(int32_t* MaxScore);
		int32_t GetTotalScoreFromArray(TArray<struct FScoreData> InScoreDataArray);
		int32_t GetTotalScoreCountFromArray(TArray<struct FScoreData> InScoreDataArray, bool bIncludeHiddenScores);
		void GetTotalScore(int32_t* TotalScore, bool bIncludePrimaryScores);
		int32_t GetTotalNonGivenScoresFromArray(TArray<struct FScoreData> InScoreDataArray);
		int32_t GetTotalGivenScoresFromArray(TArray<struct FScoreData> InScoreDataArray, bool bIncludeHiddenScores);
		int32_t GetTotalActorsTrackingScore();
		void GetSuspectCount(int32_t* OutReported, int32_t* OutArrested, int32_t* OutKilled, int32_t* OutTotal);
		TArray<struct FScoreGroup> GetScoreGroups();
		void GetScoreCountFromGroup(const class FString& InGroupName, int32_t* OutScoresGiven, int32_t* OutTotalScores, bool bRequiredOnly);
		void GetReportCount(int32_t* ReportedCount, int32_t* TotalReports);
		TArray<struct FScorePenaltyData> GetPenaltyScoreGroups();
		void GetObjectiveCompletionStatus(int32_t* ObjectivesComplete, int32_t* ObjectivesFailed, int32_t* TotalObjectives);
		int32_t GetNonGivenScoreCountFromGroup(TArray<struct FScoreGroup> InScoreGroupArray);
		int32_t GetNonGivenScoreCountFromArray(TArray<struct FScoreData> InScoreDataArray, bool bOnlyEnabled);
		int32_t GetGivenScoreCountFromGroup(TArray<struct FScoreGroup> InScoreGroupArray);
		int32_t GetGivenScoreCountFromArray(TArray<struct FScoreData> InScoreDataArray, bool bIncludeHiddenScores);
		void GetEvidenceCount(int32_t* EvidenceCollected, int32_t* TotalEvidence);
		float GetCurrentScoreAsPercentage();
		void GetCivilianCount(int32_t* OutReported, int32_t* OutInjured, int32_t* OutKilled, int32_t* OutArrested, int32_t* OutTotal);
		class AScoringManager* Get();
		void DisplayPenalties(class UScoringComponent* InScoringComponent, bool bCondensed, const class FString& ScoreTextOverride);
		void DisplayBonusesAndPenalties(class UScoringComponent* InScoringComponent, bool bCondensed, const class FString& ScoreTextOverride);
		void DisplayBonuses(class UScoringComponent* InScoringComponent, bool bCondensed, const class FString& ScoreTextOverride);
		void ChangeScoreGroup(class UScoringComponent* InScoringComponent, const class FString& NewGroupName);
		class FString CalculateGradeLetterFromScore(int32_t Score);
		class FString CalculateGradeLetterFromPlayerScore();
		class FString CalculateGradeLetterFromPercentage(float ScorePercentage);
		bool AnyScoresGiven(TArray<struct FScoreBonus> InScoreBonusArray);
		bool AllScoresGiven(TArray<struct FScoreBonus> InScoreBonusArray);
		bool AllRequiredScoresGiven(TArray<struct FScoreBonus> InScoreBonusArray);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SquadReadyStatus
	 * Size -> 0x0000 (FullSize[0x0260] - InheritedSize[0x0260])
	 */
	class USquadReadyStatus : public UUserWidget
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReplayController
	 * Size -> 0x0028 (FullSize[0x09A0] - InheritedSize[0x0978])
	 */
	class AReplayController : public AReadyOrNotPlayerController
	{
	public:
		class AReplayCameraPawn*                                     ReplayCameraPawn;                                        // 0x0978(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUserWidget*                                           ReplayControls;                                          // 0x0980(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0988(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UUserWidget*                                           EscapeWidgetInstance;                                    // 0x0990(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x0998(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetViewOverride();
		void SetCurrentReplayTimeToSeconds(int32_t Seconds);
		void SetCurrentReplayPlayRate(float PlayRate);
		bool SetCurrentReplayPausedState(bool bDoPause);
		float GetCurrentReplayTotalTimeInSeconds();
		float GetCurrentReplayCurrentTimeInSeconds();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SpectatePawn
	 * Size -> 0x0068 (FullSize[0x0310] - InheritedSize[0x02A8])
	 */
	class ASpectatePawn : public ASpectatorPawn
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x02A8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bDeadSpectatePawn;                                       // 0x02B0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x1];                                   // 0x02B1(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bBlendWithViewTarget;                                    // 0x02B2(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bPendingCenterprint;                                     // 0x02B3(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        PendingCenterprintDuration;                              // 0x02B4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  PendingCenterprintType;                                  // 0x02B8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APlayerCharacter*                                      PendingCenterprintOther;                                 // 0x02C0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial*                                             HeadcamMaterial;                                         // 0x02C8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                              HeadcamMaterialInstance;                                 // 0x02D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUserWidget*                                           SpectateWidget;                                          // 0x02D8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USpectatorCharacterHUD*                                SpectatorHUD;                                            // 0x02E0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShouldShowViewTargetHUD;                                // 0x02E8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x7];                                   // 0x02E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                                CurrentViewTarget;                                       // 0x02F0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      PotentialViewTargetCount;                                // 0x02F8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHideWidgets;                                            // 0x02FC(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x3];                                   // 0x02FD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerCharacter*                                      Killer;                                                  // 0x0300(0x0008) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APlayerCharacter*                                      KilledCharacter;                                         // 0x0308(0x0008) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void SpectatePreviousPlayer();
		void SpectateNextPlayer();
		void SetViewTarget(class APlayerCharacter* InCharacter);
		void SetSpectatorCharacterWidget(class USpectatorCharacterHUD* NewHud);
		void OnTeamChatPressed();
		void OnChatPressed();
		ETeamType GetTeam();
		void EscapeMenu();
		void CleanUpOldPlayer();
		void CenterPrint(const class FName& Type, float Duration, class APlayerCharacter* Other);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ScoringComponent
	 * Size -> 0x00A0 (FullSize[0x0150] - InheritedSize[0x00B0])
	 */
	class UScoringComponent : public UActorComponent
	{
	public:
		bool                                                         bEnabled : 1;                                            // 0x00B0(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x00B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FScoreData                                            ScoringData;                                             // 0x00B8(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                   ScoreGroup;                                              // 0x00E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		class FString                                                ScoreGroupName;                                          // 0x00F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EObjectiveLevel                                              ObjectiveLevel;                                          // 0x0108(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAutoAddToScorePool : 1;                                 // 0x0109(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x3E];                                  // 0x010A(0x003E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDataTable*                                            ScoreGroupDataTable;                                     // 0x0148(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		int32_t GetTotalScore(bool bOnlyEnabled, bool bOnlyGiven);
		int32_t GetScore(const class FString& ScoreName);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavArea_ClosedDoor
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavArea_ClosedDoor : public UNavArea
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotNavigationSystem
	 * Size -> 0x0000 (FullSize[0x15E0] - InheritedSize[0x15E0])
	 */
	class UReadyOrNotNavigationSystem : public UNavigationSystemV1
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SingleplayerGS
	 * Size -> 0x0000 (FullSize[0x0AD0] - InheritedSize[0x0AD0])
	 */
	class ASingleplayerGS : public ACoopGS
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TeamActivityProxy
	 * Size -> 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
	 */
	class UTeamActivityProxy : public UBaseActivityProxy
	{
	public:
		ETeamType                                                    CommandTeam;                                             // 0x0038(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                  CommandLocation;                                         // 0x003C(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x10];                                  // 0x0048(0x0010) MISSED OFFSET (PADDING)

	public:
		bool HasTeamReachedLocation(float Tolerance);
		bool HasSquadPositionReachedLocation(ESquadPosition InSquadPosition, float Tolerance);
		bool HasSquadPositionReachedDestination(ESquadPosition InSquadPosition);
		bool HasAnySquadSquadPositionGotLocation(class UTeamBaseActivity* RequestingActivity, const struct FVector& InTestLocation, float Tolerance);
		float GetDistanceToDestinationForSquadPosition(ESquadPosition InSquadPosition);
		float GetDistanceToCommandLocationForSquadPosition(ESquadPosition InSquadPosition);
		struct FVector GetDestinationLocationAtSquadPosition(ESquadPosition InSquadPosition);
		class ACyberneticCharacter* GetCharacterClosestToLocation(const struct FVector& InTestLocation);
		class ACyberneticCharacter* GetCharacterAtSquadPosition(ESquadPosition InSquadPosition);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotReplicationDriver
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UReadyOrNotReplicationDriver : public UReplicationDriver
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavArea_TrappedDoor
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavArea_TrappedDoor : public UNavArea
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SkinComponent
	 * Size -> 0x01B8 (FullSize[0x0268] - InheritedSize[0x00B0])
	 */
	class USkinComponent : public UActorComponent
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x00B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                  Name;                                                    // 0x00B8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                  Description;                                             // 0x00D0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TSoftObjectPtr<class UTexture2D>                             Icon;                                                    // 0x00E8(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x010C(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		bool                                                         bRequiresDLC;                                            // 0x0110(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDLC                                                         Dlc;                                                     // 0x0111(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bResetsToFactorySkin;                                    // 0x0112(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETeamType                                                    LockedToTeam;                                            // 0x0113(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x0114(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                        LockedToBlueprint;                                       // 0x0118(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		TMap<class USkeletalMesh*, class USkeletalMesh*>             SkeletalMeshSkinMap;                                     // 0x0128(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<class USkeletalMeshComponent*, class USkeletalMesh*>    PreAppliedSkeletalMeshMap;                               // 0x0178(0x0050) ContainsInstancedReference, NativeAccessSpecifierPublic
		TMap<class UStaticMesh*, class UStaticMesh*>                 StaticMeshSkinMap;                                       // 0x01C8(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<class UStaticMeshComponent*, class UStaticMesh*>        PreAppliedStaticMeshMap;                                 // 0x0218(0x0050) ContainsInstancedReference, NativeAccessSpecifierPublic

	public:
		void ResetSkin();
		bool IsFactorySkin();
		bool HasDLCUnlocked();
		class UTexture2D* GetClassDefaultIcon(class USkinComponent* SkinComponent);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotSignificanceManager
	 * Size -> 0x0208 (FullSize[0x0428] - InheritedSize[0x0220])
	 */
	class AReadyOrNotSignificanceManager : public AInfo
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                        ActorsMadeIrrelevantThisFrame;                           // 0x0230(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<class AActor*>                                        ActorsMadeRelevantThisFrame;                             // 0x0240(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<class AActor*>                                        ActorsMadeIrrelevant;                                    // 0x0250(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x0260(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                        ActorsRelevantToSignificance;                            // 0x0268(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<class AReadyOrNotCharacter*>                          CharactersRelevantToSignificance;                        // 0x0278(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TMap<class USkeletalMeshComponent*, class USkeletalMesh*>    SkeletalMeshLookupMap;                                   // 0x0288(0x0050) ContainsInstancedReference, NativeAccessSpecifierPrivate
		TMap<class USceneComponent*, struct FOptimizationAttachmentData> SceneCompAttachmentData;                                 // 0x02D8(0x0050) ContainsInstancedReference, NativeAccessSpecifierPrivate
		TMap<class UStaticMeshComponent*, class UStaticMesh*>        StaticMeshLookupMap;                                     // 0x0328(0x0050) ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<class AReadyOrNotCharacter*>                          IrrelevantPlayerCharacters;                              // 0x0378(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0002[0x70];                                  // 0x0388(0x0070) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct PCoreUObject_FTransform>                       RelevantViewpoints;                                      // 0x03F8(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<class AActor*>                                        PlayerViewTargets;                                       // 0x0408(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0003[0x10];                                  // 0x0418(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ScriptedLevelEvents
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UScriptedLevelEvents : public UBlueprintFunctionLibrary
	{
	public:
		void ScriptedStopAimingAtEvent(class ACyberneticController* Controller);
		class UBaseActivity* ScriptedShootAtEvent(class ACyberneticController* Controller, class APlayerCharacter* ForcedShootAtTarget);
		class UBaseActivity* ScriptedAimAtEvent(class ACyberneticController* Controller, class APlayerCharacter* ForcedLookAtTarget);
		void GiveWorldBuildingActivityByTag(class ACyberneticController* Controller, const class FName& Tag, float TimeDoingActivity);
		class APlayerCharacter* GetPlayerCharacterByTag(const class FName& Tag);
		class ACyberneticController* GetCyberneticsControllerByTag(const class FName& Tag);
		class ACyberneticCharacter* GetCyberneticsCharacterByTag(const class FName& Tag);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavQuery_DoorTest
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavQuery_DoorTest : public UNavigationQueryFilter
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SpinTestHeatmapVolume
	 * Size -> 0x0000 (FullSize[0x0258] - InheritedSize[0x0258])
	 */
	class ASpinTestHeatmapVolume : public AVolume
	{
	public:
		void VisualizeHeatMapIfExists();
		void FlushVisualization();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavQuery_Swat
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavQuery_Swat : public UNavigationQueryFilter
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SearchAndDestroyGM
	 * Size -> 0x0010 (FullSize[0x07C0] - InheritedSize[0x07B0])
	 */
	class ASearchAndDestroyGM : public AReadyOrNotGameMode_PVP
	{
	public:
		bool                                                         bBombPlanted;                                            // 0x07B0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x07B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      NumRedSpawned;                                           // 0x07B4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      NumBlueSpawned;                                          // 0x07B8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x07BC(0x0004) MISSED OFFSET (PADDING)

	public:
		int32_t GetNumberOfActivePlayersOnTeam(ETeamType Team);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavQuery_Civilian
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavQuery_Civilian : public UNavigationQueryFilter
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.StaticReportable
	 * Size -> 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
	 */
	class AStaticReportable : public AActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                DesiredTocReport;                                        // 0x0228(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bReportedToToc;                                          // 0x0238(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x0239(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.DoorSound
	 * Size -> 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
	 */
	class UDoorSound : public UDataAsset
	{
	public:
		class UFMODEvent*                                            DoorClosed;                                              // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            DoorOpened;                                              // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            DoorStartManipulation;                                   // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            DoorStopManipulation;                                    // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            BrokenByC2;                                              // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            BrokenByRam;                                             // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            BrokenByShotgun;                                         // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            KickedDown;                                              // 0x0068(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            KickedDownFailed;                                        // 0x0070(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            KickedDownBreak;                                         // 0x0078(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SteamworksIntegration
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class USteamworksIntegration : public UObject
	{
	public:
		bool IsDLCInstalledEnum(EDLC Dlc);
		bool IsDLCInstalled(int32_t AppId);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SplineTrigger
	 * Size -> 0x0048 (FullSize[0x0268] - InheritedSize[0x0220])
	 */
	class ASplineTrigger : public AActor
	{
	public:
		class UMulticastInlineDelegate                               Delegate_OnSplineEnclosureEntered;                       // 0x0220(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xF];                                   // 0x0221(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               Delegate_OnSplineEnclosureExited;                        // 0x0230(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xF];                                   // 0x0231(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		bool                                                         bEnabled : 1;                                            // 0x0240(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bDrawDebugElements : 1;                                  // 0x0240(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x3];                                   // 0x0241(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                  AverageSplinePointLocation;                              // 0x0244(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bIsOutsideSplineEnclosure : 1;                           // 0x0250(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0003[0x7];                                   // 0x0251(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USplineComponent*                                      SplineComponent;                                         // 0x0258(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0004[0x8];                                   // 0x0260(0x0008) MISSED OFFSET (PADDING)

	public:
		void ToggleDrawDebug();
		void OnSplineEnclosureExited__DelegateSignature(class APlayerCharacter* PlayerCharacter);
		void OnSplineEnclosureExited(class APlayerCharacter* PlayerCharacter);
		void OnSplineEnclosureEntered__DelegateSignature(class APlayerCharacter* PlayerCharacter);
		void OnSplineEnclosureEntered(class APlayerCharacter* PlayerCharacter);
		bool IsOutsideSplineEnclosure();
		bool IsInsideSplineEnclosure();
		bool IsActorOutsideSplineEnclosure(class AActor* InActor);
		bool IsActorInsideSplineEnclosure(class AActor* InActor);
		void EnableTrigger();
		void DisableTrigger();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.RoNWeaponAnimInstance
	 * Size -> 0x0018 (FullSize[0x02D0] - InheritedSize[0x02B8])
	 */
	class URoNWeaponAnimInstance : public UAnimInstance
	{
	public:
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x02B8(0x0004) Fix Super Size
		struct FRotator                                 OptiwandBoneModify;                                      // 0x02BC(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x02C8(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnSpeedReloadMagazineEjected();
		void OnDisassembleMagazineEjected();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.StackUpActivityProxy
	 * Size -> 0x0018 (FullSize[0x0070] - InheritedSize[0x0058])
	 */
	class UStackUpActivityProxy : public UTeamActivityProxy
	{
	public:
		class ADoor*                                                 StackUpDoor;                                             // 0x0058(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AStackUpActor*                                         StackUpActor;                                            // 0x0060(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0068(0x0008) MISSED OFFSET (PADDING)

	public:
		class ACyberneticCharacter* FindDoorChecker();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SearchAndDestroyGS
	 * Size -> 0x0010 (FullSize[0x09E8] - InheritedSize[0x09D8])
	 */
	class ASearchAndDestroyGS : public AReadyOrNotGameState
	{
	public:
		float                                                        BombCountActive;                                         // 0x09D8(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bBombPlanted;                                            // 0x09DC(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bBombDetonate;                                           // 0x09DD(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bBombDefused;                                            // 0x09DE(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x1];                                   // 0x09DF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerCharacter*                                      bHasBomb;                                                // 0x09E0(0x0008) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotSpinTestController
	 * Size -> 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
	 */
	class UReadyOrNotSpinTestController : public UGauntletTestController
	{
	public:
		unsigned char                                                UnknownData_0000[0x40];                                  // 0x0030(0x0040) MISSED OFFSET (PADDING)

	public:
		void StopProfiling();
		void StartTesting();
		void On60FPSTick();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.RosterScenarioSpawner
	 * Size -> 0x00F8 (FullSize[0x0318] - InheritedSize[0x0220])
	 */
	class ARosterScenarioSpawner : public AInfo
	{
	public:
		TMap<class FName, struct FDataTableRowHandle>                ObjectiveSpawns;                                         // 0x0220(0x0050) Edit, EditConst, NativeAccessSpecifierPrivate
		TArray<struct FObjectiveSpawn>                               Objectives;                                              // 0x0270(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<class AWeaponCacheActor*>                             WeaponCacheActors;                                       // 0x0280(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<class ABaseMagazineWeapon*>                           PossibleWeapons;                                         // 0x0290(0x0010) Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate
		float                                                        MaxPatrolRadiusDistance;                                 // 0x02A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                        TimeBetweenTargetingCivilians;                           // 0x02A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                        TimeUntilBombExplodes;                                   // 0x02A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                  SuspectExplosiveVestRowName;                             // 0x02AC(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                  CivilianExplosiveVestRowName;                            // 0x02B4(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x14];                                  // 0x02BC(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bSpawnMaxSuspects;                                       // 0x02D0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x02D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AAISpawn*>                                      ConfiguredSpawns;                                        // 0x02D8(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0002[0x20];                                  // 0x02E8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class APatrolPoint*>                                  UsedPatrolPoints;                                        // 0x0308(0x0010) ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ShellRackShellComponent
	 * Size -> 0x0010 (FullSize[0x04F0] - InheritedSize[0x04E0])
	 */
	class UShellRackShellComponent : public UStaticMeshComponent
	{
	public:
		int32_t                                                      ShellNumber;                                             // 0x04E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xC];                                   // 0x04E4(0x000C) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SplineTrigger_Incrimination
	 * Size -> 0x0000 (FullSize[0x0268] - InheritedSize[0x0268])
	 */
	class ASplineTrigger_Incrimination : public ASplineTrigger
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.RoundEndWidget_PVP
	 * Size -> 0x0008 (FullSize[0x0280] - InheritedSize[0x0278])
	 */
	class URoundEndWidget_PVP : public UBaseWidget
	{
	public:
		class UWidgetAnimation*                                      Anim_FadeIn;                                             // 0x0278(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void OnGameModeRoundEnded();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ShotDetectionVolume
	 * Size -> 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
	 */
	class AShotDetectionVolume : public AActor
	{
	public:
		class UBoxComponent*                                         Bounds;                                                  // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void OnShotFired(class ABaseWeapon* FiringWeapon, class APlayerCharacter* FiringPlayer);
		void OnGrenadeDetonated(const struct FHitResult& Hit, class ABaseGrenade* TriggeringGrenade, class AReadyOrNotCharacter* OwningPlayer);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.StingerDamageType
	 * Size -> 0x0000 (FullSize[0x0620] - InheritedSize[0x0620])
	 */
	class UStingerDamageType : public UStunDamage
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SlomoBarWidget
	 * Size -> 0x0040 (FullSize[0x02B8] - InheritedSize[0x0278])
	 */
	class USlomoBarWidget : public UBaseWidget
	{
	public:
		class UMulticastInlineDelegate                               OnProgressBarStarted;                                    // 0x0278(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xF];                                   // 0x0279(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnProgressBarFinished;                                   // 0x0288(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xF];                                   // 0x0289(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UWidgetAnimation*                                      AnimIn;                                                  // 0x0298(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetAnimation*                                      AnimOut;                                                 // 0x02A0(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetAnimation*                                      ProgressBar;                                             // 0x02A8(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        Duration;                                                // 0x02B0(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x02B4(0x0004) MISSED OFFSET (PADDING)

	public:
		void SetDuration(float NewDuration);
		void ProgressBarFinished();
		float GetDuration();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SingleplayerGM
	 * Size -> 0x0000 (FullSize[0x0AB0] - InheritedSize[0x0AB0])
	 */
	class ASingleplayerGM : public ACoopGM
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ScenarioCoverActivator
	 * Size -> 0x0008 (FullSize[0x0260] - InheritedSize[0x0258])
	 */
	class AScenarioCoverActivator : public AVolume
	{
	public:
		class AScenarioGenerator*                                    ScenarioGenerator;                                       // 0x0258(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotStatics
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UReadyOrNotStatics : public UBlueprintFunctionLibrary
	{
	public:
		class AReadyOrNotSignificanceManager* GetReadyOrNotSignificanceManager();
		class AReadyOrNotPlayerController* GetReadyOrNotPlayerController();
		class AReadyOrNotLevelScript* GetReadyOrNotLevelScript();
		class AReadyOrNotGameState* GetReadyOrNotGameState();
		class AReadyOrNotGameMode* GetReadyOrNotGameMode();
		class UReadyOrNotGameInstance* GetReadyOrNotGameInstance();
		class AConversationManager* GetConversationManager();
		bool DoesMapExist(const class FString& Map);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ArmourMaterial
	 * Size -> 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
	 */
	class UArmourMaterial : public UDataAsset
	{
	public:
		float                                                        DamageReduction;                                         // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MinDamageReduction;                                      // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDurabilityEnabled;                                      // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        Durability;                                              // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                     ArmourLevel;                                             // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SpallingChance;                                          // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MovementSpeedModifier;                                   // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MovementAccelerationModifier;                            // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                       HitParticle;                                             // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                  DisplayName;                                             // 0x0058(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                  Description;                                             // 0x0070(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TSoftObjectPtr<class UTexture2D>                             LoadoutIcon;                                             // 0x0088(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x00AC(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.StrideWarpingLibrary
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UStrideWarpingLibrary : public UBlueprintFunctionLibrary
	{
	public:
		void UpdateStrideWarping(float DeltaTime, const struct FVector& Velocity, float VelocityInterpTime, float CurrentAnimationSpeed, float PlayrateMaxAdjustment, float* StrideScaling, float* PlayRate, struct FVector* VelocitySmoothed);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ScenarioGenerator
	 * Size -> 0x00B0 (FullSize[0x0308] - InheritedSize[0x0258])
	 */
	class AScenarioGenerator : public AVolume
	{
	public:
		TMap<class FString, struct FScenarioDataArray>               ScenarioMap;                                             // 0x0258(0x0050) Edit, EditConst, Protected, NativeAccessSpecifierProtected
		class FString                                                ScenarioName;                                            // 0x02A8(0x0010) Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bSpawnWhenEntered;                                       // 0x02B8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x02B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AScenarioCoverActivator*                               CurrentScenarioCoverActivator;                           // 0x02C0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EScenarioImportance                                          ScenarioImportance;                                      // 0x02C8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x02C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AThreatAwarenessActor*>                         ScenarioThreats;                                         // 0x02D0(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x8];                                   // 0x02E0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AScenarioCoverActivator*>                       ScenarioCoverActivators;                                 // 0x02E8(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class ACyberneticCharacter*>                          SpawnedCharacters;                                       // 0x02F8(0x0010) ZeroConstructor, NativeAccessSpecifierPublic

	public:
		void SaveScenario();
		void LoadScenario();
		class FString LoadRandomScenario();
		void GetLoadedScenarioList(TArray<class FString>* OutScenarios);
		void DeleteScenario();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SWATArmour
	 * Size -> 0x0048 (FullSize[0x0980] - InheritedSize[0x0938])
	 */
	class ASWATArmour : public ABaseArmour
	{
	public:
		unsigned char                                                UnknownData_0002[0x8];                                   // 0x0938(0x0008) Fix Super Size
		class UArmourMaterial*                                       CarrierMaterial;                                         // 0x0940(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      TotalSlots;                                              // 0x0948(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      DefaultPrimaryAmmoSlots;                                 // 0x094C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      DefaultSecondaryAmmoSlots;                               // 0x0950(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      DefaultGrenadeSlots;                                     // 0x0954(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      DefaultTacticalDeviceSlots;                              // 0x0958(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EArmourCoverage                                              ArmourCoverage;                                          // 0x095C(0x0001) Edit, Net, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x095D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UArmourMaterial*                                       ArmourMaterial;                                          // 0x0960(0x0008) Edit, Net, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<float>                                                Durabilities;                                            // 0x0968(0x0010) Net, ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x0978(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SwatCommandWidget
	 * Size -> 0x02D8 (FullSize[0x0538] - InheritedSize[0x0260])
	 */
	class USwatCommandWidget : public UUserWidget
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x0260(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      LastSubCommandPageIndex;                                 // 0x0270(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x0274(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSwatCommand>                                  ActiveCommandPage;                                       // 0x0278(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<struct FSwatCommand>                                  PreviousActiveCommandPage;                               // 0x0288(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<struct FKey>                                          CommandCombo;                                            // 0x0298(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		ETeamType                                                    ActiveTeamType;                                          // 0x02A8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ETeamType                                                    ExecutionTeamType;                                       // 0x02A9(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ESwatCommand                                                 DefaultCommand;                                          // 0x02AA(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ESwatCommand                                                 DefaultDoorOpenCommand;                                  // 0x02AB(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ESwatCommand                                                 DefaultDoorUnknownCommand;                               // 0x02AC(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ESwatCommand                                                 DefaultCheckDoorCommand;                                 // 0x02AD(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ESwatCommand                                                 DefaultDoorLockedCommand;                                // 0x02AE(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ESwatCommand                                                 DefaultDoorUnlockedCommand;                              // 0x02AF(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x88];                                  // 0x02B0(0x0088) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASWATManager*                                          SWATManager;                                             // 0x0338(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FHitResult                                            ContextualData;                                          // 0x0340(0x0088) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		struct FHitResult                                            LastExecutedCommandContextualData;                       // 0x03C8(0x0088) IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		class UFMODEvent*                                            OpenMenuEvent;                                           // 0x0450(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODEvent*                                            OpenSubCommandMenuEvent;                                 // 0x0458(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODEvent*                                            ExecuteCommandEvent;                                     // 0x0460(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ABaseGrenade*                                          Flashbang;                                               // 0x0468(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ABaseGrenade*                                          Stinger;                                                 // 0x0470(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ABaseGrenade*                                          CSGas;                                                   // 0x0478(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0003[0x8];                                   // 0x0480(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bHoldingQueueCommandKey : 1;                             // 0x0488(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0004[0xAF];                                  // 0x0489(0x00AF) MISSED OFFSET (PADDING)

	public:
		void RespondToSWATCommand(const struct FSwatCommand& Command, ETeamType TeamType, const struct FHitResult& CommandContextualData);
		void OnSwatCommandIssued__DelegateSignature(ESwatCommand SwatCommand, ETeamType TeamType);
		void OnPostUpdateSwatCommands__DelegateSignature(class USwatCommandWidget* Widget, TArray<struct FSwatCommand>* SwatCommands);
		void OnPageViewUpdate();
		bool HasQueuedCommandForTeam(ETeamType TeamType);
		bool HasQueuedCommandForActiveTeam();
		bool GetSubCommands(const struct FSwatCommand& Command, TArray<struct FSwatCommand>* OutSubCommands);
		struct FKey GetInputTwo();
		struct FKey GetInputThree();
		struct FKey GetInputSix();
		struct FKey GetInputSeven();
		struct FKey GetInputOne();
		struct FKey GetInputNine();
		struct FKey GetInputFour();
		struct FKey GetInputFive();
		struct FKey GetInputEight();
		struct FKey GetInputBack();
		void DoCommand(const struct FSwatCommand& Command, bool bFromQueue, ETeamType ActiveTeamOverride, const struct FHitResult& ContextualDataOverride, bool bOverrideContextualData);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ScopedWeaponAttachment
	 * Size -> 0x05F8 (FullSize[0x15F0] - InheritedSize[0x0FF8])
	 */
	class UScopedWeaponAttachment : public UWeaponAttachment
	{
	public:
		TArray<struct FScopeModifications>                           ScopeMods;                                               // 0x0FF8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                        ZoomFOVAddition;                                         // 0x1008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ZoomInSpeed;                                             // 0x100C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ZoomOutSpeed;                                            // 0x1010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSupportsCowitness;                                      // 0x1014(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bUseScopeEffect;                                         // 0x1015(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x2];                                   // 0x1016(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TSoftObjectPtr<class UTexture2D>                             ScopeReticle;                                            // 0x1018(0x0024) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x103C(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		bool                                                         bUsePipRendering;                                        // 0x1040(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESceneCaptureSource                                          CaptureSource;                                           // 0x1041(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bOverridePostProcessSettings;                            // 0x1042(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bNeedInventoryUpdate;                                    // 0x1043(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0xC];                                   // 0x1044(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPostProcessSettings                                  OverridePostProcessSettings;                             // 0x1050(0x0560) Edit, NativeAccessSpecifierPublic
		int32_t                                                      PipMaterialIdx;                                          // 0x15B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        PipFOV;                                                  // 0x15B4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        PlayerCameraFOVMultiplier;                               // 0x15B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x4];                                   // 0x15BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialInstanceDynamic*                              PipRenderDynamicMaterial;                                // 0x15C0(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneCaptureComponent2D*                              PipSceneCapture;                                         // 0x15C8(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTextureRenderTarget2D*                                PipRenderTarget;                                         // 0x15D0(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                PipResolution;                                           // 0x15D8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x10];                                  // 0x15E0(0x0010) MISSED OFFSET (PADDING)

	public:
		struct FScopeModifications GetScopeMods(class ABaseWeapon* Weapon);
		float GetMeshspaceOffsetVertical(class ABaseWeapon* Weapon);
		float GetMeshspaceOffsetHorizontal(class ABaseWeapon* Weapon);
		float GetMeshspaceOffsetDistance(class ABaseWeapon* Weapon);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReplayControls
	 * Size -> 0x0000 (FullSize[0x0260] - InheritedSize[0x0260])
	 */
	class UReplayControls : public UUserWidget
	{
	public:
		class AReadyOrNotCharacter* GetFollowCharacter(const class FString& InName);
		void GetAllFollowableCharacters(TArray<class FString>* OutNames);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SuppressionCombatMove
	 * Size -> 0x0010 (FullSize[0x0228] - InheritedSize[0x0218])
	 */
	class USuppressionCombatMove : public UBaseCombatMoveActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x0218(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SWATController
	 * Size -> 0x0000 (FullSize[0x0888] - InheritedSize[0x0888])
	 */
	class ASWATController : public ACyberneticController
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReplaySplineActor
	 * Size -> 0x0018 (FullSize[0x0238] - InheritedSize[0x0220])
	 */
	class AReplaySplineActor : public AActor
	{
	public:
		class USplineComponent*                                      SplineComponent;                                         // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FRotator>                         SplinePointRotations;                                    // 0x0228(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SwatAutomationManager
	 * Size -> 0x0038 (FullSize[0x0258] - InheritedSize[0x0220])
	 */
	class ASwatAutomationManager : public AInfo
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ADoor*>                                         Doors;                                                   // 0x0228(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class ADoor*>                                         BreachedDoors;                                           // 0x0238(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class ASWATManager*                                          SWATManager;                                             // 0x0248(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ADoor*                                                 CurrentDoor;                                             // 0x0250(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TacticalAuthorityCommandWidget
	 * Size -> 0x0020 (FullSize[0x0280] - InheritedSize[0x0260])
	 */
	class UTacticalAuthorityCommandWidget : public UUserWidget
	{
	public:
		ETacticalAuthorityVoice                                      SelectedVoiceLine;                                       // 0x0260(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0261(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                                ReportItem;                                              // 0x0268(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AActor*                                                CommandActor;                                            // 0x0270(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UStaticMesh*                                           CommandMoveToMesh;                                       // 0x0278(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void SetReportItem(class AActor* NewReportItem);
		void SetCommandActor(class AActor* NewCommandActor);
		void OnSecondaryUseReleased();
		void OnSecondaryUsePressed();
		void MapDeltaToTacticalAuthorityVoice(float DeltaX, float DeltaY);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SwatCrouchVolume
	 * Size -> 0x0050 (FullSize[0x02A8] - InheritedSize[0x0258])
	 */
	class ASwatCrouchVolume : public AVolume
	{
	public:
		TMap<class ASWATCharacter*, bool>                            CachedSwat;                                              // 0x0258(0x0050) NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SuspectCharacter
	 * Size -> 0x0010 (FullSize[0x1FD0] - InheritedSize[0x1FC0])
	 */
	class ASuspectCharacter : public ACyberneticCharacter
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x1FC0(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotVoiceConfig
	 * Size -> 0x00A0 (FullSize[0x00C8] - InheritedSize[0x0028])
	 */
	class UReadyOrNotVoiceConfig : public UGameplayConfig
	{
	public:
		TMap<class FString, struct FSequencedVOLookup>               SequencedLookup;                                         // 0x0028(0x0050) Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x50];                                  // 0x0078(0x0050) MISSED OFFSET (PADDING)

	public:
		class UReadyOrNotVoiceConfig* Get();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SWATCharacter
	 * Size -> 0x0090 (FullSize[0x2050] - InheritedSize[0x1FC0])
	 */
	class ASWATCharacter : public ACyberneticCharacter
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x1FC0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                                LastSetBestFocus;                                        // 0x1FC8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x40];                                  // 0x1FD0(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerCharacter*                                      SquadLeader;                                             // 0x2010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x28];                                  // 0x2018(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MaxGestureCooldownTime;                                  // 0x2040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MinGestureCooldownTime;                                  // 0x2044(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x8];                                   // 0x2048(0x0008) MISSED OFFSET (PADDING)

	public:
		void PlayOnShotDialogue(bool bIsFriendly);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SwatDuelingCombatMove
	 * Size -> 0x0028 (FullSize[0x0240] - InheritedSize[0x0218])
	 */
	class USwatDuelingCombatMove : public UBaseCombatMoveActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x20];                                  // 0x0218(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USwatDuelingCombatMove*                                LeaderCombatMove;                                        // 0x0238(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.StackUpActor
	 * Size -> 0x0038 (FullSize[0x0258] - InheritedSize[0x0220])
	 */
	class AStackUpActor : public AActor
	{
	public:
		class USceneComponent*                                       DefaultScene;                                            // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESquadPosition                                               StackUpPosition;                                         // 0x0228(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0229(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AThreatAwarenessActor*                                 BreachLookAtPoint;                                       // 0x0230(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AThreatAwarenessActor*                                 StackupLookAtPoint;                                      // 0x0238(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ADoor*                                                 LinkedDoor;                                              // 0x0240(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AStackUpActor*                                         OppositeStackUpActor;                                    // 0x0248(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x0250(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReadyOrNotWeaponAnimData
	 * Size -> 0x10F8 (FullSize[0x1128] - InheritedSize[0x0030])
	 */
	class UReadyOrNotWeaponAnimData : public UDataAsset
	{
	public:
		class UAnimSequenceBase*                                     IdlePose_FP;                                             // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Idle_FP;                                                 // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Run_FP;                                                  // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Walk_FP;                                                 // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Run_Limp_FP;                                             // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Walk_Limp_FP;                                            // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpaceBase*                                       Look_BS_FP;                                              // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Lowered_Up_Pose_FP;                                      // 0x0068(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Lowered_Down_Pose_FP;                                    // 0x0070(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     ADS_Run_FP;                                              // 0x0078(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     ADS_Walk_FP;                                             // 0x0080(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     ADS_Run_Limp_FP;                                         // 0x0088(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     ADS_Walk_Limp_FP;                                        // 0x0090(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     IdlePose_AFG_FP;                                         // 0x0098(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     IdlePose_VFG_FP;                                         // 0x00A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     IdlePose_HSTOP_FP;                                       // 0x00A8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     IdlePose_Low_TP;                                         // 0x00B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     IdlePose_Up_TP;                                          // 0x00B8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     IdlePose_Shld_TP;                                        // 0x00C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     IdlePose_Sights_TP;                                      // 0x00C8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     IdlePose_Ret_TP;                                         // 0x00D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     IdlePose_Ovr_TP;                                         // 0x00D8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Crouch_IdlePose_Low_TP;                                  // 0x00E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Crouch_IdlePose_Up_TP;                                   // 0x00E8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Crouch_IdlePose_Shld_TP;                                 // 0x00F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Crouch_IdlePose_Sights_TP;                               // 0x00F8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Crouch_IdlePose_Ret_TP;                                  // 0x0100(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Crouch_IdlePose_Ovr_TP;                                  // 0x0108(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Reload;                                                  // 0x0110(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           ReloadEmpty;                                             // 0x0130(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_Reload;                                           // 0x0150(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_ReloadEmpty;                                      // 0x0170(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Tactical_Reload;                                         // 0x0190(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Tactical_ReloadEmpty;                                    // 0x01B0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FWeaponAnim>                                   ShellRack_Reload;                                        // 0x01D0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FWeaponAnim>                                   ShellRack_ReloadEmpty;                                   // 0x01E0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FWeaponAnim>                                   ShellRack_ReloadRack;                                    // 0x01F0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Tactical_Crouch_Reload;                                  // 0x0200(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Tactical_Crouch_ReloadEmpty;                             // 0x0220(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           MeleeHit;                                                // 0x0240(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           MeleeMiss;                                               // 0x0260(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           FireSelect_Auto;                                         // 0x0280(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           FireSelect_Burst;                                        // 0x02A0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           FireSelect_Semi;                                         // 0x02C0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           FireSelect_Safe;                                         // 0x02E0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_FireSelect_Auto;                                  // 0x0300(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_FireSelect_Burst;                                 // 0x0320(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_FireSelect_Semi;                                  // 0x0340(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_FireSelect_Safe;                                  // 0x0360(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Reload_Start;                                            // 0x0380(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Reload_Loop;                                             // 0x03A0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Reload_End;                                              // 0x03C0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Reload_Start_Empty;                                      // 0x03E0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Reload_Loop_Empty;                                       // 0x0400(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Reload_End_Empty;                                        // 0x0420(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_Reload_Start;                                     // 0x0440(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_Reload_Loop;                                      // 0x0460(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_Reload_End;                                       // 0x0480(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_Reload_Start_Empty;                               // 0x04A0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_Reload_Loop_Empty;                                // 0x04C0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_Reload_End_Empty;                                 // 0x04E0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           MagazineCheck;                                           // 0x0500(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_MagazineCheck;                                    // 0x0520(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           MagazineCheckSights;                                     // 0x0540(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_MagazineCheckSights;                              // 0x0560(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FWeaponAnim>                                   FireSingle;                                              // 0x0580(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FWeaponAnim>                                   FireSingleSights;                                        // 0x0590(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           FireSingleLast;                                          // 0x05A0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           FireSingleSightsLast;                                    // 0x05C0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           DryFire;                                                 // 0x05E0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FWeaponAnim>                                   Crouch_FireSingle;                                       // 0x0600(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FWeaponAnim>                                   Crouch_FireSingleSights;                                 // 0x0610(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_FireSingleLast;                                   // 0x0620(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_FireSingleSightsLast;                             // 0x0640(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_Dryfire;                                          // 0x0660(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           FireLoop;                                                // 0x0680(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           FireLoopEnd;                                             // 0x06A0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           FireLoopSights;                                          // 0x06C0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           FireLoopSightsEnd;                                       // 0x06E0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_FireLoop;                                         // 0x0700(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_FireLoopEnd;                                      // 0x0720(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_FireLoopSights;                                   // 0x0740(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_FireLoopSightsEnd;                                // 0x0760(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Draw;                                                    // 0x0780(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           DrawFirst;                                               // 0x07A0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_Draw;                                             // 0x07C0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_DrawFirst;                                        // 0x07E0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Holster;                                                 // 0x0800(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_Holster;                                          // 0x0820(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           PullPin;                                                 // 0x0840(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Throw;                                                   // 0x0860(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           PullPinUnderarm;                                         // 0x0880(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           ThrowUnderarm;                                           // 0x08A0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_PullPin;                                          // 0x08C0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_Throw;                                            // 0x08E0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_PullPinUnderarm;                                  // 0x0900(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_ThrowUnderarm;                                    // 0x0920(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           QuickThrow_PinPull;                                      // 0x0940(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Quickthrow_Throw;                                        // 0x0960(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_QuickThrow_PinPull;                               // 0x0980(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_QuickThrow_Throw;                                 // 0x09A0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           QuickThrow_Fast;                                         // 0x09C0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_QuickThrow_Fast;                                  // 0x09E0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Multitool_Use;                                           // 0x0A00(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Multitool_Use_End;                                       // 0x0A20(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Multitool_Cutters_To_Lockpick;                           // 0x0A40(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Multitool_Cutters_To_Knife;                              // 0x0A60(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Multitool_Lockpick_To_Cutters;                           // 0x0A80(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Multitool_Lockpick_To_Knife;                             // 0x0AA0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Multitool_Knife_To_Lockpick;                             // 0x0AC0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Multitool_Knife_To_Cutters;                              // 0x0AE0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Optiwand_Start_Screening;                                // 0x0B00(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Optiwand_End_Screening;                                  // 0x0B20(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Charge_Valid_Plant_Start;                                // 0x0B40(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Charge_Valid_Plant_End;                                  // 0x0B60(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           PlantCharge;                                             // 0x0B80(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           DetonateCharge;                                          // 0x0BA0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           EnableNVG;                                               // 0x0BC0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           DisableNVG;                                              // 0x0BE0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           ShieldDownToUp;                                          // 0x0C00(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           ShieldUpToDown;                                          // 0x0C20(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_ShieldDownToUp;                                   // 0x0C40(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Crouch_ShieldUpToDown;                                   // 0x0C60(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           ShieldHit;                                               // 0x0C80(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           TabletDownToUp;                                          // 0x0CA0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           TabletUpToDown;                                          // 0x0CC0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           TabletSwitchCameraDown;                                  // 0x0CE0(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           TabletSwitchCameraUp;                                    // 0x0D00(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           EvidencePickup;                                          // 0x0D20(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Yell;                                                    // 0x0D40(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           RadioSelect;                                             // 0x0D60(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                         bRadioUsesNotifies;                                      // 0x0D80(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0D81(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FWeaponAnim                                           DoorPush;                                                // 0x0D88(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           ButtonPush;                                              // 0x0DA8(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           WeaponClearing;                                          // 0x0DC8(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           ReactToSting;                                            // 0x0DE8(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           ReactToFlash;                                            // 0x0E08(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           ReactToTaser;                                            // 0x0E28(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           ReactToGas;                                              // 0x0E48(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           ReactToPepperSpray;                                      // 0x0E68(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           ReactToSting_End;                                        // 0x0E88(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           ReactToFlash_End;                                        // 0x0EA8(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           ReactToTaser_End;                                        // 0x0EC8(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           ReactToGas_End;                                          // 0x0EE8(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           ReactToPepperSpray_End;                                  // 0x0F08(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Draw_Level_01;                                           // 0x0F28(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Draw_Level_02;                                           // 0x0F48(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Draw_Level_03;                                           // 0x0F68(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Holster_Level_01;                                        // 0x0F88(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Holster_Level_02;                                        // 0x0FA8(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Holster_Level_03;                                        // 0x0FC8(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Reload_Level_01;                                         // 0x0FE8(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Reload_Level_02;                                         // 0x1008(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Reload_Level_03;                                         // 0x1028(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Recoil_Level_01;                                         // 0x1048(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Recoil_Level_02;                                         // 0x1068(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FWeaponAnim                                           Recoil_Level_03;                                         // 0x1088(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class UAnimMontage*                                          Grip_VFG_Body_FP_Fire;                                   // 0x10A8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          Grip_VFG_Body_FP_Fire_Last;                              // 0x10B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          Grip_VFG_Body_FP_Fire_Aim;                               // 0x10B8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          Grip_VFG_Body_FP_Fire_Aim_Last;                          // 0x10C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          Grip_AFG_Body_FP_Fire;                                   // 0x10C8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          Grip_AFG_Body_FP_Fire_Last;                              // 0x10D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          Grip_AFG_Body_FP_Fire_Aim;                               // 0x10D8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          Grip_AFG_Body_FP_Fire_Aim_Last;                          // 0x10E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          Reload_FP_Ads;                                           // 0x10E8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          ReloadEmpty_FP_Ads;                                      // 0x10F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          Tactical_Reload_FP_Ads;                                  // 0x10F8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          Tactical_ReloadEmpty_FP_Ads;                             // 0x1100(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bEmptyReload;                                            // 0x1108(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHasRetentionAdditives;                                  // 0x1109(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHasLoweredAdditives;                                    // 0x110A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHasSightAdditives;                                      // 0x110B(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bOverrideFireAnimForGrip;                                // 0x110C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x110D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                     IdlePose_AFG_TP;                                         // 0x1110(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     IdlePose_VFG_TP;                                         // 0x1118(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     IdlePose_HSTOP_TP;                                       // 0x1120(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SuspectCombatActivity
	 * Size -> 0x0020 (FullSize[0x0310] - InheritedSize[0x02F0])
	 */
	class USuspectCombatActivity : public UBaseCombatActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x20];                                  // 0x02F0(0x0020) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Reportable
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IReportable : public IInterface
	{
	public:
		void ReportToTOC(class AReadyOrNotCharacter* Reporter, bool bPlayAnimation);
		class FString GetSpeechTypeForReport();
		bool CanReportNow();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SlowDownVolume
	 * Size -> 0x0008 (FullSize[0x0230] - InheritedSize[0x0228])
	 */
	class ASlowDownVolume : public ATriggerBox
	{
	public:
		float                                                        SlowDownMultiplier;                                      // 0x0228(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x022C(0x0004) MISSED OFFSET (PADDING)

	public:
		void OnOverlapEndComponent(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void OnOverlapEnd(class AActor* OverlappedActor, class AActor* OtherActor);
		void OnOverlapBeginComponent(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		void OnOverlapBegin(class AActor* OverlappedActor, class AActor* OtherActor);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.RealtimeWidget
	 * Size -> 0x0000 (FullSize[0x0260] - InheritedSize[0x0260])
	 */
	class URealtimeWidget : public UUserWidget
	{
	public:
		void OnSynchronizeProperties();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TakeCoverActivity
	 * Size -> 0x01B8 (FullSize[0x03B0] - InheritedSize[0x01F8])
	 */
	class UTakeCoverActivity : public UBaseActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x01F8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      MaxCoverFireCount;                                       // 0x0208(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CoverFireTimeCooldown;                                   // 0x020C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CoverFireCooldown;                                       // 0x0210(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xC];                                   // 0x0214(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCoverInstigatorStimulus                              InstigatorStimulus;                                      // 0x0220(0x0050) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0xA0];                                  // 0x0270(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ADoor*                                                 Door;                                                    // 0x0310(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimMontage*                                          LastExitMontagePlayed;                                   // 0x0318(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0003[0x90];                                  // 0x0320(0x0090) MISSED OFFSET (PADDING)

	public:
		void TickMoveToCoverState(float DeltaTime, float Uptime);
		void TickCoverState(float DeltaTime, float Uptime);
		void TickCoverFireState(float DeltaTime, float Uptime);
		void OnTakeDamage(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
		void OnStunned(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
		void OnEnteredCover__DelegateSignature();
		void OnEnemyWeaponFire(class AReadyOrNotCharacter* Character, class ABaseMagazineWeapon* Weapon, const struct FVector& fireDirection);
		void ExitCoverState();
		void ExitCoverFireState();
		void EnterMoveToCoverState();
		void EnterCoverState();
		void EnterCoverFireState();
		void EnterCompleteState();
		bool CanStopCoverFire();
		bool CanFireFromCover();
		bool CanCover();
		bool CanCompleteCover();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TeamViewWidget
	 * Size -> 0x00E0 (FullSize[0x0340] - InheritedSize[0x0260])
	 */
	class UTeamViewWidget : public UUserWidget
	{
	public:
		class UInvalidationBox*                                      InvalidationBox;                                         // 0x0260(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                PlayerViewImage;                                         // 0x0268(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                            PlayerNameText;                                          // 0x0270(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                            PlayerHealthStatusText;                                  // 0x0278(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                PlayerTeamIndicatorImage;                                // 0x0280(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                            SwitchViewText;                                          // 0x0288(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                            CloseViewText;                                           // 0x0290(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                            CurrentViewIndexText;                                    // 0x0298(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TMap<ETeamType, struct FSlateColor>                          TeamColorMap;                                            // 0x02A0(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		TMap<EPlayerHealthStatus, struct FSlateColor>                HealthStatusColorMap;                                    // 0x02F0(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected

	public:
		void Tick_TeamViewOn();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TakeCoverAtLandmarkActivity
	 * Size -> 0x0068 (FullSize[0x0260] - InheritedSize[0x01F8])
	 */
	class UTakeCoverAtLandmarkActivity : public UBaseActivity
	{
	public:
		class ACoverLandmark*                                        CoverLandmark;                                           // 0x01F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ACoverLandmarkProxy*                                   ChosenEntryProxy;                                        // 0x0200(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ACoverLandmarkProxy*                                   ChosenExitProxy;                                         // 0x0208(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SearchRadius;                                            // 0x0210(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        InitialWaitDuration;                                     // 0x0214(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SWATSeenLandmarkWaitDuration;                            // 0x0218(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x24];                                  // 0x021C(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                          EntryAnim;                                               // 0x0240(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimMontage*                                          ExitAnim;                                                // 0x0248(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimMontage*                                          LoopEntryAnim;                                           // 0x0250(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimMontage*                                          LoopExitAnim;                                            // 0x0258(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void TickMoveToLandmarkState(float DeltaTime, float Uptime);
		void Tick_Wait_State(float DeltaTime, float Uptime);
		void Tick_ExitLandmark_State(float DeltaTime, float Uptime);
		void Tick_EnterLandmark_State(float DeltaTime, float Uptime);
		void Tick_AbruptExit_State(float DeltaTime, float Uptime);
		bool ShouldWait();
		void OnTakeDamage(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
		void OnStunned(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
		void OnHeardYell(class AReadyOrNotCharacter* Shouter, bool bLOS);
		void OnEnemyWeaponFire(class AReadyOrNotCharacter* Character, class ABaseMagazineWeapon* Weapon, const struct FVector& fireDirection);
		void EnterMoveToLandmarkState();
		void Enter_Wait_State();
		void Enter_ExitLandmark_State();
		void Enter_EnterLandmark_State();
		void Enter_AbruptExit_State();
		bool CanExitLandmark();
		bool CanEnterLandmark();
		bool CanAbruptlyExit();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReceiveAISenseUpdates
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IReceiveAISenseUpdates : public IInterface
	{
	public:
		void OnAIPerceptionSense(class ACyberneticController* InSenseController, const struct FAIStimulus& Stimulus, class AActor** OutOverrideSensedActor);
		void OnAIHearingSense(class ACyberneticController* InSenseController, const struct FAIStimulus& Stimulus, class AActor** OutOverrideSensedActor);
		void OnAIDamageSense(class ACyberneticController* InSenseController, const struct FAIStimulus& Stimulus, class AActor** OutOverrideSensedActor);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SWATManager
	 * Size -> 0x01C0 (FullSize[0x03E0] - InheritedSize[0x0220])
	 */
	class ASWATManager : public AInfo
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FString, float>                                   SpeechCooldownMap;                                       // 0x0228(0x0050) NativeAccessSpecifierPrivate
		TArray<struct FVector>                          TrackedSquadLeaderLocations;                             // 0x0278(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<class ASWATCharacter*>                                SwatAI;                                                  // 0x0288(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<class AActor*>                                        ActorsToIgnoreForCommandMarking;                         // 0x0298(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<class ASWATCharacter*>                                AllSpawnedSWAT;                                          // 0x02A8(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x50];                                  // 0x02B8(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReadyOrNotCharacter*                                  LeadCharacter;                                           // 0x0308(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class AActor*>                                        PotentialFocusActors;                                    // 0x0310(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<class ACyberneticCharacter*>                          KnownEnemies;                                            // 0x0320(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<class AClearPoint*>                                   PotentialClearPoints;                                    // 0x0330(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<class ACyberneticCharacter*>                          HasEverSeenList;                                         // 0x0340(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		class AReadyOrNotCharacter*                                  SquadLeader;                                             // 0x0350(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0002[0x8];                                   // 0x0358(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSWATRequestOrder>                             RequestOrders;                                           // 0x0360(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TMap<ETeamType, struct FQueuedSwatCommand>                   QueuedSwatCommandMap;                                    // 0x0370(0x0050) BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x4];                                   // 0x03C0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESwatCommand                                                 CurrentDefaultCommand;                                   // 0x03C4(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESwatCommandPriority                                         SwatCommandPriority;                                     // 0x03C5(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETeamType                                                    ActiveCommandTeam;                                       // 0x03C6(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x19];                                  // 0x03C7(0x0019) MISSED OFFSET (PADDING)

	public:
		void RemoveHoldCommand(ETeamType TeamType);
		void PlaySwatCommandVoiceLine(const class FString& VoiceLine, const class FString& OverrideSpearkerName);
		bool IsSWATTeamDead(ETeamType Team);
		bool IsPlayerAKnownEnemy(class APlayerCharacter* PlayerCharacter);
		void GiveWedgeDoorCommand(class AActor* Target, ETeamType TeamType, const struct FVector& CommandLocation, const struct FVector& CommandNormal);
		void GiveWaitingForCommand();
		void GiveStackUpCommand(class AActor* Target, ETeamType TeamType, const struct FVector& CommandLocation, const struct FVector& CommandNormal, bool bCheckDoor);
		void GiveRestrainCommand(class AActor* Target, ETeamType TeamType, const struct FVector& CommandLocation);
		void GiveReportTargetCommand(class AActor* Target, ETeamType TeamType);
		void GiveRemoveWedgeCommand(class AActor* Target, ETeamType TeamType, const struct FVector& CommandLocation, const struct FVector& CommandNormal);
		void GivePickLockCommand(class AActor* Target, ETeamType TeamType, const struct FVector& CommandLocation);
		void GiveOpenDoorCommand(class AActor* Target, ETeamType TeamType, const struct FVector& CommandLocation);
		void GiveMoveCommand(ETeamType TeamType, const struct FVector& CommandLocation, const struct FVector& CommandNormal, float Delay, bool bMoveToCover);
		void GiveHoldCommand(ETeamType TeamType);
		void GiveFallInCommand(ETeamType TeamType);
		void GiveDropChemlightAtLocation(ETeamType TeamType, const struct FVector& CommandLocation);
		void GiveDisarmTrapOnDoorCommand(class AActor* Target, ETeamType TeamType, const struct FVector& CommandLocation, const struct FVector& CommandNormal, bool bWaitForNextCommand);
		void GiveDisarmStandaloneTrapCommand(class AActor* Target, ETeamType TeamType);
		void GiveDeployShield(ETeamType TeamType);
		void GiveDeployGrenadeAtLocation(ETeamType TeamType, const struct FVector& CommandLocation, class ABaseGrenade* Grenade);
		void GiveCollectEvidenceCommand(class AActor* Target, ETeamType TeamType);
		void GiveCloseDoorCommand(class AActor* Target, ETeamType TeamType, const struct FVector& CommandLocation);
		void GiveCheckForTrapsCommand(class AActor* Target, ETeamType TeamType, const struct FVector& CommandLocation, const struct FVector& CommandNormal);
		void GiveCheckForContactsCommand(class AActor* Target, ETeamType TeamType, const struct FVector& CommandLocation, const struct FVector& CommandNormal);
		void GiveBreachAndClearCommand(class ADoor* Door, EDoorBreachType DoorBreachType, ETeamType TeamType, const struct FVector& CommandLocation, const struct FVector& CommandNormal, class ABaseItem* DoorBreachItemClass, class ABaseItem* DoorUseItemClass, class UTeamBreachAndClearActivity* InCustomBreachAndClearActivityClass);
		TArray<class ASWATCharacter*> GetSwatTeam();
		TArray<class ASWATCharacter*> GetSWATSortedByDistanceToLocation(const struct FVector& Location, ETeamType FilterTeam, class ADoor* StackUpDoor, bool bAscendingOrder);
		class ASWATManager* GetSWATManager(class UWorld* World);
		class ASWATCharacter* GetSwatCharacterAtSquadPosition(ESquadPosition InSquadPosition);
		ESwatCommand GetQueuedSwatCommandForSquadPosition(ESquadPosition SquadPosition);
		class AReadyOrNotCharacter* GetLeadCharacter();
		bool CanGiveActivityToSWAT(class ASWATCharacter* SWAT, ETeamType Team);
		bool CanDropItemContext(class ABaseItem* Item);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TelescopicLadder
	 * Size -> 0x01E8 (FullSize[0x0AB0] - InheritedSize[0x08C8])
	 */
	class ATelescopicLadder : public ABaseDeployableGear
	{
	public:
		class USceneComponent*                                       LadderVerticalIconPoint;                                 // 0x08C8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                       LadderHorizontalIconPoint;                               // 0x08D0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                       LadderBottomMountPoint;                                  // 0x08D8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                       LadderTopMountPoint;                                     // 0x08E0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ALadderSnapZone*                                       LadderSnapZoneBP;                                        // 0x08E8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bFreezeFrame;                                            // 0x08F0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x08F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MaxRollDegreesBeforeUnwalkable;                          // 0x08F4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x98];                                  // 0x08F8(0x0098) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct PCoreUObject_FTransform                               FreezeTransform;                                         // 0x0990(0x0030) Net, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x2C];                                  // 0x09C0(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bShowGhostLadder;                                        // 0x09EC(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShowCollapsedLadder;                                    // 0x09ED(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x2];                                   // 0x09EE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                         CollapsedLadderAnim;                                     // 0x09F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x8];                                   // 0x09F8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct PCoreUObject_FTransform                               LastTransform;                                           // 0x0A00(0x0030) Net, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class ASkeletalMeshActor*                                    GhostLadderActor;                                        // 0x0A30(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial*                                             GhostLadderMaterial;                                     // 0x0A38(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPhysicsAsset*                                         DroppedPhysics;                                          // 0x0A40(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPhysicsAsset*                                         PlacedPhysics;                                           // 0x0A48(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            PlacementSoundEvent;                                     // 0x0A50(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            PickupSoundEvent;                                        // 0x0A58(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            CollideSoundEvent;                                       // 0x0A60(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDeployed;                                               // 0x0A68(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDeployedHorizontal;                                     // 0x0A69(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bMounted;                                                // 0x0A6A(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x1];                                   // 0x0A6B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        RetractedRungCount;                                      // 0x0A6C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ALadderSnapZone*                                       CurrentSnapZone;                                         // 0x0A70(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bWallFound;                                              // 0x0A78(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x37];                                  // 0x0A79(0x0037) MISSED OFFSET (PADDING)

	public:
		void Server_RemoveLadder();
		void Server_PlaceLadder();
		void Server_DeployLadderAtZone(class ALadderSnapZone* NewSnapZone);
		void OnRep_Deployed();
		void OnRep_CurrentSnapZone();
		void Multicast_PlaceLadder();
		void Multicast_DeployLadderAtZone(class ALadderSnapZone* NewSnapZone);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TakeHostageActivity
	 * Size -> 0x0098 (FullSize[0x0290] - InheritedSize[0x01F8])
	 */
	class UTakeHostageActivity : public UBaseActivity
	{
	public:
		class ACyberneticCharacter*                                  Hostage;                                                 // 0x01F8(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TimeToSurrenderHostage;                                  // 0x0200(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x0204(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReadyOrNotCharacter*                                  LastEnemySensed;                                         // 0x0208(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TMap<class FName, class UInteractionsData*>                  HostageInteractions;                                     // 0x0210(0x0050) Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x30];                                  // 0x0260(0x0030) MISSED OFFSET (PADDING)

	public:
		void TickTurnState(float DeltaTime, float Uptime);
		void TickTakingState(float DeltaTime, float Uptime);
		void TickMoveToState(float DeltaTime, float Uptime);
		void TickEndHostageTakeState(float DeltaTime, float Uptime);
		void TickBeginHostageTakeState(float DeltaTime, float Uptime);
		bool ShouldTurn();
		void OnTakeDamage(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* DamagedCharacter, class AActor* DamageCauser, float Damage, float HealthRemaining);
		void OnStunned(class AReadyOrNotCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
		void OnSensedCharacter(class AReadyOrNotCharacter* SensedCharacter);
		void OnHostageTakeTurnComplete_Slave(class AActor* Actor);
		void OnHostageTakeTurnComplete_Driver(class AActor* Actor);
		void OnHostageTakeStartComplete_Slave(class AActor* Actor);
		void OnHostageTakeStartComplete_Driver(class AActor* Actor);
		void OnHostageTakeKillComplete_Slave(class AActor* Actor);
		void OnHostageTakeKillComplete_Driver(class AActor* Actor);
		void OnHostageTakeEndComplete_Slave(class AActor* Actor);
		void OnHostageTakeEndComplete_Driver(class AActor* Actor);
		void OnHostageKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
		void OnHeardYell(class AReadyOrNotCharacter* Shouter, bool bLOS);
		void EnterTurnState();
		void EnterTakingState();
		void EnterMoveToState();
		void EnterEndHostageTakeState();
		void EnterBeginHostageTakeState();
		void EndTakingState();
		bool CanStartHostageTake();
		bool CanIdle();
		bool CanEndHostageTake();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReportReportableByTag
	 * Size -> 0x0008 (FullSize[0x0278] - InheritedSize[0x0270])
	 */
	class AReportReportableByTag : public AObjective
	{
	public:
		class FName                                                  ReportTag;                                               // 0x0270(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		bool HasReportedReportableByTag(const class FName& Tag);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SwatCombatActivity
	 * Size -> 0x0010 (FullSize[0x0300] - InheritedSize[0x02F0])
	 */
	class USwatCombatActivity : public UBaseCombatActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x02F0(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Tablet
	 * Size -> 0x0008 (FullSize[0x08D0] - InheritedSize[0x08C8])
	 */
	class ATablet : public ABaseItem
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x08C8(0x0008) Fix Super Size

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ThreatAwarenessSubsystem
	 * Size -> 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
	 */
	class UThreatAwarenessSubsystem : public UWorldSubsystem
	{
	public:
		unsigned char                                                UnknownData_0000[0x48];                                  // 0x0030(0x0048) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TargetingComponent
	 * Size -> 0x0388 (FullSize[0x0438] - InheritedSize[0x00B0])
	 */
	class UTargetingComponent : public UActorComponent
	{
	public:
		struct FVector                                  ThreatTrackingIgnoredDirection;                          // 0x00B0(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  ThreatTrackingPreferredDirection;                        // 0x00BC(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          MontageFocalAnim;                                        // 0x00C8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  MontageFocalPoint;                                       // 0x00D0(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  CustomFocusLocation;                                     // 0x00DC(0x000C) Edit, BlueprintVisible, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  HeadTrackingLocation;                                    // 0x00E8(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        Threat;                                                  // 0x00F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        Tension;                                                 // 0x00F8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x00FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FExposedToNoise                                       LastHeardAggressiveNoise;                                // 0x0100(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, EditConst, NoDestructor, NativeAccessSpecifierPublic
		TMap<class AReadyOrNotCharacter*, float>                     CharactersSeen;                                          // 0x0120(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, EditConst, Protected, NativeAccessSpecifierProtected
		ETargetingCompTracking                                       TrackingType;                                            // 0x0170(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x0171(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ALastKnownPositionActor*                               LastKnownPositionActor;                                  // 0x0178(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class AReadyOrNotCharacter*>                          KnownFriendlies;                                         // 0x0180(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, Protected, NativeAccessSpecifierProtected
		TArray<class AReadyOrNotCharacter*>                          KnownNeutrals;                                           // 0x0190(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, Protected, NativeAccessSpecifierProtected
		TArray<struct FTargetData>                                   KnownEnemies;                                            // 0x01A0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, Protected, NativeAccessSpecifierProtected
		struct FVector                                  LastKnownTargetPosition;                                 // 0x01B0(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                  LastSeenKnownTargetFrom;                                 // 0x01BC(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                  CoverAreaLoc;                                            // 0x01C8(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        TimeSinceLastSeenTarget;                                 // 0x01D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        PreviousTimeNotSeenTarget;                               // 0x01D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        TimeTrackingTarget;                                      // 0x01DC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        DelayUntilCoverArea;                                     // 0x01E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        EngagementTimeUntilReachedLastBoneZone;                  // 0x01E4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        TimeSinceLastBoneRetarget;                               // 0x01E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bHasLOSToTarget : 1;                                     // 0x01EC(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bCanSeeTarget : 1;                                       // 0x01EC(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bHasLOSToLastTarget : 1;                                 // 0x01EC(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bCanSeeLastTarget : 1;                                   // 0x01EC(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bHasLOSToLastKnownTargetPosition : 1;                    // 0x01EC(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		uint8_t                                                      CurrentBoneTargetZoneIndex;                              // 0x01ED(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		uint8_t                                                      PreviousBoneTargetZoneIndex;                             // 0x01EE(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x1];                                   // 0x01EF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                  TargetedBone;                                            // 0x01F0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class FName>                                          BonesToTarget;                                           // 0x01F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0003[0x10];                                  // 0x0208(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        ExposureFromEnemy;                                       // 0x0218(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        EnemyExposureFromUs;                                     // 0x021C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        RequiredTimeTrackingTarget;                              // 0x0220(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        TimeTrackingHead;                                        // 0x0224(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AReadyOrNotCharacter*                                  TrackedTarget;                                           // 0x0228(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AReadyOrNotCharacter*                                  LastTrackedTarget;                                       // 0x0230(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AReadyOrNotCharacter*                                  LastKnownEnemy;                                          // 0x0238(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<struct FVector>                          FocalPointsOfInterest;                                   // 0x0240(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, Protected, NativeAccessSpecifierProtected
		struct FVector                                  LastMoveVectorFocalPoint;                                // 0x0250(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0004[0x4];                                   // 0x025C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ADoor*                                                 LastTrackedDoor;                                         // 0x0260(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        TimeUntilNextDoorCheck;                                  // 0x0268(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0005[0x24];                                  // 0x026C(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        TimeSinceLastHeardNoiseStimulus;                         // 0x0290(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                  LatestNoiseLocation;                                     // 0x0294(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AThreatAwarenessActor*                                 LastThreatAwarenessActor;                                // 0x02A0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bSearchingPathAwareness;                                 // 0x02A8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0006[0x3];                                   // 0x02A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        TimeSinceGotLastThreatAwarenessActor;                    // 0x02AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        TimeUntilFinishedCheckingThreat;                         // 0x02B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0007[0x4];                                   // 0x02B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EPathedAwareness, struct FVector>          LatestPathedAwareness;                                   // 0x02B8(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, EditConst, Protected, NativeAccessSpecifierProtected
		TMap<EPathedAwareness, struct FVector>          LastSearchedPathedAwareness;                             // 0x0308(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, EditConst, Protected, NativeAccessSpecifierProtected
		TMap<EPathedAwareness, float>                                PathAwarenessSearchTimeout;                              // 0x0358(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, EditConst, Protected, NativeAccessSpecifierProtected
		TMap<uint32_t, EPathedAwareness>                             PathedAwarenessQueryType;                                // 0x03A8(0x0050) Edit, d.e.o.tate, EditConst, Protected, NativeAccessSpecifierProtected
		class AThreatAwarenessActor*                                 NearestThreat;                                           // 0x03F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class AThreatAwarenessActor*>                         Threats;                                                 // 0x0400(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, Protected, NativeAccessSpecifierProtected
		TArray<class AThreatAwarenessActor*>                         HasBeenNearThreat;                                       // 0x0410(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, Protected, NativeAccessSpecifierProtected
		int32_t                                                      ThreatIdx;                                               // 0x0420(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bRequireThreatSearch;                                    // 0x0424(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0008[0x13];                                  // 0x0425(0x0013) MISSED OFFSET (PADDING)

	public:
		void ShareTarget(class AReadyOrNotCharacter* Target);
		void SetLastTrackedTarget(class AReadyOrNotCharacter* Target);
		void RemoveKnownEnemy(class AReadyOrNotCharacter* Enemy);
		bool IsTrackingMontagePosition();
		bool IsTrackedInKnownNeutrals(class AReadyOrNotCharacter* PlayerCharacter);
		bool IsTrackedInKnownFriendlies(class AReadyOrNotCharacter* PlayerCharacter);
		bool IsTrackedInKnownEnemies(class AReadyOrNotCharacter* PlayerCharacter);
		bool IsTrackedByKnownFriendly(class AReadyOrNotCharacter* Target);
		bool IsTargetingLastBoneZone();
		bool IsLookingAtLocation(const struct FVector& InTargetLocation);
		bool IsLookingAtFocalPoint(float Tolerance);
		bool IsLocationCloseToKnownEnemies(const struct FVector& Location, float Tolerance);
		bool IsAnySwatLookingAtLocation(const struct FVector& InTargetLocation);
		bool HasSeenCharacterFor(class AReadyOrNotCharacter* InCharacter, float Seconds);
		bool HasLineOfSightToTrackedTarget();
		bool HasLineOfSightToLastTrackedTarget();
		bool HasLineOfSightToLastKnownTargetPosition();
		int32_t GetVisibleKnownFriendlies();
		ETargetingCompTracking GetTrackingType();
		struct FTargetData GetTrackedTargetData();
		class AReadyOrNotCharacter* GetTrackedTarget();
		float GetTimeTrackingTarget();
		float GetTimeTrackingHead();
		float GetTimeSinceLastSeenEnemy();
		TArray<class AThreatAwarenessActor*> GetThreatsFromLocationBeyondRadius(TArray<class AThreatAwarenessActor*> InThreats, const struct FVector& Location, float MinDistance);
		void GetThreatsForLocation(TArray<class AThreatAwarenessActor*>* OutThreats, const struct FVector& Location, float MinDistance, bool bRequireLOS);
		void GetThreats(TArray<class AThreatAwarenessActor*>* OutThreats);
		class FName GetTargetedBone();
		float GetRequiredTrackingTime();
		int32_t GetRecentlyVisibleKnownEnemies(float TimeSinceLastSeen);
		class AThreatAwarenessActor* GetNearestThreatToLocation(const struct FVector& Location);
		class AThreatAwarenessActor* GetNearestThreat();
		class AThreatAwarenessActor* GetNearestHighestThreat(TArray<class AThreatAwarenessActor*> InThreats, const struct FVector& Location);
		class AReadyOrNotCharacter* GetLastTrackedTarget();
		struct FVector GetLastSeenKnownEnemyFrom();
		class ALastKnownPositionActor* GetLastKnownPositionActor();
		struct FVector GetLastKnownEnemyPosition();
		class AReadyOrNotCharacter* GetLastKnownEnemy();
		struct FVector GetLastHeardNoiseLocation();
		struct FVector GetLastHeardAggressiveNoiseLocation();
		void GetKnownNeutrals(TArray<class AReadyOrNotCharacter*>* OutNeutrals);
		int32_t GetKnownFriendlyCount();
		void GetKnownFriendlies(TArray<class AReadyOrNotCharacter*>* OutFriendlies);
		void GetKnownEnemies(TArray<struct FTargetData>* OutEnemies);
		class AThreatAwarenessActor* GetFurthestHighestThreat(TArray<class AThreatAwarenessActor*> InThreats, const struct FVector& Location);
		struct FVector GetCoverAreaLocation();
		class AReadyOrNotCharacter* GetClosestKnownNeutral();
		class AReadyOrNotCharacter* GetClosestKnownFriendly();
		class AReadyOrNotCharacter* GetClosestKnownEnemy();
		float GetClosestDistanceToKnownEnemies(const struct FVector& Location);
		bool ContainsThreatLevel(class AThreatAwarenessActor* InThreat, TArray<EThreatLevel> ThreatsLevels);
		bool CanSeeTrackedTarget();
		bool CanSeeLastTrackedTarget();
		bool CanCharacterBeSeen(class AReadyOrNotCharacter* InCharacter, float MinAge);
		bool CanActorBeSeen(class AActor* InActor);
		void AddKnownNeutral(class AReadyOrNotCharacter* Neutral);
		void AddKnownFriendly(class AReadyOrNotCharacter* Friendly);
		void AddKnownEnemy(class AReadyOrNotCharacter* Enemy, bool bForce);
		void AddCharacterToSeenMap(class AReadyOrNotCharacter* InCharacter);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TabletDisplay
	 * Size -> 0x0008 (FullSize[0x0268] - InheritedSize[0x0260])
	 */
	class UTabletDisplay : public UUserWidget
	{
	public:
		class ATablet*                                               OwningTablet;                                            // 0x0260(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TestCases
	 * Size -> 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
	 */
	class ATestCases : public AActor
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SuspectController
	 * Size -> 0x0000 (FullSize[0x0888] - InheritedSize[0x0888])
	 */
	class ASuspectController : public ACyberneticController
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Taser
	 * Size -> 0x0290 (FullSize[0x1520] - InheritedSize[0x1290])
	 */
	class ATaser : public ABaseMagazineWeapon
	{
	public:
		class UMaterialInstanceDynamic*                              TaserLightDynamicMaterial;                               // 0x1290(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FHitResult                                            ProjectileHitResult;                                     // 0x1298(0x0088) Net, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		int32_t                                                      CartridgesPerSlot;                                       // 0x1320(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      StartingCartridges;                                      // 0x1324(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SweepForReactionVolumeSize;                              // 0x1328(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CartridgeWeight;                                         // 0x132C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bFiredCartridge;                                         // 0x1330(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDetachedProbes;                                         // 0x1331(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x2];                                   // 0x1332(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        BlinkTime;                                               // 0x1334(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bBlinkState;                                             // 0x1338(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x1339(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MaxBatteryLevel;                                         // 0x133C(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MinCableLength;                                          // 0x1340(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MaxCableLength;                                          // 0x1344(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CableGainRate;                                           // 0x1348(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ProbeMaxDistance;                                        // 0x134C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundBase*                                            DetachSoundEffect;                                       // 0x1350(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            DetachSoundEffectFMOD;                                   // 0x1358(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        PingStunDuration;                                        // 0x1360(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        StunDurationRemaining;                                   // 0x1364(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bStartedStun;                                            // 0x1368(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x7];                                   // 0x1369(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USoundBase*                                            CrackleSoundEffect;                                      // 0x1370(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            CrackleSoundEffectFMOD;                                  // 0x1378(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            TaserHitEffectFMOD;                                      // 0x1380(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ABulletProjectile*                                     LeftProjectile;                                          // 0x1388(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ABulletProjectile*                                     RightProjectile;                                         // 0x1390(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x8];                                   // 0x1398(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                       TaserImpactParticle_Start;                               // 0x13A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                              TaserImpactParticleComp_Start;                           // 0x13A8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                       TaserImpactParticle_Loop;                                // 0x13B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                              TaserImpactParticleComp_LoopLeft;                        // 0x13B8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                              TaserImpactParticleComp_LoopRight;                       // 0x13C0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x8C];                                  // 0x13C8(0x008C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        DoorBlowOutForce;                                        // 0x1454(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                                LeftCableAttachActor;                                    // 0x1458(0x0008) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                                RightCableAttachActor;                                   // 0x1460(0x0008) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          TaserFireLoop1P;                                         // 0x1468(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          TaserFireLoop3P;                                         // 0x1470(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMatineeCameraShake*                                   TaserFireLoopCameraShake;                                // 0x1478(0x0008) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x8];                                   // 0x1480(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCableComponent*                                       TopCable;                                                // 0x1488(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCableComponent*                                       BottomCable;                                             // 0x1490(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USkeletalMeshComponent*                                LeftDoor;                                                // 0x1498(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USkeletalMeshComponent*                                RightDoor;                                               // 0x14A0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAudioComponent*                                       CrackleSoundGenerator;                                   // 0x14A8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODAudioComponent*                                   CrackleSoundGeneratorFMOD;                               // 0x14B0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ULaserAttachment*                                      LaserAttachmentClass;                                    // 0x14B8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0006[0x60];                                  // 0x14C0(0x0060) MISSED OFFSET (PADDING)

	public:
		void Server_SetHoldingTaser(bool bNewHold);
		void Server_DetachProbes();
		void Server_DeliverStunToAttachedTarget();
		void OnRep_ProjectileReplicated();
		void Multicast_StopCrackleSoundEffect();
		void Multicast_StartCrackleSoundEffect();
		void Multicast_ResetDoors();
		void Multicast_ResetCableAttachments();
		void Multicast_PlayTaserHitEffect(const struct FHitResult& Hit);
		void Multicast_PlayFireEffects(bool bDryFire);
		void Multicast_PlayDetachEffect();
		void Multicast_HideCables();
		void Multicast_DestroyProjectiles();
		void HandleMeleeDeffered(const struct FHitResult& Hit);
		void DetachProbes();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ThreatAwarenessActor
	 * Size -> 0x0068 (FullSize[0x0288] - InheritedSize[0x0220])
	 */
	class AThreatAwarenessActor : public AActor
	{
	public:
		class USceneComponent*                                       DefaultScene;                                            // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EThreatLevel                                                 ThreatLevel;                                             // 0x0228(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0229(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ADoor*                                                 DoorThreat;                                              // 0x0230(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bFrontDoorThreat;                                        // 0x0238(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x0239(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FExitData>                                     Exits;                                                   // 0x0240(0x0010) Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected
		TArray<class ADoor*>                                         UniqueExits;                                             // 0x0250(0x0010) Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x8];                                   // 0x0260(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AThreatAwarenessActor*>                         PathableThreatAwarenessActors;                           // 0x0268(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		TArray<struct FVector>                          SwatLookAtPoints;                                        // 0x0278(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic

	public:
		void ThisCalculateExits();
		void RemoveAnyVisibleExits();
		bool IsFrontDoorThreat();
		bool IsDoorThreat();
		bool HasSpecificExitDoor(class ADoor* Door);
		bool HasExit();
		bool GetUniqueExtis(TArray<class ADoor*>* OutDoors);
		EThreatLevel GetThreatLevel();
		bool GetRandomExitDoor(class ADoor** Door);
		class ADoor* GetAttachedDoor();
		void GenerateLookAtPoints();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SniperCharacter
	 * Size -> 0x0040 (FullSize[0x2200] - InheritedSize[0x21C0])
	 */
	class ASniperCharacter : public APlayerCharacter
	{
	public:
		int32_t                                                      Designation;                                             // 0x21C0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bADSLocked;                                              // 0x21C4(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x21C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                          ExitControlHandle;                                       // 0x21C8(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UScopedWeaponAttachment*                               PrimaryScopeAttachment;                                  // 0x21D0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponAttachment*                                     PrimaryMuzzleAttachment;                                 // 0x21D8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponAttachment*                                     PrimaryUnderbarrelAttachment;                            // 0x21E0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UScopedWeaponAttachment*                               SecondaryScopeAttachment;                                // 0x21E8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponAttachment*                                     SecondaryMuzzleAttachment;                               // 0x21F0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponAttachment*                                     SecondaryUnderbarrelAttachment;                          // 0x21F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void ExitControl();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TableTennisMachine
	 * Size -> 0x0058 (FullSize[0x0278] - InheritedSize[0x0220])
	 */
	class ATableTennisMachine : public AActor
	{
	public:
		struct FTableTennisGame                                      Game;                                                    // 0x0220(0x0024) Edit, BlueprintVisible, Net, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x0244(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                            NumberTexture;                                           // 0x0248(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                            BackgroundTexture;                                       // 0x0250(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                            StartTexture;                                            // 0x0258(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                            ReadyTexture;                                            // 0x0260(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                            InsertCoinTexture;                                       // 0x0268(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bShouldDrawInsertCoin;                                   // 0x0270(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x0271(0x0007) MISSED OFFSET (PADDING)

	public:
		void StartGame();
		void SimulateGame(float DeltaTime, bool bDoLeftAI, bool bDoRightAI);
		void PlayBoop(bool bRight);
		void DrawGame(class UCanvas* Canvas);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ReportTargetActivity
	 * Size -> 0x0020 (FullSize[0x0248] - InheritedSize[0x0228])
	 */
	class UReportTargetActivity : public UTeamBaseActivity
	{
	public:
		TScriptInterface<class IReportable>                          ReportTarget;                                            // 0x0228(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic
		class APlayerCharacter*                                      ReportCharacterTarget;                                   // 0x0238(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AIncapacitatedHuman*                                   ReportIncapacitatedTarget;                               // 0x0240(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ThrownItem
	 * Size -> 0x0238 (FullSize[0x0458] - InheritedSize[0x0220])
	 */
	class AThrownItem : public AActor
	{
	public:
		class AReadyOrNotCharacter*                                  ThrowInstigator;                                         // 0x0220(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                       SceneComponent;                                          // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UStaticMeshComponent*                                  StaticMesh;                                              // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAIPerceptionStimuliSourceComponent*                   PerceptionStimuliComp;                                   // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        TurnPhysicsOffDelay;                                     // 0x0240(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        ThrowDistance;                                           // 0x0244(0x0004) Edit, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<struct FVector>                          FirstBouncePath;                                         // 0x0248(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		struct FHitResult                                            FirstBounceHit;                                          // 0x0258(0x0088) IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x02E0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVector>                          SecondBouncePath;                                        // 0x02E8(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		struct FHitResult                                            SecondBounceHit;                                         // 0x02F8(0x0088) IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x0380(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVector>                          ThirdBouncePath;                                         // 0x0388(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		struct FHitResult                                            ThirdBounceHit;                                          // 0x0398(0x0088) IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x8];                                   // 0x0420(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVector_NetQuantize>                           CompletePath;                                            // 0x0428(0x0010) Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected
		int32_t                                                      BouncePt1;                                               // 0x0438(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                      BouncePt2;                                               // 0x043C(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                      BouncePt3;                                               // 0x0440(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0003[0x4];                                   // 0x0444(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        ThrowSpeed;                                              // 0x0448(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0004[0x8];                                   // 0x044C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        ThrowBounciness;                                         // 0x0454(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void UpdateServerPath(TArray<struct FVector_NetQuantize> Path, int32_t Bounce1, int32_t Bounce2, int32_t Bounce3);
		void OnRep_ThrowPath();
		void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ThrownChemlight
	 * Size -> 0x0068 (FullSize[0x04C0] - InheritedSize[0x0458])
	 */
	class AThrownChemlight : public AThrownItem
	{
	public:
		class UPointLightComponent*                                  LightSource;                                             // 0x0458(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODAudioComponent*                                   FmodSteppedOnComponent;                                  // 0x0460(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                          ChemlightColor;                                          // 0x0468(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  LightSourcePos;                                          // 0x0478(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x0484(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        EmmisiveBrightness;                                      // 0x0488(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x048C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialInstance*                                     ChemlightMaterial;                                       // 0x0490(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                              Chemlight_ActivatedInst;                                 // 0x0498(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x04A0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        InitialGlowSpeed;                                        // 0x04A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        GlowStartDieTime;                                        // 0x04A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        GlowLightDieSpeed;                                       // 0x04AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        GlowLightTotalLife;                                      // 0x04B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CurrentLifeTime;                                         // 0x04B4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstance*                                     DecalMat;                                                // 0x04B8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void UpdateLightSourcePos();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SuspectsAndCivilianManager
	 * Size -> 0x00B0 (FullSize[0x02D0] - InheritedSize[0x0220])
	 */
	class ASuspectsAndCivilianManager : public AInfo
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ATrapActor*>                                    InvestigatedTrap;                                        // 0x0230(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x0240(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ACyberneticCharacter*>                          Suspects;                                                // 0x0248(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class ACyberneticCharacter*>                          Civilians;                                               // 0x0258(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x0268(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        TimeSinceLastInvestigation;                              // 0x026C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SuspectPushCooldown;                                     // 0x0270(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SuspectInvestigationCooldown;                            // 0x0274(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SuspectFlankCooldown;                                    // 0x0278(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x4];                                   // 0x027C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FString, float>                                   SpeechCooldownMap;                                       // 0x0280(0x0050) Protected, NativeAccessSpecifierProtected

	public:
		void Server_PlaySharedBarkOrStartConversation(const class FString& SpeechRow, class ACyberneticCharacter* Speaker, float Cooldown);
		int32_t GetNumActiveSuspects();
		int32_t GetNumActiveCivilians();
		class ASuspectsAndCivilianManager* Get(class UWorld* World);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SniperSpawn
	 * Size -> 0x0048 (FullSize[0x0268] - InheritedSize[0x0220])
	 */
	class ASniperSpawn : public AActor
	{
	public:
		class FName                                                  SpawnLabel;                                              // 0x0220(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bMovementLocked;                                         // 0x0228(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bStartInADS;                                             // 0x0229(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLockADS;                                                // 0x022A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x5];                                   // 0x022B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASniperCharacter*                                      SniperClass;                                             // 0x0230(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ASniperCharacter*                                      SpotterClass;                                            // 0x0238(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ASniperCharacter*                                      MarksmanClass;                                           // 0x0240(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UArrowComponent*                                       SpawnDirection;                                          // 0x0248(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                       RootSceneComponent;                                      // 0x0250(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHasSniperSpawned;                                       // 0x0258(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x0259(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASniperCharacter*                                      SpawnedSniper;                                           // 0x0260(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void SpawnSpotterHere(int32_t Designation);
		void SpawnSniperHere(int32_t Designation);
		void SpawnPersonnelOfClass(class ASniperCharacter* CharacterClass, int32_t Designation);
		void SpawnMarksmanHere(int32_t Designation);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ThrownEvidenceActor
	 * Size -> 0x0038 (FullSize[0x0258] - InheritedSize[0x0220])
	 */
	class AThrownEvidenceActor : public AActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBoxComponent*                                         BoxComponent;                                            // 0x0228(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ABaseItem*                                             OwningItem;                                              // 0x0230(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  Rep_Location;                                            // 0x0238(0x000C) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                 Rep_Rotation;                                            // 0x0244(0x000C) Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x0250(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnBoxHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TugOfWarGM
	 * Size -> 0x0040 (FullSize[0x07F0] - InheritedSize[0x07B0])
	 */
	class ATugOfWarGM : public AReadyOrNotGameMode_PVP
	{
	public:
		TArray<class APlayerCharacter*>                              ArrestedBlueCharacters;                                  // 0x07B0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class APlayerCharacter*>                              ArrestedRedCharacters;                                   // 0x07C0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class UFMODEvent*                                            TOWVictorySound;                                         // 0x07D0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            MatchLoopMusic;                                          // 0x07D8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            MatchStartMusic;                                         // 0x07E0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            MatchEndMusic;                                           // 0x07E8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TutorialGS
	 * Size -> 0x0310 (FullSize[0x0DE0] - InheritedSize[0x0AD0])
	 */
	class ATutorialGS : public ACoopGS
	{
	public:
		struct FTutorialMissionData                                  CurrentTutorialData;                                     // 0x0AD0(0x0190) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TSoftObjectPtr<class UWorld>                                 TutorialMenuLevel;                                       // 0x0C60(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x0C84(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class ULevelStreaming*                                       TutorialMenuStreamedLevel;                               // 0x0C88(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULevelStreaming*                                       CurrentTutorialStreamedLevel;                            // 0x0C90(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TSoftObjectPtr<class UWorld>                                 ShootingRangeLevel;                                      // 0x0C98(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x0CBC(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TSoftObjectPtr<class UWorld>                                 KillHouseLevel;                                          // 0x0CC0(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x0CE4(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TSoftObjectPtr<class UWorld>                                 BasicControlsLevel;                                      // 0x0CE8(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x4];                                   // 0x0D0C(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TSoftObjectPtr<class UWorld>                                 MirrorgunLevel;                                          // 0x0D10(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x4];                                   // 0x0D34(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TSoftObjectPtr<class UWorld>                                 StackUpLevel;                                            // 0x0D38(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x4];                                   // 0x0D5C(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TSoftObjectPtr<class UWorld>                                 ArrestLevel;                                             // 0x0D60(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x4];                                   // 0x0D84(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TSoftObjectPtr<class UWorld>                                 GrenadesLevel;                                           // 0x0D88(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0x4];                                   // 0x0DAC(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TSoftObjectPtr<class UWorld>                                 MovementLevel;                                           // 0x0DB0(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0008[0x4];                                   // 0x0DD4(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0009[0x2];                                   // 0x0DD8(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bFinishedUsingTutorialMenu;                              // 0x0DDA(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0010[0x5];                                   // 0x0DDB(0x0005) MISSED OFFSET (PADDING)

	public:
		void SetCurrentTutorialData(const struct FTutorialMissionData& TutorialData);
		void OnPostUpdateSwatCommands(class USwatCommandWidget* Widget, TArray<struct FSwatCommand>* SwatCommands);
		TSoftObjectPtr<class UWorld> GetCurrentTutorialStreamedLevel();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ThrownGrenade
	 * Size -> 0x0000 (FullSize[0x0458] - InheritedSize[0x0458])
	 */
	class AThrownGrenade : public AThrownItem
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.UnlockDoorQuestNode
	 * Size -> 0x0010 (FullSize[0x0260] - InheritedSize[0x0250])
	 */
	class UUnlockDoorQuestNode : public UBaseQuestNode
	{
	public:
		class ADoor*                                                 TargetDoor;                                              // 0x0250(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0258(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TutorialMenu
	 * Size -> 0x0008 (FullSize[0x0280] - InheritedSize[0x0278])
	 */
	class UTutorialMenu : public UBaseWidget
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0278(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TOCManager
	 * Size -> 0x0048 (FullSize[0x0268] - InheritedSize[0x0220])
	 */
	class ATOCManager : public AActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                       SceneComponent;                                          // 0x0228(0x0008) Edit, ExportObject, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODAudioComponent*                                   AudioComponent;                                          // 0x0230(0x0008) Edit, ExportObject, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UFMODEvent*                                            TocEvent;                                                // 0x0238(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FTOCData                                              CurrentTOCData;                                          // 0x0240(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, EditConst, Protected, NativeAccessSpecifierProtected
		TArray<struct FTOCData>                                      QueuedTOCData;                                           // 0x0258(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.tate, EditConst, Protected, NativeAccessSpecifierProtected

	public:
		void StartTOCResponse(const class FString& Line, bool bIsNetworked, ETOCPriority Priority);
		void Multicast_PlayTOCSound2D(const class FString& Filename);
		void IterateTOCQueue();
		bool IsTOCSpeakingLine(const class FString& Line);
		bool IsTOCSpeaking();
		class ATOCManager* Get();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TugOfWarGS
	 * Size -> 0x0008 (FullSize[0x09E0] - InheritedSize[0x09D8])
	 */
	class ATugOfWarGS : public AReadyOrNotGameState
	{
	public:
		class ATugOfWarMover*                                        Mover;                                                   // 0x09D8(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SoftCoverCombatMove
	 * Size -> 0x0008 (FullSize[0x0220] - InheritedSize[0x0218])
	 */
	class USoftCoverCombatMove : public UBaseCombatMoveActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0218(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.VisibilityBlockingVolume
	 * Size -> 0x0000 (FullSize[0x0258] - InheritedSize[0x0258])
	 */
	class AVisibilityBlockingVolume : public AVolume
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.RescueAllOfTheCivilians
	 * Size -> 0x0028 (FullSize[0x0298] - InheritedSize[0x0270])
	 */
	class ARescueAllOfTheCivilians : public AObjective
	{
	public:
		unsigned char                                                UnknownData_0000[0x28];                                  // 0x0270(0x0028) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.WeaponWheelWidget
	 * Size -> 0x0010 (FullSize[0x0410] - InheritedSize[0x0400])
	 */
	class UWeaponWheelWidget : public URadialWidgetBase
	{
	public:
		TArray<class FName>                                          Categories;                                              // 0x0400(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, Protected, NativeAccessSpecifierProtected

	public:
		bool RemoveNullItemsFromCategory(const class FName& WeaponWheelCategoryName);
		bool RemoveNullItemsFromAllCategories();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SoundData
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class USoundData : public UDataAsset
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.RescueCivilianByTag
	 * Size -> 0x0040 (FullSize[0x02B0] - InheritedSize[0x0270])
	 */
	class ARescueCivilianByTag : public AObjective
	{
	public:
		unsigned char                                                UnknownData_0000[0x30];                                  // 0x0270(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                  CivilianTag;                                             // 0x02A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAllowIncapacitation;                                    // 0x02A8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x02A9(0x0007) MISSED OFFSET (PADDING)

	public:
		bool HasNeutralizedCivilianByTag(const class FName& Tag, bool* bArrested);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TocSpeechData
	 * Size -> 0x00B8 (FullSize[0x00E8] - InheritedSize[0x0030])
	 */
	class UTocSpeechData : public UDataAsset
	{
	public:
		class USoundCue*                                             CivilianIncapacitated;                                   // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundCue*                                             CivilianDead;                                            // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundCue*                                             CivilianRestrained;                                      // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundCue*                                             SuspectIncapacitated;                                    // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundCue*                                             SuspectDead;                                             // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundCue*                                             SuspectRestrained;                                       // 0x0058(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundCue*                                             OfficerDown;                                             // 0x0060(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundCue*                                             DOA;                                                     // 0x0068(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            SWATVictory;                                             // 0x0070(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            SuspectVictory;                                          // 0x0078(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            SWATInCustody;                                           // 0x0080(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            SuspectInCustody_MP;                                     // 0x0088(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            SWATReinforcements;                                      // 0x0090(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            SuspectReinforcements;                                   // 0x0098(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            BothTeamsReinforcements;                                 // 0x00A0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            SWATFriendlyFire;                                        // 0x00A8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            SuspectFriendlyFire;                                     // 0x00B0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            VIPEscorted;                                             // 0x00B8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            VIPExecuted;                                             // 0x00C0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            SWATKilledVIP;                                           // 0x00C8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            SuspectKilledVIP;                                        // 0x00D0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            VIPInCustody;                                            // 0x00D8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            VIPReleased;                                             // 0x00E0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TutorialMessageVolume
	 * Size -> 0x0050 (FullSize[0x02A0] - InheritedSize[0x0250])
	 */
	class ATutorialMessageVolume : public AReadyOrNotTriggerVolume
	{
	public:
		class FString                                                MessageMapID;                                            // 0x0250(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsBigPopUp;                                             // 0x0260(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHasDisplayedMessage;                                    // 0x0261(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x6];                                   // 0x0262(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                  MessageTitle;                                            // 0x0268(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<class FText>                                          MessageContent;                                          // 0x0280(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTutorialActionPromptSlot>                     MessageActions;                                          // 0x0290(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		void TutorialBoxEndOverlap(class AActor* ThisActor, class AActor* OtherActor);
		void TutorialBoxBeginOverlap(class AActor* ThisActor, class AActor* OtherActor);
		void GenerateMessageContent();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.RespondToPlayerGaze
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IRespondToPlayerGaze : public IInterface
	{
	public:
		void OnPlayerGazeStarted(class APlayerCharacter* Gazer);
		void OnPlayerGazeEnded(class APlayerCharacter* Gazer);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.VOIPTalkerEntryWidget
	 * Size -> 0x0070 (FullSize[0x02D0] - InheritedSize[0x0260])
	 */
	class UVOIPTalkerEntryWidget : public UUserWidget
	{
	public:
		TMap<ETeamType, struct FSlateColor>                          VoiceTypeColorMap;                                       // 0x0260(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class UTextBlock*                                            PlayerName;                                              // 0x02B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                            PlayerChannel;                                           // 0x02B8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                VoiceImage;                                              // 0x02C0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AReadyOrNotPlayerState*                                PlayerState;                                             // 0x02C8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		class FText GetVoiceTypeText();
		struct FSlateColor GetVoiceTypeColor();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.VisualEffect
	 * Size -> 0x0008 (FullSize[0x0280] - InheritedSize[0x0278])
	 */
	class UVisualEffect : public UBaseWidget
	{
	public:
		float                                                        Impact;                                                  // 0x0278(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x027C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.RoNAnimInstance_HumanBase
	 * Size -> 0x14A8 (FullSize[0x1760] - InheritedSize[0x02B8])
	 */
	class URoNAnimInstance_HumanBase : public UAnimInstance
	{
	public:
		class URoNMoveStyleComponent*                                MoveStyleComponent;                                      // 0x02B8(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xC];                                   // 0x02C0(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bIsStrafing;                                             // 0x02CC(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x02CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRoNStyleSlotData                                     Slot0;                                                   // 0x02D0(0x0250) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FRoNStyleSlotData                                     Slot1;                                                   // 0x0520(0x0250) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FRoNStyleSlotData                                     Slot2;                                                   // 0x0770(0x0250) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FRoNStyleSlotData                                     Slot3;                                                   // 0x09C0(0x0250) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FRoNStyleSlotData                                     Slot4;                                                   // 0x0C10(0x0250) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FRoNStyleSlotData                                     Slot5;                                                   // 0x0E60(0x0250) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FRoNStyleSlotData                                     Slot6;                                                   // 0x10B0(0x0250) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FRoNStyleIdleData                                     IdleData_Default;                                        // 0x1300(0x0010) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FRoNStyleTurnData                                     TurnData_Default;                                        // 0x1310(0x0048) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FRoNGaitTransitionData                                TransitionData_Default;                                  // 0x1358(0x0120) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FRoNGaitLocomotionData                                LocomotionData_Default;                                  // 0x1478(0x00C0) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class UBlendSpace*                                           StrafeBS_Default;                                        // 0x1538(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpace*                                           NonStrafeBS_Default;                                     // 0x1540(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SlotBlendTime;                                           // 0x1548(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DefaultSlotBlendTime;                                    // 0x154C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        AimOffsetAlpha;                                          // 0x1550(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        StrafeBlendTime;                                         // 0x1554(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SlopeWarpingAlpha;                                       // 0x1558(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsMoveStyleSlotBActive;                                 // 0x155C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x3];                                   // 0x155D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      SlotIdx;                                                 // 0x1560(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                 HeadLookRotation;                                        // 0x1564(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x10];                                  // 0x1570(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        Lean;                                                    // 0x1580(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LeanClamped;                                             // 0x1584(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LeanFactor;                                              // 0x1588(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LeanInterpSpeed;                                         // 0x158C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        AdjustedPlayrate;                                        // 0x1590(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SpeedScaling;                                            // 0x1594(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        PlayrateClampMax;                                        // 0x1598(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      CurrentIdleIndex;                                        // 0x159C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EStrafeDirection                                             CurrentStrafeDirection;                                  // 0x15A0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x7];                                   // 0x15A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        StrafeDirectionAngle;                                    // 0x15A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                AimOffsetInterpolated;                                   // 0x15AC(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bInRagdoll;                                              // 0x15B4(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRecoveringFromRagdoll;                                  // 0x15B5(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsDead;                                                 // 0x15B6(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsPlayingDeathAnim;                                     // 0x15B7(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FWorldBuildingAnimState                               WorldBuildingAnimState;                                  // 0x15B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		struct FCarryArrestedAnimState                               CarryArrestAnimState;                                    // 0x15C8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		struct FTakeHostageAnimState                                 TakeHostageAnimState;                                    // 0x15D0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		EAnimWeaponType                                              CurWeaponType;                                           // 0x15E8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x7];                                   // 0x15E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                         IncapacitationLoopAnim;                                  // 0x15F0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsArrested;                                             // 0x15F8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsArrestedAsRagdoll;                                    // 0x15F9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsBeingArrested;                                        // 0x15FA(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsBeingArrestedAsRagdoll;                               // 0x15FB(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSurrendered;                                            // 0x15FC(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsCarried;                                              // 0x15FD(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsGetUpPlaying;                                         // 0x15FE(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x1];                                   // 0x15FF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bIncapacitated;                                          // 0x1600(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bEnableIKProcess;                                        // 0x1601(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsFemale;                                               // 0x1602(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsUnarmed;                                              // 0x1603(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsSWAT;                                                 // 0x1604(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsCrouching;                                            // 0x1605(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsArrestedAndDead;                                      // 0x1606(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0x1];                                   // 0x1607(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCoverAnimStateMachineData                            CoverAnimStateMachineData;                               // 0x1608(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FHidingAnimStateMachineData                           HidingAnimStateMachineData;                              // 0x1620(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		struct FHoleTraversalAnimStateMachineData                    HoleTraversalAnimStateMachineData;                       // 0x1630(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		float                                                        LeftArmIKAlpha;                                          // 0x1640(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RightArmIKAlpha;                                         // 0x1644(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ArmsOnlySlotAlpha;                                       // 0x1648(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LeftArmOnlySlotAlpha;                                    // 0x164C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        HandAdditiveLockOverride;                                // 0x1650(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bWeaponDown;                                             // 0x1654(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsPistolAndWeaponDown;                                  // 0x1655(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsPistol;                                               // 0x1656(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0008[0x9];                                   // 0x1657(0x0009) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequenceBase*                                     Add_Lowered_Override;                                    // 0x1660(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Add_Shouldered_Override;                                 // 0x1668(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsReloading;                                            // 0x1670(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0009[0x3];                                   // 0x1671(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        FinalAimOffsetAlpha;                                     // 0x1674(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAnyMontageIsActive;                                     // 0x1678(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bFullBodyMontagePlaying;                                 // 0x1679(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bUpperBodyMontagePlaying;                                // 0x167A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bInteractionMontagePlaying;                              // 0x167B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bFullOrInteractionMontagePlaying;                        // 0x167C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemOverrideRule                                            CurOverrideRule;                                         // 0x167D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsLoweredSet;                                           // 0x167E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAllowTurnInPlace;                                       // 0x167F(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TurnInPlaceSpeedMultiplier;                              // 0x1680(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        YawOffsetLimit;                                          // 0x1684(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAnimTurnInPlaceAnimSet                               TurnInPlaceAnimSet;                                      // 0x1688(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FAnimTurnInPlaceState                                 TurnInPlaceState;                                        // 0x16A0(0x0058) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		bool                                                         bExitTurnRecoveryIfMoving;                               // 0x16F8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0010[0x3];                                   // 0x16F9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCachedAnimStateData                                  TurnAnimStateData;                                       // 0x16FC(0x001C) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		bool                                                         bIsTurnInPlaceStateRelevant;                             // 0x1718(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0011[0x3];                                   // 0x1719(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        VelocityInterpTime;                                      // 0x171C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  VelocitySmoothed;                                        // 0x1720(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDisableAdditiveOverrides;                               // 0x172C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0012[0x3];                                   // 0x172D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                        AdditiveDisableTagList;                                  // 0x1730(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                        move_x;                                                  // 0x1740(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        move_y;                                                  // 0x1744(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsHostageTaker;                                         // 0x1748(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsHostage;                                              // 0x1749(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsHostageOrHostageTaker;                                // 0x174A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0013[0x1];                                   // 0x174B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MoveStyleBlendCoolDown;                                  // 0x174C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0014[0x4];                                   // 0x1750(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bMoveStyleChanging;                                      // 0x1754(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0015[0xB];                                   // 0x1755(0x000B) MISSED OFFSET (PADDING)

	public:
		void UpdateMoveStyleDataFromComp(class URoNMoveStyleComponent* MoveStyleComp);
		void UpdateGaitDataFromComp(class URoNMoveStyleComponent* MoveStyleComp);
		void SetMoveStyleDataFromComp(class URoNMoveStyleComponent* MoveStyleComp);
		struct FRotator GetLookAtRotation();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SoundNodeVolume
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	class USoundNodeVolume : public USoundNodeAssetReferencer
	{
	public:
		float                                                        VolumeAdjust;                                            // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ToggleDoorActivity
	 * Size -> 0x0008 (FullSize[0x0220] - InheritedSize[0x0218])
	 */
	class UToggleDoorActivity : public UDoorInteractionActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0218(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.RoNAnimInstance_PlayerFP
	 * Size -> 0x0090 (FullSize[0x0510] - InheritedSize[0x0480])
	 */
	class URoNAnimInstance_PlayerFP : public UReadyOrNotAnimInstance
	{
	public:
		class UReadyOrNotWeaponAnimData*                             LastWeaponAnimData;                                      // 0x0480(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReadyOrNotWeaponAnimData*                             EditorWeaponAnimData;                                    // 0x0488(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LeanAngleY;                                              // 0x0490(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LeanAngleZ;                                              // 0x0494(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                 MeshControlRotation;                                     // 0x0498(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                  MeshPostureLeanOffset;                                   // 0x04A4(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  MeshWeaponOffset;                                        // 0x04B0(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                 MeshWeaponRotation;                                      // 0x04BC(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                 MeshWeaponFreeAimRotation;                               // 0x04C8(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                  MeshWeaponLeanOffset;                                    // 0x04D4(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                 MeshWeaponLeanRotation;                                  // 0x04E0(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x04EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkeletalMeshComponent*                                TPMeshReference;                                         // 0x04F0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LazySpringStrength;                                      // 0x04F8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ADS_Movement_Weight;                                     // 0x04FC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        InteractionSlotAlpha;                                    // 0x0500(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DefaultSlotAlpha;                                        // 0x0504(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RollMoveInput;                                           // 0x0508(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x050C(0x0004) MISSED OFFSET (PADDING)

	public:
		void OnReloadComplete();
		void OnHolsterComplete();
		void OnC2Detonation();
		class UBlendSpaceBase* GetPlayerBlendspace_FP(EBaseBlendspaces_FP BlendspaceName);
		class UAnimSequenceBase* GetPlayerAnimation_FP(EBaseAnimType_FP AnimName);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TugOfWarMover
	 * Size -> 0x0048 (FullSize[0x0268] - InheritedSize[0x0220])
	 */
	class ATugOfWarMover : public AActor
	{
	public:
		class USplineComponent*                                      MoverPath;                                               // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USkeletalMeshComponent*                                MoverMesh;                                               // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x0230(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MoverSpeed;                                              // 0x0240(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bInvertVictoryPositions;                                 // 0x0244(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bMoverForward;                                           // 0x0245(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bMoverMoving;                                            // 0x0246(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x1];                                   // 0x0247(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MoverStartingPosition;                                   // 0x0248(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MoverCurrentPosition;                                    // 0x024C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bContested;                                              // 0x0250(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x7];                                   // 0x0251(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class APlayerCharacter*>                              Influencers;                                             // 0x0258(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TrackingCombatMove
	 * Size -> 0x0020 (FullSize[0x0238] - InheritedSize[0x0218])
	 */
	class UTrackingCombatMove : public UBaseCombatMoveActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x20];                                  // 0x0218(0x0020) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.RoNAnimInstance_PlayerTP
	 * Size -> 0x0AE0 (FullSize[0x0F60] - InheritedSize[0x0480])
	 */
	class URoNAnimInstance_PlayerTP : public UReadyOrNotAnimInstance
	{
	public:
		struct FReadyOrNotAnimInstanceProxyTP                        Proxy;                                                   // 0x0480(0x0770) BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic
		class UReadyOrNotWeaponAnimData*                             LastAnimWeaponData;                                      // 0x0BF0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReadyOrNotWeaponAnimData*                             EditorWeaponAnimData;                                    // 0x0BF8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bWeaponDown;                                             // 0x0C00(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsAiming;                                               // 0x0C01(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsShieldEquipped;                                       // 0x0C02(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x1];                                   // 0x0C03(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        AimingAlpha;                                             // 0x0C04(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLeanLeft;                                               // 0x0C08(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLeanRight;                                              // 0x0C09(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x2];                                   // 0x0C0A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        QuickLeanLeftAmount;                                     // 0x0C0C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        QuickLeanRightAmount;                                    // 0x0C10(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        QuickLeanLeftAlpha;                                      // 0x0C14(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        QuickLeanRightAlpha;                                     // 0x0C18(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        QuickLeanIntensity;                                      // 0x0C1C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FootIKValue;                                             // 0x0C20(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        FootIKAlpha;                                             // 0x0C24(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bRagdoll;                                                // 0x0C28(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsPlayingDeathAnim;                                     // 0x0C29(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bArrested;                                               // 0x0C2A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsDead;                                                 // 0x0C2B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDeathAnimEnd;                                           // 0x0C2C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bStunned;                                                // 0x0C2D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bTased;                                                  // 0x0C2E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bOnLadder;                                               // 0x0C2F(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LadderUpDownMovement;                                    // 0x0C30(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LeanAngleY;                                              // 0x0C34(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LeanAngleZ;                                              // 0x0C38(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCoverLeft;                                              // 0x0C3C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCoverRight;                                             // 0x0C3D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCoverMiddle;                                            // 0x0C3E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCoverLeftLow;                                           // 0x0C3F(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCoverRightLow;                                          // 0x0C40(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCoverPeek;                                              // 0x0C41(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x2];                                   // 0x0C42(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        AimOffsetAlpha;                                          // 0x0C44(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                AimOffsets;                                              // 0x0C48(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bJumpStartTrigger;                                       // 0x0C50(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x3];                                   // 0x0C51(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        SmoothMappedLeanToAnimStandLeft;                         // 0x0C54(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SmoothMappedLeanToAnimStandRight;                        // 0x0C58(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SmoothMappedLeanToAnimCrouchLeft;                        // 0x0C5C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SmoothMappedLeanToAnimCrouchRight;                       // 0x0C60(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        Speed_tp_rifle_stand_sprint_f;                           // 0x0C64(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Crouch_Idle_Pose_Low_TP;                                 // 0x0C68(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Crouch_Idle_Pose_Up_TP;                                  // 0x0C70(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Crouch_Idle_Pose_Shld_TP;                                // 0x0C78(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Crouch_Idle_Pose_Sights_TP;                              // 0x0C80(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Crouch_Idle_Pose_Ret_TP;                                 // 0x0C88(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Crouch_Idle_Pose_Ovr_TP;                                 // 0x0C90(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Idle_Pose_Low_TP;                                        // 0x0C98(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Idle_Pose_Up_TP;                                         // 0x0CA0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Idle_Pose_Shld_TP;                                       // 0x0CA8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Idle_Pose_Sights_TP;                                     // 0x0CB0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Idle_Pose_Ret_TP;                                        // 0x0CB8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Idle_Pose_Ovr_TP;                                        // 0x0CC0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Idle_Pose_VFG_TP;                                        // 0x0CC8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Idle_Pose_AFG_TP;                                        // 0x0CD0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequenceBase*                                     Idle_Pose_HSTOP_TP;                                      // 0x0CD8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLeaningLeftNotCrouching;                                // 0x0CE0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bNotLeaningLeftOrCrouching;                              // 0x0CE1(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bNotLeaningLeftOrNotCrouching;                           // 0x0CE2(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLeaningRightNotCrouching;                               // 0x0CE3(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bNotLeaningRightOrCrouching;                             // 0x0CE4(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bNotLeaningRightOrNotCrouching;                          // 0x0CE5(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCrouchingAndMoving;                                     // 0x0CE6(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bNotCrouchingAndMoving;                                  // 0x0CE7(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAimingAndNotDeployable;                                 // 0x0CE8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x3];                                   // 0x0CE9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        WalkSpeedForward;                                        // 0x0CEC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WalkSpeedLeft;                                           // 0x0CF0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WalkSpeedRight;                                          // 0x0CF4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WalkSpeedBackward;                                       // 0x0CF8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CrouchWalkSpeedForward;                                  // 0x0CFC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CrouchWalkSpeedLeft;                                     // 0x0D00(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CrouchWalkSpeedRight;                                    // 0x0D04(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CrouchWalkSpeedBackward;                                 // 0x0D08(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RunSpeedForward;                                         // 0x0D0C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RunSpeedLeft;                                            // 0x0D10(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RunSpeedRight;                                           // 0x0D14(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RunSpeedBackward;                                        // 0x0D18(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLessThanPointOneSecondOnRelevantAnim;                   // 0x0D1C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsInCombatOrAlerted;                                    // 0x0D1D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bMoving;                                                 // 0x0D1E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsAlerted;                                              // 0x0D1F(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        AlertAlpha;                                              // 0x0D20(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsInCombat;                                             // 0x0D24(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIsSurrendering;                                         // 0x0D25(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSprayed;                                                // 0x0D26(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bStung;                                                  // 0x0D27(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPseudoSpeedType                                             CurPseudoSpeed;                                          // 0x0D28(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bFemale;                                                 // 0x0D29(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bChild;                                                  // 0x0D2A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHasInjury;                                              // 0x0D2B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        AnimSpeedFwdPlayrateSync;                                // 0x0D2C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        AnimSpeedSidePlayrateSync;                               // 0x0D30(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        AnimSpeedPlayrateSync;                                   // 0x0D34(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        RetentionAlpha;                                          // 0x0D38(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LoweredAlpha;                                            // 0x0D3C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x8];                                   // 0x0D40(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        SightAlpha;                                              // 0x0D48(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LoweredCooldownTime;                                     // 0x0D4C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         IsLoweredUp;                                             // 0x0D50(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x13];                                  // 0x0D51(0x0013) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        ArmsOnlySlotAlpha;                                       // 0x0D64(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        LeftArmOnlySlotAlpha;                                    // 0x0D68(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        VelocityInterpTime;                                      // 0x0D6C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  VelocitySmoothed;                                        // 0x0D70(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        SpeedScaling;                                            // 0x0D7C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        PlayrateClampMax;                                        // 0x0D80(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAnimCharacterMovementSnapshot                        CharMovementSnapshot;                                    // 0x0D84(0x007C) Edit, BlueprintVisible, EditConst, NoDestructor, NativeAccessSpecifierPublic
		float                                                        PostPivotTriggerThreshold;                               // 0x0E00(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCardinalDirectionSnapshot                            PivotingCardinalDirSnapShot;                             // 0x0E04(0x0018) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0xC];                                   // 0x0E1C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerCharacter*                                      CharacterRef;                                            // 0x0E28(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ACyberneticCharacter*                                  CharacterAiRef;                                          // 0x0E30(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bUseDistanceMatching;                                    // 0x0E38(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDistanceMatchingType                                        DistanceMatchingCurrentState;                            // 0x0E39(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0008[0x2];                                   // 0x0E3A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPredictionResult                                     StartMarker;                                             // 0x0E3C(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		struct FPredictionResult                                     StopMarker;                                              // 0x0E5C(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		struct FPredictionResult                                     PivotMarker;                                             // 0x0E7C(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		struct FPredictionResult                                     PostPivotMarker;                                         // 0x0E9C(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		struct FPredictionResult                                     TakeOffMarker;                                           // 0x0EBC(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		struct FPredictionResult                                     ApexMarker;                                              // 0x0EDC(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		struct FPredictionResult                                     LandingMarker;                                           // 0x0EFC(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		EMoveDirectionExt                                            CurrentPivotDirectionExt;                                // 0x0F1C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bPivotDirectionBroken;                                   // 0x0F1D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCanPivotInCurDirection;                                 // 0x0F1E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSMPrePivotRuleset;                                      // 0x0F1F(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bStartDirectionBroken;                                   // 0x0F20(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0009[0x3];                                   // 0x0F21(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        ReplicatedMaxSpeed;                                      // 0x0F24(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSMStartRuleset;                                         // 0x0F28(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSMStopRuleset;                                          // 0x0F29(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0010[0x2];                                   // 0x0F2A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                  PelvisDefaultWorldPos;                                   // 0x0F2C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  CrouchedPelvisDefaultWorldPos;                           // 0x0F38(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  CrouchedPelvisMovingWorldPos;                            // 0x0F44(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                  CrouchedPelvisCurrentWorldPos;                           // 0x0F50(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0011[0x4];                                   // 0x0F5C(0x0004) MISSED OFFSET (PADDING)

	public:
		class UAnimSequenceBase* GetPlayerAnimation_TP(EBaseAnimType_TP AnimName);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TutorialTextPrompt_Widget
	 * Size -> 0x0000 (FullSize[0x0260] - InheritedSize[0x0260])
	 */
	class UTutorialTextPrompt_Widget : public UUserWidget
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TrapActivatee
	 * Size -> 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
	 */
	class ATrapActivatee : public AActor
	{
	public:
		bool                                                         bDisarmed;                                               // 0x0220(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0221(0x0007) MISSED OFFSET (PADDING)

	public:
		void OnTrapFired(class AActor* Triggerer, class ATrapActivator* Activator);
		void OnTrapDisarmed(class AActor* Disarmer);
		void OnActivatorDisarmed(class AActor* Disarmer, class ATrapActivator* Activator);
		void FireTrap(class AActor* ActivatingActor, class ATrapActivator* Activator);
		void DisarmTrap(class AActor* Disarmer);
		void DisarmedActivator(class AActor* Disarmer, class ATrapActivator* Activator);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.RoNMoveStyleCharacter
	 * Size -> 0x0028 (FullSize[0x04E0] - InheritedSize[0x04B8])
	 */
	class ARoNMoveStyleCharacter : public ACharacter
	{
	public:
		class USpringArmComponent*                                   CameraBoom;                                              // 0x04B8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCameraComponent*                                      FollowCamera;                                            // 0x04C0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URoNMoveStyleComponent*                                MoveStyle;                                               // 0x04C8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        BaseTurnRate;                                            // 0x04D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        BaseLookUpRate;                                          // 0x04D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x04D8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TaserReactionVolume
	 * Size -> 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
	 */
	class ATaserReactionVolume : public AActor
	{
	public:
		class UBoxComponent*                                         Bounds;                                                  // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void OnTaserStunDelivered(class AReadyOrNotCharacter* Character, class ATaser* Taser);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TugOfWarZone
	 * Size -> 0x0048 (FullSize[0x0268] - InheritedSize[0x0220])
	 */
	class ATugOfWarZone : public AActor
	{
	public:
		bool                                                         bZoneDisabled;                                           // 0x0220(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0221(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ATugOfWarMover*                                        Mover;                                                   // 0x0228(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBoxComponent*                                         Bounds;                                                  // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x30];                                  // 0x0238(0x0030) MISSED OFFSET (PADDING)

	public:
		void OnOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		void OnInfluencerKilled(class AActor* Causer, class ACharacter* InstigatorCharacter, class ACharacter* KilledCharacter, const struct FDamageEvent& DamageEvent, class APlayerState* LastPlayerState);
		void OnInfluencerArrested(class APlayerCharacter* ArrestedCharacter, class APlayerCharacter* InstigatorCharacter);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.HumanCharacterHUD
	 * Size -> 0x0008 (FullSize[0x0280] - InheritedSize[0x0278])
	 */
	class UHumanCharacterHUD : public UBaseWidget
	{
	public:
		struct FVector2D                                LastImpulse;                                             // 0x0278(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void UpdateMedicalHealWidget(float CurrentHealth);
		void UpdateMagBeforeReload();
		void TeamChatPressed();
		void StopShowingScopeMask();
		void StartShowingScopeMask(class UTexture2D* ScopeReticle);
		void ShowNewMagazine();
		void ShowMedicalHealWidget(EMedicalHealScreen HealScreen, const class FName& InHealerName, const class FName& InHealeeName, float InCurrentHealth, float InMinHealth, float InMaxHealth);
		void ShowMagDiscarded();
		void ShowMagCheck();
		void ShowMagAfterReload();
		void ShowFireModeChanged(EFireMode newFireMode);
		void ShowBatteringRamIcon();
		void SetHudAlpha(float Alpha);
		void OnReceivedHit(bool bHeadHit, bool bTorsoHit, bool bLeftArmHit, bool bRightArmHit, bool bLeftLegHit, bool bRightLegHit);
		void OnPlayerHealed(bool bHeadHealed, bool bTorsoHealed, bool bLeftArmHealed, bool bRightArmHealed, bool bLeftLegHealed, bool bRightLegHealed);
		void OnLimbBroken(bool bHeadBroken, bool bLeftArmBroken, bool bRightArmBroken, bool bLeftLegBroken, bool bRightLegBroken);
		void OnActionCompleted(ECompletedActionType Type);
		void HideMedicalHealWidget();
		void HideMagCheck();
		void HideBatteringRamIcon();
		void FadeHudAlpha(float FadeFrom, float FadeTo, float Time);
		void CompleteMedicalHealWidget();
		void ChatPressed();
		void CenterPrint(const class FName& MessageType, float Duration, class APlayerCharacter* Other);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SpectatorCharacterHUD
	 * Size -> 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
	 */
	class USpectatorCharacterHUD : public UBaseWidget
	{
	public:
		void TeamChatPressed();
		void OnNewCharacterViewed(class APlayerCharacter* NewViewTarget);
		void ChatPressed();
		void CenterPrint(const class FName& MessageType, float Duration, class APlayerCharacter* Other);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.WaitActivity
	 * Size -> 0x0000 (FullSize[0x01F8] - InheritedSize[0x01F8])
	 */
	class UWaitActivity : public UBaseActivity
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TeamStackUpActivity
	 * Size -> 0x0038 (FullSize[0x0260] - InheritedSize[0x0228])
	 */
	class UTeamStackUpActivity : public UTeamBaseActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0228(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ACyberneticCharacter*                                  DoorChecker;                                             // 0x0230(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ADoor*                                                 StackUpDoor;                                             // 0x0238(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x20];                                  // 0x0240(0x0020) MISSED OFFSET (PADDING)

	public:
		void PerformStackUpStage(float DeltaTime, float Uptime);
		void PerformCheckStage(float DeltaTime, float Uptime);
		void OnDoorOpened();
		void OnDoorChecked();
		class ADoor* GetStackUpDoor();
		EDoorCheckResult GetDoorCheckResult();
		class ACyberneticCharacter* GetCharacterAtSquadPositionInStackUpArea(ESquadPosition SquadPosition, EStackupGenArea StackupArea);
		void ExitStackupStage();
		void ExitCheckStage();
		void EnterStackupStage();
		void EnterCheckStage();
		bool CanPerformCheck();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.WidgetsData
	 * Size -> 0x0248 (FullSize[0x0278] - InheritedSize[0x0030])
	 */
	class UWidgetsData : public UDataAsset
	{
	public:
		class UUserWidget*                                           MagCheckUI;                                              // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TSoftClassPtr<class UUserWidget>                             FireModeUI;                                              // 0x0038(0x0024) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x005C(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TSoftClassPtr<class UUserWidget>                             StartupMenu;                                             // 0x0060(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x0084(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TSoftClassPtr<class UUserWidget>                             AuthenticationMenu;                                      // 0x0088(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x00AC(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TSoftClassPtr<class UUserWidget>                             MainMenu;                                                // 0x00B0(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x4];                                   // 0x00D4(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TSoftClassPtr<class UUserWidget>                             OptionsMenu;                                             // 0x00D8(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x4];                                   // 0x00FC(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TSoftClassPtr<class UUserWidget>                             CustomizationMenu;                                       // 0x0100(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x4];                                   // 0x0124(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TSoftClassPtr<class UUserWidget>                             ChatBox;                                                 // 0x0128(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x4];                                   // 0x014C(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TArray<TSoftClassPtr<class UUserWidget>>                     Overlays;                                                // 0x0150(0x0010) Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		TSoftClassPtr<class UUserWidget>                             Scoreboard;                                              // 0x0160(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0007[0x4];                                   // 0x0184(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UUserWidget*                                           LoadingScreen;                                           // 0x0188(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TSoftClassPtr<class UMessageDisplayBox>                      MessageDisplayBoxClass;                                  // 0x0190(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0008[0x4];                                   // 0x01B4(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TSoftClassPtr<class UUserWidget>                             Leaderboards;                                            // 0x01B8(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0009[0x4];                                   // 0x01DC(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TSoftClassPtr<class UUserWidget>                             CrosshairOverlay;                                        // 0x01E0(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0010[0x4];                                   // 0x0204(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TArray<class USoundBase*>                                    UISoundClasses;                                          // 0x0208(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TSoftClassPtr<class UUserWidget>                             EscapeMenu;                                              // 0x0218(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0011[0x4];                                   // 0x023C(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		TSoftClassPtr<class UTacticalAuthorityCommandWidget>         TacticalAuthorityWidget;                                 // 0x0240(0x0024) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0012[0x4];                                   // 0x0264(0x0004) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UWeaponWheelWidget*                                    WeaponWheelWidget;                                       // 0x0268(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBaseWidget*                                           ItemSelectionWidget;                                     // 0x0270(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.WorldDataGenerator
	 * Size -> 0x00D8 (FullSize[0x02F8] - InheritedSize[0x0220])
	 */
	class AWorldDataGenerator : public AInfo
	{
	public:
		class ADoor*                                                 DoorClass;                                               // 0x0220(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AThreatAwarenessActor*>                         IgnoredExitThreats;                                      // 0x0228(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                         bDoorwaysBlocked;                                        // 0x0238(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x0239(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        MaxRedBlueClearDistanceApart;                            // 0x023C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  OnlyOnMesh;                                              // 0x0240(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CullDistanceMultiplier;                                  // 0x0248(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        CullDistanceMaxBoundsMultiplier;                         // 0x024C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                                CullDistanceSettingsSaveName;                            // 0x0250(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FString, struct FSavedCullDistanceSettings>       SavedCullDistanceSettings;                               // 0x0260(0x0050) Edit, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x02B0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bHasWorldEverBeenGenerated;                              // 0x02B4(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x13];                                  // 0x02B5(0x0013) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSpawnerSavedData                                     SpawnerSavedData;                                        // 0x02C8(0x0020) Edit, EditConst, NativeAccessSpecifierPublic
		class UWorldGenSave*                                         WorldGenSave;                                            // 0x02E8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ADoor*                                                 CurrentBrokenDoor;                                       // 0x02F0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void VerifyWorldBuildingActivities();
		void UnblockAllDoorways();
		void SortAndTrimMaxVisibleThreats();
		void SetSpawnerSavedData(const struct FSpawnerSavedData& InSpawnerSavedData);
		void SaveCullDistanceSettings();
		void SaveAllScenarios();
		void ReportAllUnreachableSpawnsAndCoverToLog();
		void ReplaceAllDoors();
		void RemoveAllUnreachableThreats();
		void RemoveAllUnreachableStacks();
		void RemoveAllUnreachableSpawns();
		void RemoveAllUnreachableCover();
		void RemoveAllStackups();
		void RemoveAllOverlappingThreats();
		void PushThreatsAwayFromWalls();
		void PlacePatrolPointsOnAllThreats();
		void PlacePatrolPointsOnAllDoors();
		void NextBrokenDoor();
		void MultiplyAllCullDistances();
		void LoadCullDistanceSettings();
		void LinkSubdoors();
		void GetSpawnerSavedData(struct FSpawnerSavedData* OutSpawnerSavedData);
		void GenerateWorldThreatAwarenessActors();
		void GenerateWorld();
		void GenerateWebbedBreachPoints();
		void GenerateSwatLookAtPointsForEachThreat();
		void GenerateStackUpPoints();
		void GenerateSpawnHidingSpots();
		void GenerateInstancedStaticMesh();
		void GenerateCullDistances();
		void GenerateAllDoorThreatAwarenessActors();
		void GenerateAllDoorClearPoints();
		void FixCachedCullDistance();
		void DetermineAutomaticTrapOrientation();
		void DestroyAllThreats();
		void DestroyAllPatrolPoints();
		void CleanUpOverlappingThreats();
		void CapMaxCullDistanceByBoundsMultiplier();
		void CalculateAllExits();
		void BlockAllDoorways();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TeamBreachAndClearActivity
	 * Size -> 0x00A0 (FullSize[0x0300] - InheritedSize[0x0260])
	 */
	class UTeamBreachAndClearActivity : public UTeamStackUpActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0260(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AThreatAwarenessActor*                                 UsedClearPoint;                                          // 0x0268(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x0270(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ABaseGrenade*                                          LeaderLastEquippedGrenade;                               // 0x0278(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ABaseGrenade*                                          ThrownGrenade;                                           // 0x0280(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0xC];                                   // 0x0288(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        BreachStartDelay;                                        // 0x0294(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ClearStartDelay;                                         // 0x0298(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x4];                                   // 0x029C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ACyberneticCharacter*                                  DoorUser;                                                // 0x02A0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ACyberneticCharacter*                                  DoorBreacher;                                            // 0x02A8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ABaseItem*                                             DoorBreachItemClass;                                     // 0x02B0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ABaseItem*                                             DoorUseItemClass;                                        // 0x02B8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x8];                                   // 0x02C0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDoorBreachActivity*                                   DoorUseActivity;                                         // 0x02C8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0005[0x8];                                   // 0x02D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDoorBreachActivity*                                   DoorBreachActivity;                                      // 0x02D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0006[0x4];                                   // 0x02E0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        ClearWaitTime;                                           // 0x02E4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCustomDoorBreachActivity*                             CustomDoorUseActivityClass;                              // 0x02E8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0007[0x10];                                  // 0x02F0(0x0010) MISSED OFFSET (PADDING)

	public:
		void PerformClearStage(float DeltaTime, float Uptime);
		void PerformBreachStage(float DeltaTime, float Uptime);
		void OnDoorBreachFinished(class UBaseActivity* InActivity, class ACyberneticController* InController);
		void OnDoorBreacherReady();
		void OnDoorBreacherBreaching();
		bool IsFinishedClearing();
		void EnterClearStage();
		void EnterClearedStage();
		void EnterBreachStage();
		void DeployChemlight();
		bool CanPerformClear();
		bool CanPerformBreach();
		bool CanOpenDoor();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.WorldBuildingPlacementActor
	 * Size -> 0x0028 (FullSize[0x0248] - InheritedSize[0x0220])
	 */
	class AWorldBuildingPlacementActor : public AActor
	{
	public:
		class UWorldBuildingActivity*                                Activity;                                                // 0x0220(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDropGunBeforeActivity;                                  // 0x0228(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0229(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AAISpawn*                                              LinkedToSpawner;                                         // 0x0230(0x0008) Edit, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ACyberneticController*                                 InUseByController;                                       // 0x0238(0x0008) Edit, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                       DefaultScene;                                            // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void OnWorldBuildingActivityFinished(class UBaseActivity* InActivity, class ACyberneticController* CyberneticController);
		bool IsInUseByController();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TrapActivator
	 * Size -> 0x0018 (FullSize[0x0238] - InheritedSize[0x0220])
	 */
	class ATrapActivator : public AActor
	{
	public:
		TArray<class ATrapActivatee*>                                Activatees;                                              // 0x0220(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                         bDisarmed;                                               // 0x0230(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0231(0x0007) MISSED OFFSET (PADDING)

	public:
		bool ShouldFireTrap(float DeltaTime, class AActor** OutTrapActivator);
		void OnTrapDisarmed(class AActor* Disarmer);
		void OnTrapActivated(class AActor* Activator);
		void FireTrap(class AActor* Activator);
		void DisarmTrap(class AActor* Disarmer);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SoundPropagator
	 * Size -> 0x0078 (FullSize[0x0298] - InheritedSize[0x0220])
	 */
	class ASoundPropagator : public AActor
	{
	public:
		TMap<class APropagationPoint*, float>                        PropagationPoints;                                       // 0x0220(0x0050) Edit, BlueprintVisible, d.e.o.tate, NativeAccessSpecifierPublic
		bool                                                         bStopPropagationIfClosestToSound : 1;                    // 0x0270(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x0271(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        PathTracerRefreshRate;                                   // 0x0274(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        NavCheckRefreshRate;                                     // 0x0278(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bEnableDebugSpheres : 1;                                 // 0x027C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bEnableDebugPathPoints : 1;                              // 0x027C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x027D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                       SceneComponent;                                          // 0x0280(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UBoxComponent*                                         PropagationSwitchEnter;                                  // 0x0288(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UBoxComponent*                                         PropagationSwitchExit;                                   // 0x0290(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void OnPropagationExitOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		void OnPropagationEnterOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.WaitingCombatMove
	 * Size -> 0x0008 (FullSize[0x0220] - InheritedSize[0x0218])
	 */
	class UWaitingCombatMove : public UBaseCombatMoveActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0218(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ObjectiveWidget
	 * Size -> 0x0010 (FullSize[0x0288] - InheritedSize[0x0278])
	 */
	class UObjectiveWidget : public UBaseWidget
	{
	public:
		class UWidgetComponent*                                      OwningComponent;                                         // 0x0278(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETeamType                                                    ObjectiveTeam;                                           // 0x0280(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0281(0x0007) MISSED OFFSET (PADDING)

	public:
		void SetObjectiveType(EPlayerObjectiveMarkerType NewType);
		void SetObjectiveText(const class FText& NewText);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.WoundMeshActor
	 * Size -> 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
	 */
	class AWoundMeshActor : public AActor
	{
	public:
		class UStaticMeshComponent*                                  WoundStaticMesh;                                         // 0x0220(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void OnParentDestroyed(class AActor* Parent);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.UnlockDoorTeamQuestNode
	 * Size -> 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
	 */
	class UUnlockDoorTeamQuestNode : public UCheckDoorQuestNode
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.WorldGenSave
	 * Size -> 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
	 */
	class UWorldGenSave : public USaveGame
	{
	public:
		TArray<struct FSavedThreatAwarenessActors>                   SavedThreatAwarenessActors;                              // 0x0028(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FDoorSavedActors>                              SavedDoorActors;                                         // 0x0038(0x0010) ZeroConstructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.WallHoleTraversal
	 * Size -> 0x01A0 (FullSize[0x03C0] - InheritedSize[0x0220])
	 */
	class AWallHoleTraversal : public AActor
	{
	public:
		class USceneComponent*                                       SceneComponent;                                          // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bEnabled : 1;                                            // 0x0228(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0229(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                                Name;                                                    // 0x0230(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<TSoftObjectPtr<class AStaticMeshActor>>               IgnoredMeshActors;                                       // 0x0240(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, UObjectWrapper, NativeAccessSpecifierPublic
		float                                                        CooldownAfterUse;                                        // 0x0250(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        NavLinkProxyDistance;                                    // 0x0254(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x0258(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct PCoreUObject_FTransform                               EntryTriggerBoxTransform;                                // 0x0260(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                  EntryTriggerBoxExtent;                                   // 0x0290(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x029C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct PCoreUObject_FTransform                               ExitTriggerBoxTransform;                                 // 0x02A0(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                  ExitTriggerBoxExtent;                                    // 0x02D0(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x4];                                   // 0x02DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                          EntryAnim;                                               // 0x02E0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          LoopAnim;                                                // 0x02E8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          ExitAnim;                                                // 0x02F0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AAIController*                                         OccupiedByController;                                    // 0x02F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ANavLinkProxy*                                         NavLinkProxy;                                            // 0x0300(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TMap<class AController*, float>                              CooldownMap;                                             // 0x0308(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.tate, EditConst, Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0004[0x68];                                  // 0x0358(0x0068) MISSED OFFSET (PADDING)

	public:
		void TestForMeshes();
		bool IsCooldownActiveFor(class AController* InController);
		void AddCooldownFor(class AController* InController, float InCooldownTime);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.ZeuzMatchmakingWidget
	 * Size -> 0x0120 (FullSize[0x0380] - InheritedSize[0x0260])
	 */
	class UZeuzMatchmakingWidget : public UUserWidget
	{
	public:
		unsigned char                                                UnknownData_0000[0x48];                                  // 0x0260(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EMatchmakingStatus                                           MatchmakingStatus;                                       // 0x02A8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x02A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FZeuzMatchMakingStatus                                ZeuzMatchMakingStatus;                                   // 0x02B0(0x00D0) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected

	public:
		void TryConnectServer(const class FString& ConnectIp);
		void StopPartyMatchmaking();
		void StopMatchmaking();
		void StartPartyMatchmaking();
		void StartMatchmaking(const class FString& Region);
		void ResetMatchmaking();
		void OnZeuzMatchmakingUpdate(const struct FZeuzMatchMakingStatus& Status, const class FString& Error);
		void OnZeuzMatchmakingCreate(const struct FZeuzMatchMakingStatus& Status, const class FString& Error);
		void MatchmakingUpdate();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TrapActor
	 * Size -> 0x00C8 (FullSize[0x02E8] - InheritedSize[0x0220])
	 */
	class ATrapActor : public AActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x28];                                  // 0x0220(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMeshComponent*                                  TrapMeshComponent;                                       // 0x0248(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODAudioComponent*                                   TrapActivateAudioComponent;                              // 0x0250(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInteractableComponent*                                InteractableComponent;                                   // 0x0258(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UScoringComponent*                                     ScoringComponent;                                        // 0x0260(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USplineComponent*                                      SplineComponent;                                         // 0x0268(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                  CableMeshComponent;                                      // 0x0270(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCableComponent*                                       CutCableComponent1;                                      // 0x0278(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCableComponent*                                       CutCableComponent2;                                      // 0x0280(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBoxComponent*                                         TripWireTriggerComponent;                                // 0x0288(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAIPerceptionStimuliSourceComponent*                   PerceptionStimuliComp;                                   // 0x0290(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                       TrapRoot;                                                // 0x0298(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                                AttachedActor;                                           // 0x02A0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                                TrapName;                                                // 0x02A8(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETrapType                                                    TrapType;                                                // 0x02B8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETrapState                                                   TrapStatus;                                              // 0x02B9(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCanUseMultitoolWhenActivated;                           // 0x02BA(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bInitializeTrapOnBeginPlay;                              // 0x02BB(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x02BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMesh*                                           CableMesh;                                               // 0x02C0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                    CableMaterial;                                           // 0x02C8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               TrapTriggered;                                           // 0x02D0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0xF];                                   // 0x02D1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		unsigned char                                                UnknownData_0003[0x8];                                   // 0x02E0(0x0008) MISSED OFFSET (PADDING)

	public:
		void TrapTriggeredDelegate__DelegateSignature(class ATrapActor* Trap, class AReadyOrNotCharacter* TriggeredBy);
		void TrapInit();
		void TrapDeInit();
		void Server_OnTrapTriggered(class AReadyOrNotCharacter* TriggeredBy);
		void Server_OnTrapDisarmed();
		void OnTrapTriggered(class AReadyOrNotCharacter* TriggeredBy);
		void OnTrapDisarmed(class AReadyOrNotCharacter* DisarmedBy);
		void OnTrapAttached(class UTrapSpawnComponent* SpawningComponent);
		void Multicast_OnTrapTriggered(class AReadyOrNotCharacter* TriggeredBy);
		void Multicast_OnTrapDisarmed();
		void EnableOutline(EActorOutlineType OutlineType);
		void DisableOutline();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TeamCoverAreaActivity
	 * Size -> 0x0028 (FullSize[0x0250] - InheritedSize[0x0228])
	 */
	class UTeamCoverAreaActivity : public UTeamBaseActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x28];                                  // 0x0228(0x0028) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SpawnGenerator
	 * Size -> 0x0058 (FullSize[0x0278] - InheritedSize[0x0220])
	 */
	class ASpawnGenerator : public AActor
	{
	public:
		class USceneComponent*                                       SceneComponent;                                          // 0x0220(0x0008) Edit, ExportObject, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UBillboardComponent*                                   BillboardComponent;                                      // 0x0228(0x0008) Edit, ExportObject, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ETeamType                                                    SpawnTeam;                                               // 0x0230(0x0001) Edit, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x1];                                   // 0x0231(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint16_t                                                     Rows;                                                    // 0x0232(0x0002) Edit, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		uint16_t                                                     Columns;                                                 // 0x0234(0x0002) Edit, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x2];                                   // 0x0236(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        RowSpacing;                                              // 0x0238(0x0004) Edit, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        ColumnSpacing;                                           // 0x023C(0x0004) Edit, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bShowNodes : 1;                                          // 0x0240(0x0001) BIT_FIELD Edit, d.e.o.tate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0002[0x17];                                  // 0x0241(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class APlayerStart*>                                  PlayerStarts;                                            // 0x0258(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0003[0x10];                                  // 0x0268(0x0010) MISSED OFFSET (PADDING)

	public:
		void UpdatePlayerStartTags();
		void SelectAll();
		void RefreshSpawns();
		ETeamType GetSpawnTeam();
		TArray<struct FVector> GetNodes();
		TArray<class APlayerStart*> GetAllPlayerStarts();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Zipcuffs
	 * Size -> 0x0108 (FullSize[0x09D0] - InheritedSize[0x08C8])
	 */
	class AZipcuffs : public ABaseItem
	{
	public:
		class APlayerCharacter*                                      PendingArrestCharacter;                                  // 0x08C8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AReadyOrNotCharacter*                                  TargetedCharacter;                                       // 0x08D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bArresting;                                              // 0x08D8(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x08D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        ArrestMaxDistance;                                       // 0x08E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x08E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ECollisionChannel>                                    ArrestCollisionChannels;                                 // 0x08E8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class UAnimMontage*                                          UseZipcuffs_1P;                                          // 0x08F8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                          UseZipcuffs_3P;                                          // 0x0900(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ArrestTime;                                              // 0x0908(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0xC];                                   // 0x090C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInteractionsData*                                     ForcedInteractionData;                                   // 0x0918(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UInteractionsData*>                             StandingArrestInteractionSuspects;                       // 0x0920(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UInteractionsData*>                             StandingArrestInteractionCivilians;                      // 0x0930(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UInteractionsData*>                             PvPArrestInteraction;                                    // 0x0940(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class UInteractionsData*                                     ArrestRagdoll_Up;                                        // 0x0950(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInteractionsData*                                     ArrestRagdoll_Down;                                      // 0x0958(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInteractionsData*                                     ArrestRagdoll_Left;                                      // 0x0960(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInteractionsData*                                     ArrestRagdoll_Right;                                     // 0x0968(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, d.e.o.i, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APlacedZipcuffs*                                       SpawnedZipcuffsClass;                                    // 0x0970(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  ZipcuffBone;                                             // 0x0978(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct PCoreUObject_FTransform                               SpawnCuffsTransform;                                     // 0x0980(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                 SpawnCuffsRelativeRotation;                              // 0x09B0(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                  SpawnCuffsRelativeTranslation;                           // 0x09BC(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            FMODZipcuffsArrest;                                      // 0x09C8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void Server_ArrestStart(class AReadyOrNotCharacter* TargetedChar);
		void Server_ArrestComplete();
		void Server_ArrestCancelled();
		void OnRagdollArrestInteractionStarted();
		void OnRagdollArrestComplete_Slave(class AActor* Slave);
		void OnRagdollArrestComplete_Driver(class AActor* Driver);
		void Multicast_OnRagdollArrestStart(class AReadyOrNotCharacter* ArrestTarget);
		void Client_ArrestComplete();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TrapActorAttachedToDoor
	 * Size -> 0x0068 (FullSize[0x0350] - InheritedSize[0x02E8])
	 */
	class ATrapActorAttachedToDoor : public ATrapActor
	{
	public:
		class ADoor*                                                 AttachedToDoor;                                          // 0x02E8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        WireYPosition;                                           // 0x02F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0xC];                                   // 0x02F4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct PCoreUObject_FTransform                               CableTransform;                                          // 0x0300(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		TArray<class USplineMeshComponent*>                          CableMeshComponents;                                     // 0x0330(0x0010) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.tate, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		float                                                        CurveStrength;                                           // 0x0340(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                        MappedSplineLocation;                                    // 0x0344(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bChunk1Destroyed : 1;                                    // 0x0348(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bChunk2Destroyed : 1;                                    // 0x0348(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bSubdoorChunk1Destroyed : 1;                             // 0x0348(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                         bSubdoorChunk2Destroyed : 1;                             // 0x0348(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x0349(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.UObjectListener
	 * Size -> 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
	 */
	class AUObjectListener : public AActor
	{
	public:
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x0220(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TeamDeathmatchGM
	 * Size -> 0x0020 (FullSize[0x07D0] - InheritedSize[0x07B0])
	 */
	class ATeamDeathmatchGM : public AReadyOrNotGameMode_PVP
	{
	public:
		bool                                                         bSuddenDeath;                                            // 0x07B0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x07B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            MatchLoopMusic;                                          // 0x07B8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            MatchStartMusic;                                         // 0x07C0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFMODEvent*                                            MatchEndMusic;                                           // 0x07C8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SpawnSkeletalMeshAnimNotifyState
	 * Size -> 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
	 */
	class USpawnSkeletalMeshAnimNotifyState : public UAnimNotifyState
	{
	public:
		class USkeletalMesh*                                         SkeletalMeshToSpawn;                                     // 0x0030(0x0008) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimationAsset*                                       PlayAnimation;                                           // 0x0038(0x0008) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct PCoreUObject_FTransform                               MeshTransform;                                           // 0x0040(0x0030) Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                         bEnableWeaponFOVShader;                                  // 0x0070(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bOnlyOwnerSee;                                           // 0x0071(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bOwnerNoSee;                                             // 0x0072(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x1];                                   // 0x0073(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                  BoneToSpawnOn;                                           // 0x0074(0x0008) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x10];                                  // 0x007C(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bDestroyAtEnd;                                           // 0x008C(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSimulatePhysicsAtEnd;                                   // 0x008D(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x2];                                   // 0x008E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                  ForceVector;                                             // 0x0090(0x000C) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x4];                                   // 0x009C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASkeletalMeshActor*                                    SkeletalMeshActor;                                       // 0x00A0(0x0008) BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0004[0x8];                                   // 0x00A8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TeamDeathmatchGS
	 * Size -> 0x0000 (FullSize[0x09D8] - InheritedSize[0x09D8])
	 */
	class ATeamDeathmatchGS : public AReadyOrNotGameState
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TrapDamage
	 * Size -> 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
	 */
	class UTrapDamage : public UDamageType
	{
	public:
		bool                                                         bDestroyAllDoorChunks : 1;                               // 0x0040(0x0001) BIT_FIELD Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.WeaponCacheActor
	 * Size -> 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
	 */
	class AWeaponCacheActor : public AActor
	{
	public:
		TArray<class ABaseMagazineWeapon*>                           AvailableWeapons;                                        // 0x0220(0x0010) Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		class USceneComponent*                                       DefaultScene;                                            // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UArrowComponent*                                       ArrowComponent;                                          // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		class ABaseMagazineWeapon* GetRandomAvailableWeapon();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TrapSpawnComponent
	 * Size -> 0x0070 (FullSize[0x0120] - InheritedSize[0x00B0])
	 */
	class UTrapSpawnComponent : public UActorComponent
	{
	public:
		class FName                                                  TrapRoster;                                              // 0x00B0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  AttachToComponent;                                       // 0x00B8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  ComponentSocket;                                         // 0x00C0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x00C8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct PCoreUObject_FTransform                               TrapTransform;                                           // 0x00D0(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTrapSpawnType>                                TrapSpawnClasses;                                        // 0x0100(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                         bSpawnSelected;                                          // 0x0110(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xF];                                   // 0x0111(0x000F) MISSED OFFSET (PADDING)

	public:
		void OnSpawnSelected();
		void FinishTrapSpawning();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.UseabilityInterface
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class IUseabilityInterface : public IInterface
	{
	public:
		void OnFocusLost(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);
		void OnFocusGain(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);
		void MeleeInteract(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);
		void Interact(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);
		class UInteractableComponent* GetInteractableComponent();
		void Fire(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);
		void EndInteract(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);
		void EndFire(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);
		void DoubleTapInteract(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);
		float DetermineInteractionDistance();
		EInputEvent DetermineInputEvent();
		float DetermineCurrentProgress();
		class FName DetermineAnimatedIcon();
		class FText DetermineActionText();
		bool CanInteractThroughHitActors(const struct FHitResult& Hit);
		bool CanInteract();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TeamFallinActivity
	 * Size -> 0x0030 (FullSize[0x0258] - InheritedSize[0x0228])
	 */
	class UTeamFallinActivity : public UTeamBaseActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x30];                                  // 0x0228(0x0030) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TrapSpawnPoint
	 * Size -> 0x0010 (FullSize[0x02F8] - InheritedSize[0x02E8])
	 */
	class ATrapSpawnPoint : public ATrapActor
	{
	public:
		class UTrapSpawnComponent*                                   SpawnPoint;                                              // 0x02E8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bAlreadySpawned;                                         // 0x02F0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x02F1(0x0007) MISSED OFFSET (PADDING)

	public:
		void OnTrapSpawned(class UTrapSpawnComponent* TrapSpawnPoint);
		void FinishTrapSpawningFromRoster(class UTrapSpawnComponent* Spawner);
		void CheckForTrapDespawning();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SpawnStaticMeshAnimNotifyState
	 * Size -> 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
	 */
	class USpawnStaticMeshAnimNotifyState : public UAnimNotifyState
	{
	public:
		class UStaticMesh*                                           StaticMeshToSpawn;                                       // 0x0030(0x0008) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  BoneToSpawnOn;                                           // 0x0038(0x0008) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x0040(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                         bCastShadow;                                             // 0x0050(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bOnlyOwnerSee;                                           // 0x0051(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bOwnerNoSee;                                             // 0x0052(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bDestroyAtEnd;                                           // 0x0053(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSimulatePhysicsAtEnd;                                   // 0x0054(0x0001) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                  ForceVector;                                             // 0x0058(0x000C) Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TeamMoveToActivity
	 * Size -> 0x0000 (FullSize[0x0228] - InheritedSize[0x0228])
	 */
	class UTeamMoveToActivity : public UTeamBaseActivity
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Vent
	 * Size -> 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
	 */
	class AVent : public AActor
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.SpectateHUD
	 * Size -> 0x0000 (FullSize[0x0310] - InheritedSize[0x0310])
	 */
	class ASpectateHUD : public AHUD
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.GlassActor
	 * Size -> 0x0038 (FullSize[0x0258] - InheritedSize[0x0220])
	 */
	class AGlassActor : public AActor
	{
	public:
		class UDestructibleComponent*                                DestructibleWindow;                                      // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UMaterialInstance*>                             RandomGlassMaterial;                                     // 0x0228(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UMaterialInstance*>                             RandomShatteredGlassMaterial;                            // 0x0238(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class UMulticastInlineDelegate                               OnApplyDamageToWindow;                                   // 0x0248(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xF];                                   // 0x0249(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY

	public:
		void OnApplyDamageToWindow__DelegateSignature(float DamageAmount, const struct FVector& HitLocation, const struct FVector& ImpulseDir, float ImpulseStrength);
		void Multicast_TakeDamage(float DamageAmount, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
		void Multicast_ApplyDamageToWindow(float DamageAmount, const struct FVector& HitLocation, const struct FVector& ImpulseDir, float ImpulseStrength);
		class UMaterialInterface* GetRandomShatteredGlassMaterial();
		class UMaterialInterface* GetRandomGlassMaterial();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TeamPaperdollWidget
	 * Size -> 0x0008 (FullSize[0x0268] - InheritedSize[0x0260])
	 */
	class UTeamPaperdollWidget : public UUserWidget
	{
	public:
		class UImage*                                                Paperdoll_Image;                                         // 0x0260(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void InitializeWidget(ETeamType InTeam);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TraverseHoleActivity
	 * Size -> 0x00B8 (FullSize[0x02B0] - InheritedSize[0x01F8])
	 */
	class UTraverseHoleActivity : public UBaseActivity
	{
	public:
		class AWallHoleTraversal*                                    WallHoleTraversalActor;                                  // 0x01F8(0x0008) Edit, BlueprintVisible, ZeroConstructor, d.e.o.tate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bIgnoreCooldown : 1;                                     // 0x0200(0x0001) BIT_FIELD Edit, BlueprintVisible, d.e.o.tate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bFromNavLink : 1;                                        // 0x0200(0x0001) BIT_FIELD Edit, BlueprintVisible, d.e.o.tate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0201(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                          EntryAnim;                                               // 0x0208(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimMontage*                                          ExitAnim;                                                // 0x0210(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimMontage*                                          LoopAnim;                                                // 0x0218(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x90];                                  // 0x0220(0x0090) MISSED OFFSET (PADDING)

	public:
		void Tick_MoveToHole_State(float DeltaTime, float Uptime);
		void Tick_Move_State(float DeltaTime, float Uptime);
		void Tick_ExitHole_State(float DeltaTime, float Uptime);
		void Tick_EnterHole_State(float DeltaTime, float Uptime);
		bool ShouldMove();
		void Enter_MoveToHole_State();
		void Enter_Move_State();
		void Enter_ExitHole_State();
		void Enter_EnterHole_State();
		bool CanExitHole();
		bool CanEnterHole();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.WeaponWheel_ItemStat_Base
	 * Size -> 0x0000 (FullSize[0x0260] - InheritedSize[0x0260])
	 */
	class UWeaponWheel_ItemStat_Base : public UUserWidget
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TeamProgressScoreWidget
	 * Size -> 0x0028 (FullSize[0x02A0] - InheritedSize[0x0278])
	 */
	class UTeamProgressScoreWidget : public UBaseWidget
	{
	public:
		ETeamType                                                    Team;                                                    // 0x0278(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0279(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UProgressBar*                                          ProgressBar_LeftAligned;                                 // 0x0280(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                            Score_Text_LeftAligned;                                  // 0x0288(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UProgressBar*                                          ProgressBar_RightAligned;                                // 0x0290(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                            Score_Text_RightAligned;                                 // 0x0298(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.VIPEscortGM
	 * Size -> 0x0050 (FullSize[0x0800] - InheritedSize[0x07B0])
	 */
	class AVIPEscortGM : public AReadyOrNotGameMode_PVP
	{
	public:
		class UMulticastInlineDelegate                               OnVIPKilled;                                             // 0x07B0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0xF];                                   // 0x07B1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class UMulticastInlineDelegate                               OnVIPFreed;                                              // 0x07C0(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xF];                                   // 0x07C1(0x000F) FIX WRONG SIZE OF PREVIOUS PROPERTY
		class APlayerController*                                     VIPPlayer;                                               // 0x07D0(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APlayerStart_VIP_Spawn*                                ChosenVIPSpawn;                                          // 0x07D8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APlayerCharacter*                                      VIPCharacterClass;                                       // 0x07E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                  VIPSpawnTag;                                             // 0x07E8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        TimeToDeliverVIP;                                        // 0x07F0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        HostageHoldTime;                                         // 0x07F4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x8];                                   // 0x07F8(0x0008) MISSED OFFSET (PADDING)

	public:
		void VIPKilled(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
		void VIPFreed(class ACharacter* Freed, class ACharacter* Freer);
		void OnVIPKilledSignature__DelegateSignature(class AReadyOrNotCharacter* InstigatorCharacter, class AReadyOrNotCharacter* KilledCharacter);
		void OnVIPFreedSignature__DelegateSignature(class ACharacter* Freed, class ACharacter* Freer);
		bool IsVIPDead();
		bool IsVIPArrested();
		bool IsVIPAlive();
		class APlayerCharacter* GetVIPCharacter();
		ETeamType GetCurrentVIPTeam();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TugOfWarButton
	 * Size -> 0x0048 (FullSize[0x02C0] - InheritedSize[0x0278])
	 */
	class ATugOfWarButton : public AInteractionActor
	{
	public:
		ETeamType                                                    OnlyTeamUse;                                             // 0x0278(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0279(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ATugOfWarMover*                                        Mover;                                                   // 0x0280(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APlayerCharacter*                                      CurrentUser;                                             // 0x0288(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x30];                                  // 0x0290(0x0030) MISSED OFFSET (PADDING)

	public:
		void OnInfluencerStunned(class APlayerCharacter* StunnedCharacter, float Duration, EStunType StunType, class AActor* DamageCauser);
		void OnInfluencerKilled(class AActor* Causer, class ACharacter* InstigatorCharacter, class ACharacter* KilledCharacter, const struct FDamageEvent& DamageEvent, class APlayerState* LastPlayerState);
		void OnInfluencerArrested(class APlayerCharacter* ArrestedCharacter, class APlayerCharacter* InstigatorCharacter);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TeamSoftCoverCombatMove
	 * Size -> 0x0018 (FullSize[0x0230] - InheritedSize[0x0218])
	 */
	class UTeamSoftCoverCombatMove : public UBaseCombatMoveActivity
	{
	public:
		TArray<class UTeamSoftCoverCombatMove*>                      OtherSoftCoverCombatMoves;                               // 0x0218(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x0228(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.VIPEscortGS
	 * Size -> 0x0070 (FullSize[0x0A48] - InheritedSize[0x09D8])
	 */
	class AVIPEscortGS : public AReadyOrNotGameState
	{
	public:
		float                                                        HoldVIP_TimeRemaining;                                   // 0x09D8(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bVIPArrested;                                            // 0x09DC(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bCanKillVIP;                                             // 0x09DD(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x2];                                   // 0x09DE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerCharacter*                                      VIPCharacter;                                            // 0x09E0(0x0008) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APlayerController*                                     VIPPlayer;                                               // 0x09E8(0x0008) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AReadyOrNotPlayerState*                                VIPPlayerState;                                          // 0x09F0(0x0008) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETeamType                                                    LastWinningTeam;                                         // 0x09F8(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bVIPSelected;                                            // 0x09F9(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bVIPKilled;                                              // 0x09FA(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETeamType                                                    CurrentVIPTeam;                                          // 0x09FB(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x09FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReadyOrNotCharacter*                                  RecentArrester;                                          // 0x0A00(0x0008) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AReadyOrNotCharacter*                                  RecentFreer;                                             // 0x0A08(0x0008) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AReadyOrNotCharacter*                                  RecentVIPKiller;                                         // 0x0A10(0x0008) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                  VIPRescueText;                                           // 0x0A18(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                  VIPExecuteText;                                          // 0x0A30(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic

	public:
		void OnRep_VIPKilled();
		void OnRep_VIPArrested();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.WeaponWheelScript
	 * Size -> 0x0040 (FullSize[0x00A8] - InheritedSize[0x0068])
	 */
	class UWeaponWheelScript : public UBaseRadialMenuScript
	{
	public:
		class FText                                                  ItemName;                                                // 0x0068(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.i, Protected, NativeAccessSpecifierProtected
		class FText                                                  ItemCategory;                                            // 0x0080(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, d.e.o.i, Protected, NativeAccessSpecifierProtected
		class UWeaponWheelWidget*                                    WeaponWheelOwner;                                        // 0x0098(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class APlayerCharacter*                                      PlayerCharacter;                                         // 0x00A0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.TeamStatusWidget
	 * Size -> 0x0170 (FullSize[0x03E8] - InheritedSize[0x0278])
	 */
	class UTeamStatusWidget : public UBaseWidget
	{
	public:
		class UImage*                                                TeamEmblem_Image_LeftAligned;                            // 0x0278(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHorizontalBox*                                        Teammates_Container_LeftAligned;                         // 0x0280(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                                TeamEmblem_Image_RightAligned;                           // 0x0288(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHorizontalBox*                                        Teammates_Container_RightAligned;                        // 0x0290(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EHorizontalAlignment                                         Alignment;                                               // 0x0298(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0000[0x7];                                   // 0x0299(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSlateBrush                                           TeamEmblemBrush;                                         // 0x02A0(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected
		ETeamType                                                    Team;                                                    // 0x0328(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x7];                                   // 0x0329(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTeamPaperdollWidget*                                  PaperdollWidgetClass;                                    // 0x0330(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FText                                                  EmptyTeamText;                                           // 0x0338(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected
		struct FSlateColor                                           EmptyTeamTextColor;                                      // 0x0350(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected
		struct FSlateFontInfo                                        EmptyTeamTextFont;                                       // 0x0378(0x0058) Edit, BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UTeamPaperdollWidget*>                          TeamPaperdolls;                                          // 0x03D0(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		class UTextBlock*                                            EmptyTeam_Text;                                          // 0x03E0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void InitializeTeam();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.VIPTriggerBox
	 * Size -> 0x0000 (FullSize[0x0290] - InheritedSize[0x0290])
	 */
	class AVIPTriggerBox : public APVPTriggerBox
	{
	public:
		bool IsVIPInTriggerBox(class APlayerCharacter** OutVIPCharacter);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.GrenadeLauncher
	 * Size -> 0x0240 (FullSize[0x14D0] - InheritedSize[0x1290])
	 */
	class AGrenadeLauncher : public ABaseMagazineWeapon
	{
	public:
		TArray<class AGrenadeProjectile*>                            AppliedGrenadeProjectilePaths;                           // 0x1290(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		class AGrenadeProjectile*                                    LastSimulatedGrenade;                                    // 0x12A0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                        LaunchDistance;                                          // 0x12A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                        GrenadeBounciness;                                       // 0x12AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x8];                                   // 0x12B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                       BounceParticleEffect;                                    // 0x12B8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UFMODEvent*                                            BounceFMODEvent;                                         // 0x12C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FVector>                          FirstBouncePath;                                         // 0x12C8(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		struct FHitResult                                            FirstBounceHit;                                          // 0x12D8(0x0088) IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0001[0x8];                                   // 0x1360(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVector>                          SecondBouncePath;                                        // 0x1368(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		struct FHitResult                                            SecondBounceHit;                                         // 0x1378(0x0088) IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0002[0x8];                                   // 0x1400(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVector>                          ThirdBouncePath;                                         // 0x1408(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		struct FHitResult                                            ThirdBounceHit;                                          // 0x1418(0x0088) IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0003[0x8];                                   // 0x14A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVector_NetQuantize>                           CompletePath;                                            // 0x14A8(0x0010) Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate
		int32_t                                                      BouncePt1;                                               // 0x14B8(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                      BouncePt2;                                               // 0x14BC(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                      BouncePt3;                                               // 0x14C0(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0004[0xC];                                   // 0x14C4(0x000C) MISSED OFFSET (PADDING)

	public:
		void UpdateServerPath(TArray<struct FVector_NetQuantize> Path, int32_t Bounce1, int32_t Bounce2, int32_t Bounce3);
		void OnRep_GrenadePath();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.GrenadeProjectile
	 * Size -> 0x0058 (FullSize[0x03C0] - InheritedSize[0x0368])
	 */
	class AGrenadeProjectile : public ABulletProjectile
	{
	public:
		class URadialForceComponent*                                 DetonationRadialForce;                                   // 0x0368(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x4];                                   // 0x0370(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector_NetQuantize                                   ProjectileLocation;                                      // 0x0374(0x000C) Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DetonationTime;                                          // 0x0380(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        DetonationBetweenTime;                                   // 0x0384(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        ElapsedTime;                                             // 0x0388(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      DetonationCount;                                         // 0x038C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                      DetonationMax;                                           // 0x0390(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x4];                                   // 0x0394(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FGrenadeDamage>                                GrenadeDamage;                                           // 0x0398(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                         bIncreaseRadiusOverTime;                                 // 0x03A8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0002[0x7];                                   // 0x03A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFMODEvent*                                            DetonationSound;                                         // 0x03B0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bPlayDetonationSoundOnce : 1;                            // 0x03B8(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0003[0x7];                                   // 0x03B9(0x0007) MISSED OFFSET (PADDING)

	public:
		void OnDetonate_Blueprint();
		void OnDetonate();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.GunGameGM
	 * Size -> 0x01A0 (FullSize[0x0950] - InheritedSize[0x07B0])
	 */
	class AGunGameGM : public AReadyOrNotGameMode_PVP
	{
	public:
		float                                                        RespawnTime;                                             // 0x07B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bSuddenDeath;                                            // 0x07B4(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x07B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<TSoftClassPtr<class ABaseItem>>                       Itemlist;                                                // 0x07B8(0x0010) Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		struct FSavedLoadout                                         DefaultItems;                                            // 0x07C8(0x0178) Edit, NativeAccessSpecifierPublic
		int32_t                                                      KillsToProgress;                                         // 0x0940(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xC];                                   // 0x0944(0x000C) MISSED OFFSET (PADDING)

	public:
		TArray<class AReadyOrNotPlayerState*> FindTopKillers();
		class ABaseItem* EquipNextGun(class APlayerCharacter* Player, bool bAdvanceGunIdx);
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.GunGameGS
	 * Size -> 0x0000 (FullSize[0x09D8] - InheritedSize[0x09D8])
	 */
	class AGunGameGS : public AReadyOrNotGameState
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.HardcoreMoneyGM
	 * Size -> 0x0000 (FullSize[0x0AB0] - InheritedSize[0x0AB0])
	 */
	class AHardcoreMoneyGM : public ACoopGM
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.HardcoreMoneyGS
	 * Size -> 0x0000 (FullSize[0x0AD0] - InheritedSize[0x0AD0])
	 */
	class AHardcoreMoneyGS : public ACoopGS
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CSGasDamageType
	 * Size -> 0x0000 (FullSize[0x0620] - InheritedSize[0x0620])
	 */
	class UCSGasDamageType : public UStunDamage
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CTF_Flag
	 * Size -> 0x0028 (FullSize[0x0248] - InheritedSize[0x0220])
	 */
	class ACTF_Flag : public AActor
	{
	public:
		class USceneComponent*                                       SceneComponent;                                          // 0x0220(0x0008) Edit, ExportObject, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UStaticMeshComponent*                                  FlagMeshComponent;                                       // 0x0228(0x0008) Edit, ExportObject, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UBoxComponent*                                         CaptureBoxComponent;                                     // 0x0230(0x0008) Edit, ExportObject, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UObjectiveMarkerComponent*                             ObjectiveMarkerComponent;                                // 0x0238(0x0008) Edit, ExportObject, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                  BoneToAttach;                                            // 0x0240(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void ResetFlagTransforms();
		void OnFlagBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		class FName GetBoneToAttachName();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.CTF_FlagSpawnPoint
	 * Size -> 0x0000 (FullSize[0x0238] - InheritedSize[0x0238])
	 */
	class ACTF_FlagSpawnPoint : public AActorSpawnPoint
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.HardCoverCombatMove
	 * Size -> 0x02C8 (FullSize[0x04E0] - InheritedSize[0x0218])
	 */
	class UHardCoverCombatMove : public UBaseCombatMoveActivity
	{
	public:
		unsigned char                                                UnknownData_0000[0x68];                                  // 0x0218(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTakeCoverActivity*                                    TakeCoverActivity;                                       // 0x0280(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTakeCoverAtLandmarkActivity*                          TakeCoverAtLandmarkActivity;                             // 0x0288(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                                UnknownData_0001[0x1A8];                                 // 0x0290(0x01A8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AReadyOrNotCharacter*                                  LastTrackedEnemy;                                        // 0x0438(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FCoverInstigatorStimulus                              LastCoverInstigatorStimulus;                             // 0x0440(0x0050) NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FCoverInstigatorStimulus                              PendingCoverInstigatorStimulus;                          // 0x0490(0x0050) NoDestructor, Protected, NativeAccessSpecifierProtected

	public:
		void TrackNewEnemy(class AReadyOrNotCharacter* NewTrackedEnemy);
		void OnTakeCoverAtLandmarkActivityFinished(class UBaseActivity* Activity, class ACyberneticController* Controller);
		void OnTakeCoverActivityFinished(class UBaseActivity* Activity, class ACyberneticController* Controller);
		void CoverFoundDelegate__DelegateSignature();
		void CoverEventDelegate__DelegateSignature();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.KingOfTheHillGS
	 * Size -> 0x0008 (FullSize[0x09E0] - InheritedSize[0x09D8])
	 */
	class AKingOfTheHillGS : public AReadyOrNotGameState
	{
	public:
		class ATugOfWarMover*                                        Mover;                                                   // 0x09D8(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.KingOfTheHostageGM
	 * Size -> 0x0030 (FullSize[0x07E0] - InheritedSize[0x07B0])
	 */
	class AKingOfTheHostageGM : public AReadyOrNotGameMode_PVP
	{
	public:
		TArray<class APawn*>                                         SpawnedHostages;                                         // 0x07B0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x10];                                  // 0x07C0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                        Start_RoundTime;                                         // 0x07D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bBlueTeamOnAttack;                                       // 0x07D4(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0xB];                                   // 0x07D5(0x000B) MISSED OFFSET (PADDING)

	public:
		class APawn* SpawnHostage(class APawn* HostageClass, TArray<struct FVector> SpawnLocations);
		void OnHostageRescued__DelegateSignature(class APawn* HostageRescued);
		bool AreAllHostagesSafe();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.KingOfTheHostageGS
	 * Size -> 0x0008 (FullSize[0x09E0] - InheritedSize[0x09D8])
	 */
	class AKingOfTheHostageGS : public AReadyOrNotGameState
	{
	public:
		float                                                        RedTeam_RoundTimeRemaining;                              // 0x09D8(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        BlueTeam_RoundTimeRemaining;                             // 0x09DC(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.Ladder
	 * Size -> 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
	 */
	class ALadder : public AActor
	{
	public:
		class UBoxComponent*                                         BoxCollision;                                            // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UStaticMeshComponent*                                  LadderMesh;                                              // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, d.e.o.i, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.LadderSnapZone
	 * Size -> 0x0048 (FullSize[0x0268] - InheritedSize[0x0220])
	 */
	class ALadderSnapZone : public AActor
	{
	public:
		class UBoxComponent*                                         SelectionZone;                                           // 0x0220(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USkeletalMeshComponent*                                GhostLadder;                                             // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBoxComponent*                                         Collision;                                               // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                       SceneRoot;                                               // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial*                                             ValidPlacementMaterial;                                  // 0x0240(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial*                                             InvalidPlacementMaterial;                                // 0x0248(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                        MaxRetractedRungCount;                                   // 0x0250(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bHorizontal;                                             // 0x0254(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x0255(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ATelescopicLadder*                                     AttachedLadder;                                          // 0x0258(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bUnableToPlace;                                          // 0x0260(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x3];                                   // 0x0261(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                      NumberOverlappers;                                       // 0x0264(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void OnCollisionOverlapEnd(class UPrimitiveComponent* Comp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void OnCollisionOverlapBegin(class UPrimitiveComponent* Comp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		void Multicast_StopShowingGhostMesh();
		void Multicast_StartShowingGhostMesh(bool bAbleToPlace);
		void EnableCollision();
		void DisableCollision();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.LaserAttachment
	 * Size -> 0x0058 (FullSize[0x1050] - InheritedSize[0x0FF8])
	 */
	class ULaserAttachment : public UWeaponAttachment
	{
	public:
		class UParticleSystemComponent*                              LaserParticleComponent;                                  // 0x0FF8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UParticleSystemComponent*                              LaserBeamEndComponent;                                   // 0x1000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UParticleSystem*                                       LaserParticle;                                           // 0x1008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UParticleSystem*                                       LaserBeamEnd;                                            // 0x1010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector                                  BeamEndHitLocation;                                      // 0x1018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector                                  BeamEndHitNormal;                                        // 0x1024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                        BeamDistance;                                            // 0x1030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                         bRepOn;                                                  // 0x1034(0x0001) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                                UnknownData_0000[0x3];                                   // 0x1035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ALensFlare*                                            LensFlareClass;                                          // 0x1038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ALensFlare*                                            SpawnedLensFlare;                                        // 0x1040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                         bRequireNVG;                                             // 0x1048(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                         bLaserOffDueToNotBeingEquipped;                          // 0x1049(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                                UnknownData_0001[0x6];                                   // 0x104A(0x0006) MISSED OFFSET (PADDING)

	public:
		void ToggleLaser(bool bOn);
		void Server_SetBeamLocationAndNormal(const struct FVector& Location, const struct FVector& Normal, float Distance);
		void OnRep_On();
		bool IsLaserOn();
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavQuery_Suspect
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavQuery_Suspect : public UNavigationQueryFilter
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class ReadyOrNot.NavQuery_FlankingSuspect
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavQuery_FlankingSuspect : public UNavigationQueryFilter
	{
	public:
		static UClass* StaticClass();
	};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
